{"/home/travis/build/npmtest/node-npmtest-ava/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-ava/lib.npmtest_ava.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/lib.npmtest_ava.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":54}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_ava = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_ava = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-ava/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":47}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":61},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-ava && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_ava */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_ava","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_ava.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_ava.rollup.js'] =","            local.assetsDict['/assets.npmtest_ava.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_ava.__dirname + '/lib.npmtest_ava.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/index.js","s":{"1":2,"2":0,"3":2},"b":{"1":[0,2],"2":[2,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":8,"column":1}},"2":{"start":{"line":5,"column":1},"end":{"line":5,"column":48}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":40}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":0},"end":{"line":4,"column":0}},{"start":{"line":4,"column":0},"end":{"line":4,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":4},"end":{"line":4,"column":24}},{"start":{"line":4,"column":28},"end":{"line":4,"column":62}}]}},"code":["'use strict';","","// Ensure the same AVA install is loaded by the test file as by the test worker","if (process.env.AVA_PATH && process.env.AVA_PATH !== __dirname) {","\tmodule.exports = require(process.env.AVA_PATH); // eslint-disable-line import/no-dynamic-require","} else {","\tmodule.exports = require('./lib/main');","}",""],"l":{"4":2,"5":0,"7":2}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/main.js","s":{"1":4,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"test","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}}},"2":{"name":"exit","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":16}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":40}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"7":{"start":{"line":9,"column":0},"end":{"line":16,"column":3}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":25}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":21}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":33}},"11":{"start":{"line":26,"column":0},"end":{"line":50,"column":1}},"12":{"start":{"line":27,"column":1},"end":{"line":29,"column":2}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":9}},"14":{"start":{"line":31,"column":1},"end":{"line":31,"column":53}},"15":{"start":{"line":34,"column":1},"end":{"line":36,"column":2}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":9}},"17":{"start":{"line":38,"column":1},"end":{"line":42,"column":2}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":44}},"19":{"start":{"line":41,"column":2},"end":{"line":41,"column":21}},"20":{"start":{"line":44,"column":1},"end":{"line":44,"column":29}},"21":{"start":{"line":46,"column":1},"end":{"line":49,"column":2}},"22":{"start":{"line":47,"column":2},"end":{"line":47,"column":18}},"23":{"start":{"line":48,"column":2},"end":{"line":48,"column":9}},"24":{"start":{"line":52,"column":0},"end":{"line":58,"column":1}},"25":{"start":{"line":54,"column":1},"end":{"line":54,"column":26}},"26":{"start":{"line":56,"column":1},"end":{"line":56,"column":35}},"27":{"start":{"line":57,"column":1},"end":{"line":57,"column":34}},"28":{"start":{"line":60,"column":0},"end":{"line":96,"column":3}},"29":{"start":{"line":61,"column":1},"end":{"line":61,"column":48}},"30":{"start":{"line":62,"column":1},"end":{"line":62,"column":46}},"31":{"start":{"line":64,"column":1},"end":{"line":67,"column":2}},"32":{"start":{"line":65,"column":2},"end":{"line":65,"column":48}},"33":{"start":{"line":66,"column":2},"end":{"line":66,"column":9}},"34":{"start":{"line":69,"column":1},"end":{"line":72,"column":4}},"35":{"start":{"line":74,"column":1},"end":{"line":74,"column":25}},"36":{"start":{"line":76,"column":1},"end":{"line":91,"column":4}},"37":{"start":{"line":80,"column":2},"end":{"line":80,"column":29}},"38":{"start":{"line":82,"column":2},"end":{"line":90,"column":6}},"39":{"start":{"line":84,"column":4},"end":{"line":84,"column":31}},"40":{"start":{"line":86,"column":4},"end":{"line":86,"column":18}},"41":{"start":{"line":89,"column":4},"end":{"line":89,"column":43}},"42":{"start":{"line":93,"column":1},"end":{"line":95,"column":4}},"43":{"start":{"line":94,"column":2},"end":{"line":94,"column":9}},"44":{"start":{"line":98,"column":0},"end":{"line":98,"column":30}},"45":{"start":{"line":103,"column":0},"end":{"line":103,"column":38}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},{"start":{"line":27,"column":1},"end":{"line":27,"column":1}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},{"start":{"line":34,"column":1},"end":{"line":34,"column":1}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":5},"end":{"line":34,"column":14}},{"start":{"line":34,"column":18},"end":{"line":34,"column":39}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},{"start":{"line":38,"column":1},"end":{"line":38,"column":1}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":1},"end":{"line":46,"column":1}},{"start":{"line":46,"column":1},"end":{"line":46,"column":1}}]},"6":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":5},"end":{"line":46,"column":13}},{"start":{"line":46,"column":17},"end":{"line":46,"column":30}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},{"start":{"line":64,"column":1},"end":{"line":64,"column":1}}]}},"code":["'use strict';","const worker = require('./test-worker');","const adapter = require('./process-adapter');","const serializeError = require('./serialize-error');","const globals = require('./globals');","const Runner = require('./runner');","","const opts = globals.options;","const runner = new Runner({","\tbail: opts.failFast,","\tfailWithoutAssertions: opts.failWithoutAssertions,","\tfile: opts.file,","\tmatch: opts.match,","\tserial: opts.serial,","\tupdateSnapshots: opts.updateSnapshots","});","","worker.setRunner(runner);","","// If fail-fast is enabled, use this variable to detect","// that no more tests should be logged","let isFailed = false;","","Error.stackTraceLimit = Infinity;","","function test(props) {","\tif (isFailed) {","\t\treturn;","\t}","","\tconst hasError = typeof props.error !== 'undefined';","","\t// Don't display anything if it's a passed hook","\tif (!hasError && props.type !== 'test') {","\t\treturn;","\t}","","\tif (hasError) {","\t\tprops.error = serializeError(props.error);","\t} else {","\t\tprops.error = null;","\t}","","\tadapter.send('test', props);","","\tif (hasError && opts.failFast) {","\t\tisFailed = true;","\t\texit();","\t}","}","","function exit() {","\t// Reference the IPC channel now that tests have finished running.","\tadapter.ipcChannel.ref();","","\tconst stats = runner.buildStats();","\tadapter.send('results', {stats});","}","","globals.setImmediate(() => {","\tconst hasExclusive = runner.tests.hasExclusive;","\tconst numberOfTests = runner.tests.testCount;","","\tif (numberOfTests === 0) {","\t\tadapter.send('no-tests', {avaRequired: true});","\t\treturn;","\t}","","\tadapter.send('stats', {","\t\ttestCount: numberOfTests,","\t\thasExclusive","\t});","","\trunner.on('test', test);","","\tprocess.on('ava-run', options => {","\t\t// Unreference the IPC channel. This stops it from keeping the event loop","\t\t// busy, which means the `beforeExit` event can be used to detect when tests","\t\t// stall.","\t\tadapter.ipcChannel.unref();","","\t\trunner.run(options)","\t\t\t.then(() => {","\t\t\t\trunner.saveSnapshotState();","","\t\t\t\treturn exit();","\t\t\t})","\t\t\t.catch(err => {","\t\t\t\tprocess.emit('uncaughtException', err);","\t\t\t});","\t});","","\tprocess.on('ava-init-exit', () => {","\t\texit();","\t});","});","","module.exports = runner.chain;","","// TypeScript imports the `default` property for","// an ES2015 default import (`import test from 'ava'`)","// See: https://github.com/Microsoft/TypeScript/issues/2242#issuecomment-83694181","module.exports.default = runner.chain;",""],"l":{"2":4,"3":0,"4":0,"5":0,"6":0,"8":0,"9":0,"18":0,"22":0,"24":0,"26":1,"27":0,"28":0,"31":0,"34":0,"35":0,"38":0,"39":0,"41":0,"44":0,"46":0,"47":0,"48":0,"52":1,"54":0,"56":0,"57":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"69":0,"74":0,"76":0,"80":0,"82":0,"84":0,"86":0,"89":0,"93":0,"94":0,"98":0,"103":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test-worker.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test-worker.js","s":{"1":4,"2":4,"3":4,"4":4,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":4,"12":4,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"b":{"1":[4,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"attributeLeakedError","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":1},"end":{"line":6,"column":30}},"2":{"start":{"line":7,"column":1},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":1},"end":{"line":9,"column":53}},"4":{"start":{"line":10,"column":1},"end":{"line":17,"column":2}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":49}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":16}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":129}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":60}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":32}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":45}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"14":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"15":{"start":{"line":28,"column":0},"end":{"line":28,"column":26}},"16":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}},"18":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"19":{"start":{"line":35,"column":0},"end":{"line":35,"column":38}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":33}},"22":{"start":{"line":40,"column":0},"end":{"line":40,"column":24}},"23":{"start":{"line":41,"column":0},"end":{"line":41,"column":58}},"24":{"start":{"line":44,"column":0},"end":{"line":44,"column":18}},"25":{"start":{"line":45,"column":0},"end":{"line":47,"column":2}},"26":{"start":{"line":46,"column":1},"end":{"line":46,"column":20}},"27":{"start":{"line":49,"column":0},"end":{"line":49,"column":18}},"28":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"29":{"start":{"line":53,"column":1},"end":{"line":53,"column":48}},"30":{"start":{"line":56,"column":0},"end":{"line":62,"column":1}},"31":{"start":{"line":57,"column":1},"end":{"line":59,"column":2}},"32":{"start":{"line":58,"column":2},"end":{"line":58,"column":15}},"33":{"start":{"line":61,"column":1},"end":{"line":61,"column":41}},"34":{"start":{"line":64,"column":0},"end":{"line":64,"column":39}},"35":{"start":{"line":65,"column":0},"end":{"line":69,"column":3}},"36":{"start":{"line":66,"column":1},"end":{"line":68,"column":2}},"37":{"start":{"line":67,"column":2},"end":{"line":67,"column":36}},"38":{"start":{"line":71,"column":0},"end":{"line":95,"column":3}},"39":{"start":{"line":72,"column":1},"end":{"line":74,"column":2}},"40":{"start":{"line":73,"column":2},"end":{"line":73,"column":9}},"41":{"start":{"line":76,"column":1},"end":{"line":76,"column":16}},"42":{"start":{"line":77,"column":1},"end":{"line":88,"column":2}},"43":{"start":{"line":78,"column":2},"end":{"line":78,"column":41}},"44":{"start":{"line":81,"column":2},"end":{"line":81,"column":66}},"45":{"start":{"line":82,"column":2},"end":{"line":87,"column":4}},"46":{"start":{"line":92,"column":1},"end":{"line":92,"column":26}},"47":{"start":{"line":94,"column":1},"end":{"line":94,"column":60}},"48":{"start":{"line":97,"column":0},"end":{"line":97,"column":24}},"49":{"start":{"line":98,"column":0},"end":{"line":126,"column":3}},"50":{"start":{"line":100,"column":1},"end":{"line":102,"column":2}},"51":{"start":{"line":101,"column":2},"end":{"line":101,"column":9}},"52":{"start":{"line":103,"column":1},"end":{"line":103,"column":20}},"53":{"start":{"line":105,"column":1},"end":{"line":106,"column":69}},"54":{"start":{"line":106,"column":23},"end":{"line":106,"column":67}},"55":{"start":{"line":108,"column":1},"end":{"line":120,"column":2}},"56":{"start":{"line":109,"column":2},"end":{"line":117,"column":5}},"57":{"start":{"line":110,"column":3},"end":{"line":110,"column":33}},"58":{"start":{"line":111,"column":3},"end":{"line":115,"column":4}},"59":{"start":{"line":112,"column":4},"end":{"line":114,"column":6}},"60":{"start":{"line":116,"column":3},"end":{"line":116,"column":33}},"61":{"start":{"line":119,"column":2},"end":{"line":119,"column":52}},"62":{"start":{"line":125,"column":1},"end":{"line":125,"column":42}},"63":{"start":{"line":128,"column":0},"end":{"line":130,"column":3}},"64":{"start":{"line":129,"column":1},"end":{"line":129,"column":17}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":1},"end":{"line":35,"column":13}},{"start":{"line":35,"column":17},"end":{"line":35,"column":19}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":0},"end":{"line":52,"column":0}},{"start":{"line":52,"column":0},"end":{"line":52,"column":0}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":1},"end":{"line":57,"column":1}},{"start":{"line":57,"column":1},"end":{"line":57,"column":1}}]},"5":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},{"start":{"line":66,"column":1},"end":{"line":66,"column":1}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},{"start":{"line":72,"column":1},"end":{"line":72,"column":1}}]},"7":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":1},"end":{"line":100,"column":1}},{"start":{"line":100,"column":1},"end":{"line":100,"column":1}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":1},"end":{"line":108,"column":1}},{"start":{"line":108,"column":1},"end":{"line":108,"column":1}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":3},"end":{"line":111,"column":3}},{"start":{"line":111,"column":3},"end":{"line":111,"column":3}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":7},"end":{"line":111,"column":21}},{"start":{"line":111,"column":25},"end":{"line":111,"column":59}}]}},"code":["'use strict';","","// Check if the test is being run without AVA cli","{","\t/* eslint-disable import/order */","\tconst path = require('path');","\tconst chalk = require('chalk');","","\tconst isForked = typeof process.send === 'function';","\tif (!isForked) {","\t\tconst fp = path.relative('.', process.argv[1]);","","\t\tconsole.log();","\t\tconsole.error('Test files must be run with the AVA CLI:\\n\\n    ' + chalk.grey.dim('$') + ' ' + chalk.cyan('ava ' + fp) + '\\n');","","\t\tprocess.exit(1); // eslint-disable-line unicorn/no-process-exit","\t}","}","","/* eslint-enable import/order */","const Bluebird = require('bluebird');","const currentlyUnhandled = require('currently-unhandled')();","const isObj = require('is-obj');","const adapter = require('./process-adapter');","const globals = require('./globals');","const serializeError = require('./serialize-error');","","const opts = adapter.opts;","const testPath = opts.file;","globals.options = opts;","","// Bluebird specific","Bluebird.longStackTraces();","","(opts.require || []).forEach(require);","","adapter.installSourceMapSupport();","adapter.installPrecompilerHook();","","const dependencies = [];","adapter.installDependencyTracking(dependencies, testPath);","","// Set when main.js is required (since test files should have `require('ava')`).","let runner = null;","exports.setRunner = newRunner => {","\trunner = newRunner;","};","","require(testPath); // eslint-disable-line import/no-dynamic-require","","// If AVA was not required, show an error","if (!runner) {","\tadapter.send('no-tests', {avaRequired: false});","}","","function attributeLeakedError(err) {","\tif (!runner) {","\t\treturn false;","\t}","","\treturn runner.attributeLeakedError(err);","}","","const attributedRejections = new Set();","process.on('unhandledRejection', (reason, promise) => {","\tif (attributeLeakedError(reason)) {","\t\tattributedRejections.add(promise);","\t}","});","","process.on('uncaughtException', exception => {","\tif (attributeLeakedError(exception)) {","\t\treturn;","\t}","","\tlet serialized;","\ttry {","\t\tserialized = serializeError(exception);","\t} catch (ignore) { // eslint-disable-line unicorn/catch-error-name","\t\t// Avoid using serializeError","\t\tconst err = new Error('Failed to serialize uncaught exception');","\t\tserialized = {","\t\t\tavaAssertionError: false,","\t\t\tname: err.name,","\t\t\tmessage: err.message,","\t\t\tstack: err.stack","\t\t};","\t}","","\t// Ensure the IPC channel is refereced. The uncaught exception will kick off","\t// the teardown sequence, for which the messages must be received.","\tadapter.ipcChannel.ref();","","\tadapter.send('uncaughtException', {exception: serialized});","});","","let tearingDown = false;","process.on('ava-teardown', () => {","\t// AVA-teardown can be sent more than once","\tif (tearingDown) {","\t\treturn;","\t}","\ttearingDown = true;","","\tlet rejections = currentlyUnhandled()","\t\t.filter(rejection => !attributedRejections.has(rejection.promise));","","\tif (rejections.length > 0) {","\t\trejections = rejections.map(rejection => {","\t\t\tlet reason = rejection.reason;","\t\t\tif (!isObj(reason) || typeof reason.message !== 'string') {","\t\t\t\treason = {","\t\t\t\t\tmessage: String(reason)","\t\t\t\t};","\t\t\t}","\t\t\treturn serializeError(reason);","\t\t});","","\t\tadapter.send('unhandledRejections', {rejections});","\t}","","\t// Include dependencies in the final teardown message. This ensures the full","\t// set of dependencies is included no matter how the process exits, unless","\t// it flat out crashes.","\tadapter.send('teardown', {dependencies});","});","","process.on('ava-exit', () => {","\tprocess.exit(0); // eslint-disable-line xo/no-process-exit","});",""],"l":{"6":4,"7":4,"9":4,"10":4,"11":4,"13":4,"14":4,"16":4,"21":4,"22":4,"23":4,"24":4,"25":0,"26":0,"28":0,"29":0,"30":0,"33":0,"35":0,"37":0,"38":0,"40":0,"41":0,"44":0,"45":0,"46":0,"49":0,"52":0,"53":0,"56":1,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"67":0,"71":0,"72":0,"73":0,"76":0,"77":0,"78":0,"81":0,"82":0,"92":0,"94":0,"97":0,"98":0,"100":0,"101":0,"103":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"116":0,"119":0,"125":0,"128":0,"129":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/process-adapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/process-adapter.js","s":{"1":6,"2":6,"3":6,"4":6,"5":6,"6":6,"7":0,"8":0,"9":0,"10":6,"11":0,"12":6,"13":6,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"b":{"1":[0,0],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":28}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":19},"end":{"line":67,"column":28}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"6":{"start":{"line":9,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":10,"column":1},"end":{"line":12,"column":2}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":9}},"9":{"start":{"line":14,"column":1},"end":{"line":14,"column":42}},"10":{"start":{"line":17,"column":0},"end":{"line":23,"column":2}},"11":{"start":{"line":18,"column":1},"end":{"line":22,"column":4}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":57}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}},"15":{"start":{"line":33,"column":0},"end":{"line":48,"column":1}},"16":{"start":{"line":34,"column":1},"end":{"line":34,"column":29}},"17":{"start":{"line":35,"column":1},"end":{"line":35,"column":49}},"18":{"start":{"line":36,"column":1},"end":{"line":36,"column":37}},"19":{"start":{"line":38,"column":1},"end":{"line":38,"column":28}},"20":{"start":{"line":39,"column":1},"end":{"line":39,"column":27}},"21":{"start":{"line":41,"column":1},"end":{"line":47,"column":3}},"22":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"23":{"start":{"line":43,"column":3},"end":{"line":43,"column":15}},"24":{"start":{"line":46,"column":2},"end":{"line":46,"column":20}},"25":{"start":{"line":50,"column":0},"end":{"line":58,"column":1}},"26":{"start":{"line":53,"column":1},"end":{"line":55,"column":2}},"27":{"start":{"line":54,"column":2},"end":{"line":54,"column":32}},"28":{"start":{"line":57,"column":1},"end":{"line":57,"column":25}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":33}},"30":{"start":{"line":61,"column":0},"end":{"line":61,"column":31}},"31":{"start":{"line":63,"column":0},"end":{"line":76,"column":2}},"32":{"start":{"line":64,"column":1},"end":{"line":75,"column":4}},"33":{"start":{"line":68,"column":3},"end":{"line":73,"column":4}},"34":{"start":{"line":69,"column":4},"end":{"line":72,"column":6}},"35":{"start":{"line":78,"column":0},"end":{"line":89,"column":2}},"36":{"start":{"line":79,"column":1},"end":{"line":88,"column":4}},"37":{"start":{"line":80,"column":2},"end":{"line":80,"column":49}},"38":{"start":{"line":82,"column":2},"end":{"line":85,"column":3}},"39":{"start":{"line":83,"column":3},"end":{"line":83,"column":78}},"40":{"start":{"line":84,"column":3},"end":{"line":84,"column":76}},"41":{"start":{"line":87,"column":2},"end":{"line":87,"column":14}},"42":{"start":{"line":91,"column":0},"end":{"line":103,"column":2}},"43":{"start":{"line":92,"column":1},"end":{"line":102,"column":4}},"44":{"start":{"line":93,"column":2},"end":{"line":93,"column":49}},"45":{"start":{"line":95,"column":2},"end":{"line":101,"column":4}},"46":{"start":{"line":96,"column":3},"end":{"line":98,"column":4}},"47":{"start":{"line":97,"column":4},"end":{"line":97,"column":32}},"48":{"start":{"line":100,"column":3},"end":{"line":100,"column":36}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":21},"end":{"line":27,"column":36}},{"start":{"line":27,"column":40},"end":{"line":27,"column":56}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":0},"end":{"line":33,"column":0}},{"start":{"line":33,"column":0},"end":{"line":33,"column":0}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":26},"end":{"line":35,"column":42}},{"start":{"line":35,"column":46},"end":{"line":35,"column":48}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"6":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":14}},{"start":{"line":42,"column":18},"end":{"line":42,"column":39}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":0},"end":{"line":50,"column":0}},{"start":{"line":50,"column":0},"end":{"line":50,"column":0}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},{"start":{"line":53,"column":1},"end":{"line":53,"column":1}}]},"9":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":3},"end":{"line":68,"column":3}},{"start":{"line":68,"column":3},"end":{"line":68,"column":3}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":3},"end":{"line":96,"column":3}},{"start":{"line":96,"column":3},"end":{"line":96,"column":3}}]}},"code":["'use strict';","const fs = require('fs');","const path = require('path');","const debug = require('debug')('ava');","const sourceMapSupport = require('source-map-support');","const installPrecompiler = require('require-precompiled');","","// Parse and re-emit AVA messages","process.on('message', message => {","\tif (!message.ava) {","\t\treturn;","\t}","","\tprocess.emit(message.name, message.data);","});","","exports.send = (name, data) => {","\tprocess.send({","\t\tname: `ava-${name}`,","\t\tdata,","\t\tava: true","\t});","};","","// `process.channel` was added in Node.js 7.1.0, but the channel was available","// through an undocumented API as `process._channel`.","exports.ipcChannel = process.channel || process._channel;","","const opts = JSON.parse(process.argv[2]);","exports.opts = opts;","","// Fake TTY support","if (opts.tty) {","\tprocess.stdout.isTTY = true;","\tprocess.stdout.columns = opts.tty.columns || 80;","\tprocess.stdout.rows = opts.tty.rows;","","\tconst tty = require('tty');","\tconst isatty = tty.isatty;","","\ttty.isatty = function (fd) {","\t\tif (fd === 1 || fd === process.stdout) {","\t\t\treturn true;","\t\t}","","\t\treturn isatty(fd);","\t};","}","","if (debug.enabled) {","\t// Forward the `time-require` `--sorted` flag.","\t// Intended for internal optimization tests only.","\tif (opts._sorted) {","\t\tprocess.argv.push('--sorted');","\t}","","\trequire('time-require'); // eslint-disable-line import/no-unassigned-import","}","","const sourceMapCache = new Map();","const cacheDir = opts.cacheDir;","","exports.installSourceMapSupport = () => {","\tsourceMapSupport.install({","\t\tenvironment: 'node',","\t\thandleUncaughtExceptions: false,","\t\tretrieveSourceMap(source) {","\t\t\tif (sourceMapCache.has(source)) {","\t\t\t\treturn {","\t\t\t\t\turl: source,","\t\t\t\t\tmap: fs.readFileSync(sourceMapCache.get(source), 'utf8')","\t\t\t\t};","\t\t\t}","\t\t}","\t});","};","","exports.installPrecompilerHook = () => {","\tinstallPrecompiler(filename => {","\t\tconst precompiled = opts.precompiled[filename];","","\t\tif (precompiled) {","\t\t\tsourceMapCache.set(filename, path.join(cacheDir, `${precompiled}.js.map`));","\t\t\treturn fs.readFileSync(path.join(cacheDir, `${precompiled}.js`), 'utf8');","\t\t}","","\t\treturn null;","\t});","};","","exports.installDependencyTracking = (dependencies, testPath) => {","\tObject.keys(require.extensions).forEach(ext => {","\t\tconst wrappedHandler = require.extensions[ext];","","\t\trequire.extensions[ext] = (module, filename) => {","\t\t\tif (filename !== testPath) {","\t\t\t\tdependencies.push(filename);","\t\t\t}","","\t\t\twrappedHandler(module, filename);","\t\t};","\t});","};",""],"l":{"2":6,"3":6,"4":6,"5":6,"6":6,"9":6,"10":0,"11":0,"14":0,"17":6,"18":0,"27":6,"29":6,"30":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"43":0,"46":0,"50":0,"53":0,"54":0,"57":0,"60":0,"61":0,"63":0,"64":0,"68":0,"69":0,"78":0,"79":0,"80":0,"82":0,"83":0,"84":0,"87":0,"91":0,"92":0,"93":0,"95":0,"96":0,"97":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/api.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/api.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"resolveModules","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":33}}},"2":{"name":"getBlankResults","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":12},"end":{"line":49,"column":22}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":9},"end":{"line":56,"column":37}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}}},"6":{"name":"(anonymous_6)","line":73,"loc":{"start":{"line":73,"column":11},"end":{"line":73,"column":23}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":14},"end":{"line":79,"column":26}}},"8":{"name":"(anonymous_8)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":27}}},"9":{"name":"(anonymous_9)","line":92,"loc":{"start":{"line":92,"column":18},"end":{"line":92,"column":26}}},"10":{"name":"(anonymous_10)","line":118,"loc":{"start":{"line":118,"column":19},"end":{"line":118,"column":22}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":5},"end":{"line":133,"column":22}}},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":21},"end":{"line":170,"column":29}}},"13":{"name":"(anonymous_13)","line":215,"loc":{"start":{"line":215,"column":13},"end":{"line":215,"column":30}}},"14":{"name":"(anonymous_14)","line":221,"loc":{"start":{"line":221,"column":16},"end":{"line":221,"column":35}}},"15":{"name":"(anonymous_15)","line":294,"loc":{"start":{"line":294,"column":13},"end":{"line":294,"column":45}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":55}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":25}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":56}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":64}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":44}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":44}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":35}},"20":{"start":{"line":22,"column":0},"end":{"line":32,"column":1}},"21":{"start":{"line":23,"column":1},"end":{"line":31,"column":4}},"22":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"23":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"24":{"start":{"line":27,"column":3},"end":{"line":27,"column":66}},"25":{"start":{"line":30,"column":2},"end":{"line":30,"column":20}},"26":{"start":{"line":34,"column":0},"end":{"line":46,"column":1}},"27":{"start":{"line":35,"column":1},"end":{"line":45,"column":3}},"28":{"start":{"line":50,"column":2},"end":{"line":50,"column":10}},"29":{"start":{"line":51,"column":2},"end":{"line":51,"column":17}},"30":{"start":{"line":53,"column":2},"end":{"line":53,"column":53}},"31":{"start":{"line":54,"column":2},"end":{"line":54,"column":62}},"32":{"start":{"line":57,"column":2},"end":{"line":57,"column":53}},"33":{"start":{"line":58,"column":2},"end":{"line":58,"column":66}},"34":{"start":{"line":59,"column":2},"end":{"line":59,"column":46}},"35":{"start":{"line":60,"column":2},"end":{"line":60,"column":36}},"36":{"start":{"line":62,"column":2},"end":{"line":62,"column":65}},"37":{"start":{"line":63,"column":2},"end":{"line":63,"column":48}},"38":{"start":{"line":64,"column":2},"end":{"line":64,"column":33}},"39":{"start":{"line":66,"column":2},"end":{"line":66,"column":17}},"40":{"start":{"line":69,"column":2},"end":{"line":71,"column":45}},"41":{"start":{"line":71,"column":18},"end":{"line":71,"column":43}},"42":{"start":{"line":74,"column":2},"end":{"line":74,"column":43}},"43":{"start":{"line":75,"column":2},"end":{"line":75,"column":111}},"44":{"start":{"line":76,"column":2},"end":{"line":76,"column":36}},"45":{"start":{"line":77,"column":2},"end":{"line":77,"column":28}},"46":{"start":{"line":80,"column":2},"end":{"line":80,"column":43}},"47":{"start":{"line":82,"column":2},"end":{"line":84,"column":14}},"48":{"start":{"line":83,"column":3},"end":{"line":83,"column":30}},"49":{"start":{"line":86,"column":2},"end":{"line":86,"column":28}},"50":{"start":{"line":87,"column":2},"end":{"line":87,"column":48}},"51":{"start":{"line":90,"column":2},"end":{"line":90,"column":35}},"52":{"start":{"line":93,"column":2},"end":{"line":93,"column":61}},"53":{"start":{"line":94,"column":2},"end":{"line":94,"column":33}},"54":{"start":{"line":96,"column":2},"end":{"line":104,"column":3}},"55":{"start":{"line":97,"column":3},"end":{"line":100,"column":6}},"56":{"start":{"line":101,"column":3},"end":{"line":103,"column":4}},"57":{"start":{"line":102,"column":4},"end":{"line":102,"column":24}},"58":{"start":{"line":106,"column":2},"end":{"line":106,"column":35}},"59":{"start":{"line":108,"column":2},"end":{"line":108,"column":66}},"60":{"start":{"line":109,"column":2},"end":{"line":116,"column":6}},"61":{"start":{"line":111,"column":4},"end":{"line":115,"column":7}},"62":{"start":{"line":119,"column":2},"end":{"line":119,"column":32}},"63":{"start":{"line":126,"column":2},"end":{"line":131,"column":6}},"64":{"start":{"line":129,"column":4},"end":{"line":129,"column":55}},"65":{"start":{"line":130,"column":4},"end":{"line":130,"column":42}},"66":{"start":{"line":134,"column":2},"end":{"line":134,"column":26}},"67":{"start":{"line":136,"column":2},"end":{"line":141,"column":5}},"68":{"start":{"line":143,"column":2},"end":{"line":143,"column":42}},"69":{"start":{"line":145,"column":2},"end":{"line":149,"column":3}},"70":{"start":{"line":146,"column":3},"end":{"line":146,"column":64}},"71":{"start":{"line":147,"column":3},"end":{"line":147,"column":37}},"72":{"start":{"line":148,"column":3},"end":{"line":148,"column":37}},"73":{"start":{"line":151,"column":2},"end":{"line":168,"column":6}},"74":{"start":{"line":152,"column":15},"end":{"line":152,"column":40}},"75":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"76":{"start":{"line":155,"column":5},"end":{"line":155,"column":35}},"77":{"start":{"line":158,"column":4},"end":{"line":158,"column":18}},"78":{"start":{"line":159,"column":4},"end":{"line":165,"column":5}},"79":{"start":{"line":160,"column":5},"end":{"line":160,"column":76}},"80":{"start":{"line":161,"column":5},"end":{"line":161,"column":66}},"81":{"start":{"line":164,"column":5},"end":{"line":164,"column":56}},"82":{"start":{"line":167,"column":4},"end":{"line":167,"column":21}},"83":{"start":{"line":171,"column":2},"end":{"line":171,"column":69}},"84":{"start":{"line":172,"column":2},"end":{"line":172,"column":25}},"85":{"start":{"line":175,"column":2},"end":{"line":182,"column":5}},"86":{"start":{"line":176,"column":3},"end":{"line":176,"column":77}},"87":{"start":{"line":177,"column":3},"end":{"line":179,"column":4}},"88":{"start":{"line":178,"column":4},"end":{"line":178,"column":26}},"89":{"start":{"line":181,"column":3},"end":{"line":181,"column":21}},"90":{"start":{"line":184,"column":2},"end":{"line":184,"column":39}},"91":{"start":{"line":185,"column":2},"end":{"line":194,"column":3}},"92":{"start":{"line":186,"column":3},"end":{"line":193,"column":6}},"93":{"start":{"line":187,"column":4},"end":{"line":187,"column":136}},"94":{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},"95":{"start":{"line":189,"column":5},"end":{"line":189,"column":27}},"96":{"start":{"line":192,"column":4},"end":{"line":192,"column":22}},"97":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"98":{"start":{"line":197,"column":3},"end":{"line":197,"column":30}},"99":{"start":{"line":200,"column":2},"end":{"line":213,"column":6}},"100":{"start":{"line":201,"column":21},"end":{"line":201,"column":30}},"101":{"start":{"line":203,"column":4},"end":{"line":203,"column":42}},"102":{"start":{"line":204,"column":4},"end":{"line":204,"column":55}},"103":{"start":{"line":205,"column":4},"end":{"line":205,"column":49}},"104":{"start":{"line":206,"column":4},"end":{"line":208,"column":5}},"105":{"start":{"line":207,"column":5},"end":{"line":207,"column":24}},"106":{"start":{"line":210,"column":4},"end":{"line":210,"column":56}},"107":{"start":{"line":212,"column":4},"end":{"line":212,"column":24}},"108":{"start":{"line":216,"column":2},"end":{"line":219,"column":5}},"109":{"start":{"line":222,"column":2},"end":{"line":222,"column":19}},"110":{"start":{"line":223,"column":2},"end":{"line":223,"column":19}},"111":{"start":{"line":226,"column":2},"end":{"line":230,"column":5}},"112":{"start":{"line":227,"column":3},"end":{"line":229,"column":6}},"113":{"start":{"line":228,"column":4},"end":{"line":228,"column":16}},"114":{"start":{"line":232,"column":2},"end":{"line":292,"column":6}},"115":{"start":{"line":234,"column":4},"end":{"line":234,"column":28}},"116":{"start":{"line":238,"column":4},"end":{"line":248,"column":7}},"117":{"start":{"line":239,"column":5},"end":{"line":239,"column":42}},"118":{"start":{"line":240,"column":5},"end":{"line":240,"column":59}},"119":{"start":{"line":241,"column":5},"end":{"line":241,"column":22}},"120":{"start":{"line":242,"column":5},"end":{"line":242,"column":31}},"121":{"start":{"line":243,"column":5},"end":{"line":243,"column":25}},"122":{"start":{"line":245,"column":5},"end":{"line":245,"column":22}},"123":{"start":{"line":246,"column":5},"end":{"line":246,"column":21}},"124":{"start":{"line":247,"column":5},"end":{"line":247,"column":32}},"125":{"start":{"line":251,"column":4},"end":{"line":256,"column":5}},"126":{"start":{"line":252,"column":5},"end":{"line":252,"column":67}},"127":{"start":{"line":253,"column":5},"end":{"line":253,"column":26}},"128":{"start":{"line":254,"column":5},"end":{"line":254,"column":22}},"129":{"start":{"line":255,"column":5},"end":{"line":255,"column":32}},"130":{"start":{"line":258,"column":4},"end":{"line":258,"column":61}},"131":{"start":{"line":259,"column":4},"end":{"line":261,"column":6}},"132":{"start":{"line":263,"column":4},"end":{"line":269,"column":7}},"133":{"start":{"line":264,"column":5},"end":{"line":268,"column":8}},"134":{"start":{"line":265,"column":6},"end":{"line":265,"column":22}},"135":{"start":{"line":266,"column":6},"end":{"line":266,"column":40}},"136":{"start":{"line":267,"column":6},"end":{"line":267,"column":31}},"137":{"start":{"line":272,"column":4},"end":{"line":272,"column":38}},"138":{"start":{"line":273,"column":4},"end":{"line":273,"column":23}},"139":{"start":{"line":277,"column":4},"end":{"line":281,"column":5}},"140":{"start":{"line":278,"column":5},"end":{"line":280,"column":8}},"141":{"start":{"line":279,"column":6},"end":{"line":279,"column":28}},"142":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"143":{"start":{"line":286,"column":5},"end":{"line":286,"column":36}},"144":{"start":{"line":289,"column":4},"end":{"line":289,"column":38}},"145":{"start":{"line":291,"column":4},"end":{"line":291,"column":21}},"146":{"start":{"line":295,"column":2},"end":{"line":295,"column":19}},"147":{"start":{"line":296,"column":2},"end":{"line":296,"column":19}},"148":{"start":{"line":298,"column":2},"end":{"line":302,"column":5}},"149":{"start":{"line":299,"column":3},"end":{"line":301,"column":6}},"150":{"start":{"line":300,"column":4},"end":{"line":300,"column":16}},"151":{"start":{"line":304,"column":2},"end":{"line":346,"column":6}},"152":{"start":{"line":306,"column":4},"end":{"line":306,"column":28}},"153":{"start":{"line":310,"column":4},"end":{"line":325,"column":7}},"154":{"start":{"line":311,"column":5},"end":{"line":311,"column":42}},"155":{"start":{"line":312,"column":5},"end":{"line":312,"column":59}},"156":{"start":{"line":313,"column":5},"end":{"line":313,"column":22}},"157":{"start":{"line":316,"column":5},"end":{"line":318,"column":7}},"158":{"start":{"line":320,"column":5},"end":{"line":320,"column":32}},"159":{"start":{"line":322,"column":5},"end":{"line":322,"column":21}},"160":{"start":{"line":323,"column":5},"end":{"line":323,"column":39}},"161":{"start":{"line":324,"column":5},"end":{"line":324,"column":30}},"162":{"start":{"line":329,"column":4},"end":{"line":329,"column":38}},"163":{"start":{"line":332,"column":4},"end":{"line":334,"column":5}},"164":{"start":{"line":333,"column":5},"end":{"line":333,"column":36}},"165":{"start":{"line":336,"column":4},"end":{"line":341,"column":5}},"166":{"start":{"line":337,"column":5},"end":{"line":337,"column":18}},"167":{"start":{"line":339,"column":5},"end":{"line":339,"column":67}},"168":{"start":{"line":340,"column":5},"end":{"line":340,"column":39}},"169":{"start":{"line":343,"column":4},"end":{"line":343,"column":38}},"170":{"start":{"line":345,"column":4},"end":{"line":345,"column":21}},"171":{"start":{"line":350,"column":0},"end":{"line":350,"column":21}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":3},"end":{"line":101,"column":3}},{"start":{"line":101,"column":3},"end":{"line":101,"column":3}}]},"4":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":19}},{"start":{"line":134,"column":23},"end":{"line":134,"column":25}}]},"5":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":17},"end":{"line":138,"column":44}},{"start":{"line":138,"column":48},"end":{"line":138,"column":64}}]},"6":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"7":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"8":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"9":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":47},"end":{"line":160,"column":48}},{"start":{"line":160,"column":51},"end":{"line":160,"column":75}}]},"10":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":19},"end":{"line":171,"column":48}},{"start":{"line":171,"column":52},"end":{"line":171,"column":68}}]},"11":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":22},"end":{"line":176,"column":41}},{"start":{"line":176,"column":45},"end":{"line":176,"column":76}}]},"12":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":3},"end":{"line":177,"column":3}},{"start":{"line":177,"column":3},"end":{"line":177,"column":3}}]},"13":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"14":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":23},"end":{"line":187,"column":40}},{"start":{"line":187,"column":44},"end":{"line":187,"column":65}},{"start":{"line":187,"column":69},"end":{"line":187,"column":102}},{"start":{"line":187,"column":106},"end":{"line":187,"column":135}}]},"15":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"16":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"17":{"line":204,"type":"cond-expr","locations":[{"start":{"line":204,"column":31},"end":{"line":204,"column":42}},{"start":{"line":204,"column":45},"end":{"line":204,"column":54}}]},"18":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"19":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":20},"end":{"line":218,"column":58}},{"start":{"line":218,"column":61},"end":{"line":218,"column":70}}]},"20":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"21":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":37}},{"start":{"line":251,"column":41},"end":{"line":251,"column":64}}]},"22":{"line":258,"type":"cond-expr","locations":[{"start":{"line":258,"column":41},"end":{"line":258,"column":52}},{"start":{"line":258,"column":55},"end":{"line":258,"column":60}}]},"23":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"24":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"25":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"26":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":4},"end":{"line":336,"column":4}},{"start":{"line":336,"column":4},"end":{"line":336,"column":4}}]},"27":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":8},"end":{"line":336,"column":37}},{"start":{"line":336,"column":41},"end":{"line":336,"column":64}}]}},"code":["'use strict';","const EventEmitter = require('events');","const path = require('path');","const fs = require('fs');","const commonPathPrefix = require('common-path-prefix');","const uniqueTempDir = require('unique-temp-dir');","const findCacheDir = require('find-cache-dir');","const resolveCwd = require('resolve-cwd');","const debounce = require('lodash.debounce');","const autoBind = require('auto-bind');","const Promise = require('bluebird');","const getPort = require('get-port');","const arrify = require('arrify');","const ms = require('ms');","const babelConfigHelper = require('./lib/babel-config');","const CachingPrecompiler = require('./lib/caching-precompiler');","const RunStatus = require('./lib/run-status');","const AvaError = require('./lib/ava-error');","const AvaFiles = require('./lib/ava-files');","const fork = require('./lib/fork');","","function resolveModules(modules) {","\treturn arrify(modules).map(name => {","\t\tconst modulePath = resolveCwd(name);","","\t\tif (modulePath === null) {","\t\t\tthrow new Error(`Could not resolve required module '${name}'`);","\t\t}","","\t\treturn modulePath;","\t});","}","","function getBlankResults() {","\treturn {","\t\tstats: {","\t\t\tknownFailureCount: 0,","\t\t\ttestCount: 0,","\t\t\tpassCount: 0,","\t\t\tskipCount: 0,","\t\t\ttodoCount: 0,","\t\t\tfailCount: 0","\t\t},","\t\ttests: []","\t};","}","","class Api extends EventEmitter {","\tconstructor(options) {","\t\tsuper();","\t\tautoBind(this);","","\t\tthis.options = Object.assign({match: []}, options);","\t\tthis.options.require = resolveModules(this.options.require);","\t}","\t_runFile(file, runStatus, execArgv) {","\t\tconst hash = this.precompiler.precompileFile(file);","\t\tconst precompiled = Object.assign({}, this._precompiledHelpers);","\t\tconst resolvedfpath = fs.realpathSync(file);","\t\tprecompiled[resolvedfpath] = hash;","","\t\tconst options = Object.assign({}, this.options, {precompiled});","\t\tconst emitter = fork(file, options, execArgv);","\t\trunStatus.observeFork(emitter);","","\t\treturn emitter;","\t}","\trun(files, options) {","\t\treturn new AvaFiles({cwd: this.options.resolveTestsFrom, files})","\t\t\t.findTestFiles()","\t\t\t.then(files => this._run(files, options));","\t}","\t_onTimeout(runStatus) {","\t\tconst timeout = ms(this.options.timeout);","\t\tconst err = new AvaError(`Exited because no new tests completed within the last ${timeout}ms of inactivity`);","\t\tthis._handleError(runStatus, err);","\t\trunStatus.emit('timeout');","\t}","\t_setupTimeout(runStatus) {","\t\tconst timeout = ms(this.options.timeout);","","\t\trunStatus._restartTimer = debounce(() => {","\t\t\tthis._onTimeout(runStatus);","\t\t}, timeout);","","\t\trunStatus._restartTimer();","\t\trunStatus.on('test', runStatus._restartTimer);","\t}","\t_cancelTimeout(runStatus) {","\t\trunStatus._restartTimer.cancel();","\t}","\t_setupPrecompiler(files) {","\t\tconst isCacheEnabled = this.options.cacheEnabled !== false;","\t\tlet cacheDir = uniqueTempDir();","","\t\tif (isCacheEnabled) {","\t\t\tconst foundDir = findCacheDir({","\t\t\t\tname: 'ava',","\t\t\t\tfiles","\t\t\t});","\t\t\tif (foundDir !== null) {","\t\t\t\tcacheDir = foundDir;","\t\t\t}","\t\t}","","\t\tthis.options.cacheDir = cacheDir;","","\t\tconst isPowerAssertEnabled = this.options.powerAssert !== false;","\t\treturn babelConfigHelper.build(this.options.projectDir, cacheDir, this.options.babelConfig, isPowerAssertEnabled)","\t\t\t.then(result => {","\t\t\t\tthis.precompiler = new CachingPrecompiler({","\t\t\t\t\tpath: cacheDir,","\t\t\t\t\tgetBabelOptions: result.getOptions,","\t\t\t\t\tbabelCacheKeys: result.cacheKeys","\t\t\t\t});","\t\t\t});","\t}","\t_precompileHelpers() {","\t\tthis._precompiledHelpers = {};","","\t\t// Assumes the tests only load helpers from within the `resolveTestsFrom`","\t\t// directory. Without arguments this is the `projectDir`, else it's","\t\t// `process.cwd()` which may be nested too deeply. This will be solved","\t\t// as we implement RFC 001 and move helper compilation into the worker","\t\t// processes, avoiding the need for precompilation.","\t\treturn new AvaFiles({cwd: this.options.resolveTestsFrom})","\t\t\t.findTestHelpers()","\t\t\t.map(file => { // eslint-disable-line array-callback-return","\t\t\t\tconst hash = this.precompiler.precompileFile(file);","\t\t\t\tthis._precompiledHelpers[file] = hash;","\t\t\t});","\t}","\t_run(files, options) {","\t\toptions = options || {};","","\t\tconst runStatus = new RunStatus({","\t\t\trunOnlyExclusive: options.runOnlyExclusive,","\t\t\tprefixTitles: this.options.explicitTitles || files.length > 1,","\t\t\tbase: path.relative(process.cwd(), commonPathPrefix(files)) + path.sep,","\t\t\tfailFast: this.options.failFast","\t\t});","","\t\tthis.emit('test-run', runStatus, files);","","\t\tif (files.length === 0) {","\t\t\tconst err = new AvaError('Couldn\\'t find any files to test');","\t\t\tthis._handleError(runStatus, err);","\t\t\treturn Promise.resolve(runStatus);","\t\t}","","\t\treturn this._setupPrecompiler(files)","\t\t\t.then(() => this._precompileHelpers())","\t\t\t.then(() => {","\t\t\t\tif (this.options.timeout) {","\t\t\t\t\tthis._setupTimeout(runStatus);","\t\t\t\t}","","\t\t\t\tlet overwatch;","\t\t\t\tif (this.options.concurrency > 0) {","\t\t\t\t\tconst concurrency = this.options.serial ? 1 : this.options.concurrency;","\t\t\t\t\toverwatch = this._runWithPool(files, runStatus, concurrency);","\t\t\t\t} else {","\t\t\t\t\t// _runWithoutPool exists to preserve legacy behavior, specifically around `.only`","\t\t\t\t\toverwatch = this._runWithoutPool(files, runStatus);","\t\t\t\t}","","\t\t\t\treturn overwatch;","\t\t\t});","\t}","\t_computeForkExecArgs(files) {","\t\tconst execArgv = this.options.testOnlyExecArgv || process.execArgv;","\t\tlet debugArgIndex = -1;","","\t\t// --debug-brk is used in addition to --inspect to break on first line and wait","\t\texecArgv.some((arg, index) => {","\t\t\tconst isDebugArg = arg === '--inspect' || arg.indexOf('--inspect=') === 0;","\t\t\tif (isDebugArg) {","\t\t\t\tdebugArgIndex = index;","\t\t\t}","","\t\t\treturn isDebugArg;","\t\t});","","\t\tconst isInspect = debugArgIndex >= 0;","\t\tif (!isInspect) {","\t\t\texecArgv.some((arg, index) => {","\t\t\t\tconst isDebugArg = arg === '--debug' || arg === '--debug-brk' || arg.indexOf('--debug-brk=') === 0 || arg.indexOf('--debug=') === 0;","\t\t\t\tif (isDebugArg) {","\t\t\t\t\tdebugArgIndex = index;","\t\t\t\t}","","\t\t\t\treturn isDebugArg;","\t\t\t});","\t\t}","","\t\tif (debugArgIndex === -1) {","\t\t\treturn Promise.resolve([]);","\t\t}","","\t\treturn Promise","\t\t\t.map(files, () => getPort())","\t\t\t.map(port => {","\t\t\t\tconst forkExecArgv = execArgv.slice();","\t\t\t\tlet flagName = isInspect ? '--inspect' : '--debug';","\t\t\t\tconst oldValue = forkExecArgv[debugArgIndex];","\t\t\t\tif (oldValue.indexOf('brk') > 0) {","\t\t\t\t\tflagName += '-brk';","\t\t\t\t}","","\t\t\t\tforkExecArgv[debugArgIndex] = `${flagName}=${port}`;","","\t\t\t\treturn forkExecArgv;","\t\t\t});","\t}","\t_handleError(runStatus, err) {","\t\trunStatus.handleExceptions({","\t\t\texception: err,","\t\t\tfile: err.file ? path.relative(process.cwd(), err.file) : undefined","\t\t});","\t}","\t_runWithoutPool(files, runStatus) {","\t\tconst tests = [];","\t\tlet execArgvList;","","\t\t// TODO: This should be cleared at the end of the run","\t\trunStatus.on('timeout', () => {","\t\t\ttests.forEach(fork => {","\t\t\t\tfork.exit();","\t\t\t});","\t\t});","","\t\treturn this._computeForkExecArgs(files)","\t\t\t.then(argvList => {","\t\t\t\texecArgvList = argvList;","\t\t\t})","\t\t\t.return(files)","\t\t\t.each((file, index) => {","\t\t\t\treturn new Promise(resolve => {","\t\t\t\t\tconst forkArgs = execArgvList[index];","\t\t\t\t\tconst test = this._runFile(file, runStatus, forkArgs);","\t\t\t\t\ttests.push(test);","\t\t\t\t\ttest.on('stats', resolve);","\t\t\t\t\ttest.catch(resolve);","\t\t\t\t}).catch(err => {","\t\t\t\t\terr.results = [];","\t\t\t\t\terr.file = file;","\t\t\t\t\treturn Promise.reject(err);","\t\t\t\t});","\t\t\t})","\t\t\t.then(() => {","\t\t\t\tif (this.options.match.length > 0 && !runStatus.hasExclusive) {","\t\t\t\t\tconst err = new AvaError('Couldn\\'t find any matching tests');","\t\t\t\t\terr.file = undefined;","\t\t\t\t\terr.results = [];","\t\t\t\t\treturn Promise.reject(err);","\t\t\t\t}","","\t\t\t\tconst method = this.options.serial ? 'mapSeries' : 'map';","\t\t\t\tconst options = {","\t\t\t\t\trunOnlyExclusive: runStatus.hasExclusive","\t\t\t\t};","","\t\t\t\treturn Promise[method](files, (file, index) => {","\t\t\t\t\treturn tests[index].run(options).catch(err => {","\t\t\t\t\t\terr.file = file;","\t\t\t\t\t\tthis._handleError(runStatus, err);","\t\t\t\t\t\treturn getBlankResults();","\t\t\t\t\t});","\t\t\t\t});","\t\t\t})","\t\t\t.catch(err => {","\t\t\t\tthis._handleError(runStatus, err);","\t\t\t\treturn err.results;","\t\t\t})","\t\t\t.tap(results => {","\t\t\t\t// If no tests ran, make sure to tear down the child processes","\t\t\t\tif (results.length === 0) {","\t\t\t\t\ttests.forEach(test => {","\t\t\t\t\t\ttest.send('teardown');","\t\t\t\t\t});","\t\t\t\t}","\t\t\t})","\t\t\t.then(results => {","\t\t\t\t// Cancel debounced _onTimeout() from firing","\t\t\t\tif (this.options.timeout) {","\t\t\t\t\tthis._cancelTimeout(runStatus);","\t\t\t\t}","","\t\t\t\trunStatus.processResults(results);","","\t\t\t\treturn runStatus;","\t\t\t});","\t}","\t_runWithPool(files, runStatus, concurrency) {","\t\tconst tests = [];","\t\tlet execArgvList;","","\t\trunStatus.on('timeout', () => {","\t\t\ttests.forEach(fork => {","\t\t\t\tfork.exit();","\t\t\t});","\t\t});","","\t\treturn this._computeForkExecArgs(files)","\t\t\t.then(argvList => {","\t\t\t\texecArgvList = argvList;","\t\t\t})","\t\t\t.return(files)","\t\t\t.map((file, index) => {","\t\t\t\treturn new Promise(resolve => {","\t\t\t\t\tconst forkArgs = execArgvList[index];","\t\t\t\t\tconst test = this._runFile(file, runStatus, forkArgs);","\t\t\t\t\ttests.push(test);","","\t\t\t\t\t// If we're looking for matches, run every single test process in exclusive-only mode","\t\t\t\t\tconst options = {","\t\t\t\t\t\trunOnlyExclusive: this.options.match.length > 0","\t\t\t\t\t};","","\t\t\t\t\tresolve(test.run(options));","\t\t\t\t}).catch(err => {","\t\t\t\t\terr.file = file;","\t\t\t\t\tthis._handleError(runStatus, err);","\t\t\t\t\treturn getBlankResults();","\t\t\t\t});","\t\t\t}, {concurrency})","\t\t\t.then(results => {","\t\t\t\t// Filter out undefined results (usually result of caught exceptions)","\t\t\t\tresults = results.filter(Boolean);","","\t\t\t\t// Cancel debounced _onTimeout() from firing","\t\t\t\tif (this.options.timeout) {","\t\t\t\t\tthis._cancelTimeout(runStatus);","\t\t\t\t}","","\t\t\t\tif (this.options.match.length > 0 && !runStatus.hasExclusive) {","\t\t\t\t\tresults = [];","","\t\t\t\t\tconst err = new AvaError('Couldn\\'t find any matching tests');","\t\t\t\t\tthis._handleError(runStatus, err);","\t\t\t\t}","","\t\t\t\trunStatus.processResults(results);","","\t\t\t\treturn runStatus;","\t\t\t});","\t}","}","","module.exports = Api;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":0,"26":0,"27":0,"30":0,"34":1,"35":0,"50":1,"51":1,"53":1,"54":1,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"66":0,"69":1,"71":0,"74":0,"75":0,"76":0,"77":0,"80":0,"82":0,"83":0,"86":0,"87":0,"90":0,"93":0,"94":0,"96":0,"97":0,"101":0,"102":0,"106":0,"108":0,"109":0,"111":0,"119":0,"126":0,"129":0,"130":0,"134":0,"136":0,"143":0,"145":0,"146":0,"147":0,"148":0,"151":0,"152":0,"154":0,"155":0,"158":0,"159":0,"160":0,"161":0,"164":0,"167":0,"171":0,"172":0,"175":0,"176":0,"177":0,"178":0,"181":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"192":0,"196":0,"197":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"207":0,"210":0,"212":0,"216":0,"222":0,"223":0,"226":0,"227":0,"228":0,"232":0,"234":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"245":0,"246":0,"247":0,"251":0,"252":0,"253":0,"254":0,"255":0,"258":0,"259":0,"263":0,"264":0,"265":0,"266":0,"267":0,"272":0,"273":0,"277":0,"278":0,"279":0,"285":0,"286":0,"289":0,"291":0,"295":0,"296":0,"298":0,"299":0,"300":0,"304":0,"306":0,"310":0,"311":0,"312":0,"313":0,"316":0,"320":0,"322":0,"323":0,"324":0,"329":0,"332":0,"333":0,"336":0,"337":0,"339":0,"340":0,"343":0,"345":0,"350":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/babel-config.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/babel-config.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1},"b":{"1":[1,0],"2":[1,0],"3":[1,0],"4":[0,1],"5":[1,1,1],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"validate","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}}},"2":{"name":"verifyExistingOptions","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":64}}},"3":{"name":"resolveOptions","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":70}}},"4":{"name":"build","line":84,"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":63}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":59}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"9":{"start":{"line":11,"column":0},"end":{"line":28,"column":1}},"10":{"start":{"line":12,"column":1},"end":{"line":14,"column":2}},"11":{"start":{"line":13,"column":2},"end":{"line":13,"column":19}},"12":{"start":{"line":17,"column":1},"end":{"line":17,"column":66}},"13":{"start":{"line":19,"column":1},"end":{"line":25,"column":2}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":44}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":57}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":110}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":27}},"18":{"start":{"line":27,"column":1},"end":{"line":27,"column":13}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":41}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":43}},"21":{"start":{"line":33,"column":0},"end":{"line":69,"column":1}},"22":{"start":{"line":34,"column":1},"end":{"line":68,"column":5}},"23":{"start":{"line":35,"column":2},"end":{"line":43,"column":3}},"24":{"start":{"line":36,"column":3},"end":{"line":36,"column":42}},"25":{"start":{"line":38,"column":3},"end":{"line":42,"column":4}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":18}},"27":{"start":{"line":41,"column":4},"end":{"line":41,"column":16}},"28":{"start":{"line":46,"column":3},"end":{"line":48,"column":4}},"29":{"start":{"line":47,"column":4},"end":{"line":47,"column":16}},"30":{"start":{"line":50,"column":3},"end":{"line":50,"column":58}},"31":{"start":{"line":51,"column":3},"end":{"line":51,"column":39}},"32":{"start":{"line":52,"column":3},"end":{"line":52,"column":61}},"33":{"start":{"line":53,"column":3},"end":{"line":55,"column":4}},"34":{"start":{"line":54,"column":4},"end":{"line":54,"column":78}},"35":{"start":{"line":56,"column":3},"end":{"line":67,"column":7}},"36":{"start":{"line":58,"column":5},"end":{"line":60,"column":6}},"37":{"start":{"line":59,"column":6},"end":{"line":59,"column":18}},"38":{"start":{"line":62,"column":5},"end":{"line":64,"column":6}},"39":{"start":{"line":63,"column":6},"end":{"line":63,"column":65}},"40":{"start":{"line":66,"column":5},"end":{"line":66,"column":29}},"41":{"start":{"line":71,"column":0},"end":{"line":82,"column":1}},"42":{"start":{"line":72,"column":1},"end":{"line":81,"column":5}},"43":{"start":{"line":74,"column":3},"end":{"line":74,"column":58}},"44":{"start":{"line":76,"column":3},"end":{"line":80,"column":7}},"45":{"start":{"line":78,"column":5},"end":{"line":78,"column":57}},"46":{"start":{"line":79,"column":5},"end":{"line":79,"column":46}},"47":{"start":{"line":84,"column":0},"end":{"line":143,"column":1}},"48":{"start":{"line":90,"column":1},"end":{"line":90,"column":58}},"49":{"start":{"line":93,"column":1},"end":{"line":93,"column":23}},"50":{"start":{"line":97,"column":1},"end":{"line":97,"column":69}},"51":{"start":{"line":98,"column":1},"end":{"line":98,"column":66}},"52":{"start":{"line":100,"column":1},"end":{"line":105,"column":3}},"53":{"start":{"line":106,"column":1},"end":{"line":108,"column":2}},"54":{"start":{"line":107,"column":2},"end":{"line":107,"column":46}},"55":{"start":{"line":110,"column":1},"end":{"line":116,"column":4}},"56":{"start":{"line":118,"column":1},"end":{"line":127,"column":2}},"57":{"start":{"line":119,"column":2},"end":{"line":126,"column":6}},"58":{"start":{"line":129,"column":1},"end":{"line":129,"column":44}},"59":{"start":{"line":130,"column":1},"end":{"line":142,"column":6}},"60":{"start":{"line":132,"column":3},"end":{"line":134,"column":4}},"61":{"start":{"line":133,"column":4},"end":{"line":133,"column":21}},"62":{"start":{"line":136,"column":3},"end":{"line":136,"column":71}},"63":{"start":{"line":138,"column":22},"end":{"line":142,"column":3}},"64":{"start":{"line":145,"column":0},"end":{"line":148,"column":2}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":5},"end":{"line":12,"column":23}},{"start":{"line":12,"column":27},"end":{"line":12,"column":40}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":43}},{"start":{"line":17,"column":47},"end":{"line":17,"column":65}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"5":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":5},"end":{"line":19,"column":10}},{"start":{"line":19,"column":15},"end":{"line":19,"column":39}},{"start":{"line":19,"column":43},"end":{"line":19,"column":59}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":3},"end":{"line":38,"column":3}},{"start":{"line":38,"column":3},"end":{"line":38,"column":3}}]},"7":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":7},"end":{"line":38,"column":10}},{"start":{"line":38,"column":14},"end":{"line":38,"column":35}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":3},"end":{"line":53,"column":3}},{"start":{"line":53,"column":3},"end":{"line":53,"column":3}}]},"10":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":5},"end":{"line":58,"column":5}},{"start":{"line":58,"column":5},"end":{"line":58,"column":5}}]},"11":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":5},"end":{"line":62,"column":5}},{"start":{"line":62,"column":5},"end":{"line":62,"column":5}}]},"12":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":1},"end":{"line":106,"column":1}},{"start":{"line":106,"column":1},"end":{"line":106,"column":1}}]},"13":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":1},"end":{"line":118,"column":1}},{"start":{"line":118,"column":1},"end":{"line":118,"column":1}}]},"14":{"line":121,"type":"cond-expr","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":19}},{"start":{"line":123,"column":4},"end":{"line":123,"column":15}}]},"15":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":3},"end":{"line":132,"column":3}},{"start":{"line":132,"column":3},"end":{"line":132,"column":3}}]}},"code":["'use strict';","const fs = require('fs');","const path = require('path');","const chalk = require('chalk');","const figures = require('figures');","const configManager = require('hullabaloo-config-manager');","const md5Hex = require('md5-hex');","const mkdirp = require('mkdirp');","const colors = require('./colors');","","function validate(conf) {","\tif (conf === undefined || conf === null) {","\t\tconf = 'default';","\t}","","\t// Check for valid babel config shortcuts (can be either `default` or `inherit`)","\tconst isValidShortcut = conf === 'default' || conf === 'inherit';","","\tif (!conf || (typeof conf === 'string' && !isValidShortcut)) {","\t\tlet message = colors.error(figures.cross);","\t\tmessage += ' Unexpected Babel configuration for AVA. ';","\t\tmessage += 'See ' + chalk.underline('https://github.com/avajs/ava#es2015-support') + ' for allowed values.';","","\t\tthrow new Error(message);","\t}","","\treturn conf;","}","","const SOURCE = '(AVA) Base Babel config';","const AVA_DIR = path.join(__dirname, '..');","","function verifyExistingOptions(verifierFile, baseConfig, cache) {","\treturn new Promise((resolve, reject) => {","\t\ttry {","\t\t\tresolve(fs.readFileSync(verifierFile));","\t\t} catch (err) {","\t\t\tif (err && err.code === 'ENOENT') {","\t\t\t\tresolve(null);","\t\t\t} else {","\t\t\t\treject(err);","\t\t\t}","\t\t}","\t})","\t\t.then(buffer => {","\t\t\tif (!buffer) {","\t\t\t\treturn null;","\t\t\t}","","\t\t\tconst verifier = configManager.restoreVerifier(buffer);","\t\t\tconst fixedSourceHashes = new Map();","\t\t\tfixedSourceHashes.set(baseConfig.source, baseConfig.hash);","\t\t\tif (baseConfig.extends) {","\t\t\t\tfixedSourceHashes.set(baseConfig.extends.source, baseConfig.extends.hash);","\t\t\t}","\t\t\treturn verifier.verifyCurrentEnv({sources: fixedSourceHashes}, cache)","\t\t\t\t.then(result => {","\t\t\t\t\tif (!result.cacheKeys) {","\t\t\t\t\t\treturn null;","\t\t\t\t\t}","","\t\t\t\t\tif (result.dependenciesChanged) {","\t\t\t\t\t\tfs.writeFileSync(verifierFile, result.verifier.toBuffer());","\t\t\t\t\t}","","\t\t\t\t\treturn result.cacheKeys;","\t\t\t\t});","\t\t});","}","","function resolveOptions(baseConfig, cache, optionsFile, verifierFile) {","\treturn configManager.fromConfig(baseConfig, {cache})","\t\t.then(result => {","\t\t\tfs.writeFileSync(optionsFile, result.generateModule());","","\t\t\treturn result.createVerifier()","\t\t\t\t.then(verifier => {","\t\t\t\t\tfs.writeFileSync(verifierFile, verifier.toBuffer());","\t\t\t\t\treturn verifier.cacheKeysForCurrentEnv();","\t\t\t\t});","\t\t});","}","","function build(projectDir, cacheDir, userOptions, powerAssert) {","\t// Compute a seed based on the Node.js version and the project directory.","\t// Dependency hashes may vary based on the Node.js version, e.g. with the","\t// @ava/stage-4 Babel preset. Sources and dependencies paths are absolute in","\t// the generated module and verifier state. Those paths wouldn't necessarily","\t// be valid if the project directory changes.","\tconst seed = md5Hex([process.versions.node, projectDir]);","","\t// Ensure cacheDir exists","\tmkdirp.sync(cacheDir);","","\t// The file names predict where valid options may be cached, and thus should","\t// include the seed.","\tconst optionsFile = path.join(cacheDir, `${seed}.babel-options.js`);","\tconst verifierFile = path.join(cacheDir, `${seed}.verifier.bin`);","","\tconst baseOptions = {","\t\tbabelrc: false,","\t\tpresets: [","\t\t\t['@ava/transform-test-files', {powerAssert}]","\t\t]","\t};","\tif (userOptions === 'default') {","\t\tbaseOptions.presets.unshift('@ava/stage-4');","\t}","","\tconst baseConfig = configManager.createConfig({","\t\tdir: AVA_DIR, // Presets are resolved relative to this directory","\t\thash: md5Hex(JSON.stringify(baseOptions)),","\t\tjson5: false,","\t\toptions: baseOptions,","\t\tsource: SOURCE","\t});","","\tif (userOptions !== 'default') {","\t\tbaseConfig.extend(configManager.createConfig({","\t\t\tdir: projectDir,","\t\t\toptions: userOptions === 'inherit' ?","\t\t\t\t{babelrc: true} :","\t\t\t\tuserOptions,","\t\t\tsource: path.join(projectDir, 'package.json') + '#ava.babel',","\t\t\thash: md5Hex(JSON.stringify(userOptions))","\t\t}));","\t}","","\tconst cache = configManager.prepareCache();","\treturn verifyExistingOptions(verifierFile, baseConfig, cache)","\t\t.then(cacheKeys => {","\t\t\tif (cacheKeys) {","\t\t\t\treturn cacheKeys;","\t\t\t}","","\t\t\treturn resolveOptions(baseConfig, cache, optionsFile, verifierFile);","\t\t})","\t\t.then(cacheKeys => ({","\t\t\tgetOptions: require(optionsFile).getOptions, // eslint-disable-line import/no-dynamic-require","\t\t\t// Include the seed in the cache keys used to store compilation results.","\t\t\tcacheKeys: Object.assign({seed}, cacheKeys)","\t\t}));","}","","module.exports = {","\tvalidate,","\tbuild","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"12":1,"13":1,"17":1,"19":1,"20":0,"21":0,"22":0,"24":0,"27":1,"30":1,"31":1,"33":1,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"46":0,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"59":0,"62":0,"63":0,"66":0,"71":1,"72":0,"74":0,"76":0,"78":0,"79":0,"84":1,"90":0,"93":0,"97":0,"98":0,"100":0,"106":0,"107":0,"110":0,"118":0,"119":0,"129":0,"130":0,"132":0,"133":0,"136":0,"138":0,"145":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/colors.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/colors.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":15,"column":2}}},"branchMap":{},"code":["'use strict';","const chalk = require('chalk');","","module.exports = {","\ttitle: chalk.bold.white,","\terror: chalk.red,","\tskip: chalk.yellow,","\ttodo: chalk.blue,","\tpass: chalk.green,","\tduration: chalk.gray.dim,","\terrorSource: chalk.gray,","\terrorStack: chalk.gray,","\tstack: chalk.red,","\tinformation: chalk.magenta","};",""],"l":{"2":1,"4":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/caching-precompiler.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/caching-precompiler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"getSourceMap","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":22}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":26}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":6},"end":{"line":45,"column":9}}},"5":{"name":"(anonymous_5)","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":34}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":17},"end":{"line":82,"column":20}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":14},"end":{"line":96,"column":37}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":34}},"9":{"start":{"line":11,"column":0},"end":{"line":24,"column":1}},"10":{"start":{"line":12,"column":1},"end":{"line":12,"column":51}},"11":{"start":{"line":14,"column":1},"end":{"line":17,"column":2}},"12":{"start":{"line":15,"column":2},"end":{"line":15,"column":41}},"13":{"start":{"line":16,"column":2},"end":{"line":16,"column":64}},"14":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"15":{"start":{"line":20,"column":2},"end":{"line":20,"column":35}},"16":{"start":{"line":23,"column":1},"end":{"line":23,"column":18}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":17}},"18":{"start":{"line":30,"column":2},"end":{"line":30,"column":49}},"19":{"start":{"line":31,"column":2},"end":{"line":31,"column":47}},"20":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"21":{"start":{"line":33,"column":2},"end":{"line":33,"column":23}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":43}},"23":{"start":{"line":37,"column":2},"end":{"line":40,"column":3}},"24":{"start":{"line":38,"column":3},"end":{"line":38,"column":57}},"25":{"start":{"line":39,"column":3},"end":{"line":39,"column":36}},"26":{"start":{"line":42,"column":2},"end":{"line":42,"column":35}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":37}},"28":{"start":{"line":47,"column":2},"end":{"line":47,"column":25}},"29":{"start":{"line":50,"column":2},"end":{"line":50,"column":25}},"30":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}},"31":{"start":{"line":53,"column":2},"end":{"line":53,"column":68}},"32":{"start":{"line":54,"column":2},"end":{"line":68,"column":3}},"33":{"start":{"line":56,"column":3},"end":{"line":56,"column":41}},"34":{"start":{"line":58,"column":3},"end":{"line":63,"column":7}},"35":{"start":{"line":67,"column":3},"end":{"line":67,"column":63}},"36":{"start":{"line":71,"column":2},"end":{"line":71,"column":65}},"37":{"start":{"line":72,"column":2},"end":{"line":72,"column":56}},"38":{"start":{"line":76,"column":2},"end":{"line":76,"column":41}},"39":{"start":{"line":77,"column":2},"end":{"line":77,"column":58}},"40":{"start":{"line":78,"column":2},"end":{"line":78,"column":75}},"41":{"start":{"line":80,"column":2},"end":{"line":80,"column":38}},"42":{"start":{"line":83,"column":2},"end":{"line":86,"column":26}},"43":{"start":{"line":88,"column":2},"end":{"line":94,"column":5}},"44":{"start":{"line":97,"column":2},"end":{"line":97,"column":46}},"45":{"start":{"line":98,"column":2},"end":{"line":98,"column":35}},"46":{"start":{"line":99,"column":2},"end":{"line":99,"column":14}},"47":{"start":{"line":103,"column":0},"end":{"line":103,"column":36}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"3":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["'use strict';","const path = require('path');","const fs = require('fs');","const convertSourceMap = require('convert-source-map');","const cachingTransform = require('caching-transform');","const packageHash = require('package-hash');","const stripBomBuf = require('strip-bom-buf');","const autoBind = require('auto-bind');","const md5Hex = require('md5-hex');","","function getSourceMap(filePath, code) {","\tlet sourceMap = convertSourceMap.fromSource(code);","","\tif (!sourceMap) {","\t\tconst dirPath = path.dirname(filePath);","\t\tsourceMap = convertSourceMap.fromMapFileSource(code, dirPath);","\t}","","\tif (sourceMap) {","\t\tsourceMap = sourceMap.toObject();","\t}","","\treturn sourceMap;","}","","class CachingPrecompiler {","\tconstructor(options) {","\t\tautoBind(this);","","\t\tthis.getBabelOptions = options.getBabelOptions;","\t\tthis.babelCacheKeys = options.babelCacheKeys;","\t\tthis.cacheDirPath = options.path;","\t\tthis.fileHashes = {};","\t\tthis.transform = this._createTransform();","\t}","\tprecompileFile(filePath) {","\t\tif (!this.fileHashes[filePath]) {","\t\t\tconst source = stripBomBuf(fs.readFileSync(filePath));","\t\t\tthis.transform(source, filePath);","\t\t}","","\t\treturn this.fileHashes[filePath];","\t}","\t// Conditionally called by caching-transform when precompiling is required","\t_init() {","\t\tthis.babel = require('babel-core');","\t\treturn this._transform;","\t}","\t_transform(code, filePath, hash) {","\t\tcode = code.toString();","","\t\tlet result;","\t\tconst originalBabelDisableCache = process.env.BABEL_DISABLE_CACHE;","\t\ttry {","\t\t\t// Disable Babel's cache. AVA has good cache management already.","\t\t\tprocess.env.BABEL_DISABLE_CACHE = '1';","","\t\t\tresult = this.babel.transform(code, Object.assign(this.getBabelOptions(), {","\t\t\t\tinputSourceMap: getSourceMap(filePath, code),","\t\t\t\tfilename: filePath,","\t\t\t\tsourceMaps: true,","\t\t\t\tast: false","\t\t\t}));","\t\t} finally {","\t\t\t// Restore the original value. It is passed to workers, where users may","\t\t\t// not want Babel's cache to be disabled.","\t\t\tprocess.env.BABEL_DISABLE_CACHE = originalBabelDisableCache;","\t\t}","","\t\t// Save source map","\t\tconst mapPath = path.join(this.cacheDirPath, `${hash}.js.map`);","\t\tfs.writeFileSync(mapPath, JSON.stringify(result.map));","","\t\t// Append source map comment to transformed code","\t\t// So that other libraries (like nyc) can find the source map","\t\tconst dirPath = path.dirname(filePath);","\t\tconst relativeMapPath = path.relative(dirPath, mapPath);","\t\tconst comment = convertSourceMap.generateMapFileComment(relativeMapPath);","","\t\treturn `${result.code}\\n${comment}`;","\t}","\t_createTransform() {","\t\tconst salt = packageHash.sync([","\t\t\trequire.resolve('../package.json'),","\t\t\trequire.resolve('babel-core/package.json')","\t\t], this.babelCacheKeys);","","\t\treturn cachingTransform({","\t\t\tfactory: this._init,","\t\t\tcacheDir: this.cacheDirPath,","\t\t\thash: this._generateHash,","\t\t\tsalt,","\t\t\text: '.js'","\t\t});","\t}","\t_generateHash(code, filePath, salt) {","\t\tconst hash = md5Hex([code, filePath, salt]);","\t\tthis.fileHashes[filePath] = hash;","\t\treturn hash;","\t}","}","","module.exports = CachingPrecompiler;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"12":0,"14":0,"15":0,"16":0,"19":0,"20":0,"23":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"37":0,"38":0,"39":0,"42":0,"46":0,"47":0,"50":0,"52":0,"53":0,"54":0,"56":0,"58":0,"67":0,"71":0,"72":0,"76":0,"77":0,"78":0,"80":0,"83":0,"88":0,"97":0,"98":0,"99":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/run-status.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/run-status.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"sum","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":19}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":22}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":17},"end":{"line":56,"column":24}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":17},"end":{"line":66,"column":24}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":15},"end":{"line":74,"column":22}}},"7":{"name":"(anonymous_7)","line":77,"loc":{"start":{"line":77,"column":12},"end":{"line":77,"column":20}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":11},"end":{"line":86,"column":18}}},"9":{"name":"(anonymous_9)","line":99,"loc":{"start":{"line":99,"column":12},"end":{"line":99,"column":19}}},"10":{"name":"(anonymous_10)","line":108,"loc":{"start":{"line":108,"column":13},"end":{"line":108,"column":29}}},"11":{"name":"(anonymous_11)","line":111,"loc":{"start":{"line":111,"column":15},"end":{"line":111,"column":25}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"7":{"start":{"line":9,"column":0},"end":{"line":17,"column":1}},"8":{"start":{"line":10,"column":1},"end":{"line":10,"column":16}},"9":{"start":{"line":12,"column":1},"end":{"line":14,"column":4}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":22}},"11":{"start":{"line":16,"column":1},"end":{"line":16,"column":15}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":10}},"13":{"start":{"line":23,"column":2},"end":{"line":23,"column":20}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":50}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":53}},"16":{"start":{"line":26,"column":2},"end":{"line":26,"column":30}},"17":{"start":{"line":27,"column":2},"end":{"line":27,"column":26}},"18":{"start":{"line":28,"column":2},"end":{"line":28,"column":26}},"19":{"start":{"line":29,"column":2},"end":{"line":29,"column":21}},"20":{"start":{"line":30,"column":2},"end":{"line":30,"column":29}},"21":{"start":{"line":31,"column":2},"end":{"line":31,"column":21}},"22":{"start":{"line":32,"column":2},"end":{"line":32,"column":21}},"23":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},"24":{"start":{"line":34,"column":2},"end":{"line":34,"column":21}},"25":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"26":{"start":{"line":36,"column":2},"end":{"line":36,"column":26}},"27":{"start":{"line":37,"column":2},"end":{"line":37,"column":29}},"28":{"start":{"line":38,"column":2},"end":{"line":38,"column":26}},"29":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"30":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"31":{"start":{"line":41,"column":2},"end":{"line":41,"column":18}},"32":{"start":{"line":42,"column":2},"end":{"line":42,"column":48}},"33":{"start":{"line":44,"column":2},"end":{"line":44,"column":17}},"34":{"start":{"line":47,"column":2},"end":{"line":54,"column":57}},"35":{"start":{"line":57,"column":2},"end":{"line":57,"column":48}},"36":{"start":{"line":59,"column":2},"end":{"line":64,"column":5}},"37":{"start":{"line":60,"column":3},"end":{"line":60,"column":26}},"38":{"start":{"line":61,"column":3},"end":{"line":61,"column":24}},"39":{"start":{"line":62,"column":3},"end":{"line":62,"column":33}},"40":{"start":{"line":63,"column":3},"end":{"line":63,"column":25}},"41":{"start":{"line":67,"column":2},"end":{"line":67,"column":24}},"42":{"start":{"line":68,"column":2},"end":{"line":68,"column":29}},"43":{"start":{"line":69,"column":2},"end":{"line":69,"column":25}},"44":{"start":{"line":70,"column":2},"end":{"line":70,"column":23}},"45":{"start":{"line":71,"column":2},"end":{"line":71,"column":32}},"46":{"start":{"line":72,"column":2},"end":{"line":72,"column":24}},"47":{"start":{"line":75,"column":2},"end":{"line":75,"column":64}},"48":{"start":{"line":78,"column":2},"end":{"line":78,"column":34}},"49":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"50":{"start":{"line":81,"column":3},"end":{"line":81,"column":28}},"51":{"start":{"line":84,"column":2},"end":{"line":84,"column":36}},"52":{"start":{"line":87,"column":2},"end":{"line":87,"column":56}},"53":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"54":{"start":{"line":90,"column":3},"end":{"line":90,"column":26}},"55":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"56":{"start":{"line":94,"column":3},"end":{"line":94,"column":33}},"57":{"start":{"line":97,"column":2},"end":{"line":97,"column":32}},"58":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"59":{"start":{"line":101,"column":3},"end":{"line":101,"column":13}},"60":{"start":{"line":104,"column":2},"end":{"line":104,"column":69}},"61":{"start":{"line":106,"column":2},"end":{"line":106,"column":49}},"62":{"start":{"line":109,"column":2},"end":{"line":109,"column":33}},"63":{"start":{"line":113,"column":2},"end":{"line":113,"column":51}},"64":{"start":{"line":113,"column":37},"end":{"line":113,"column":49}},"65":{"start":{"line":114,"column":2},"end":{"line":114,"column":51}},"66":{"start":{"line":114,"column":37},"end":{"line":114,"column":49}},"67":{"start":{"line":115,"column":2},"end":{"line":115,"column":35}},"68":{"start":{"line":116,"column":2},"end":{"line":116,"column":48}},"69":{"start":{"line":117,"column":2},"end":{"line":117,"column":64}},"70":{"start":{"line":118,"column":2},"end":{"line":118,"column":48}},"71":{"start":{"line":119,"column":2},"end":{"line":119,"column":48}},"72":{"start":{"line":120,"column":2},"end":{"line":120,"column":48}},"73":{"start":{"line":121,"column":2},"end":{"line":121,"column":132}},"74":{"start":{"line":125,"column":0},"end":{"line":125,"column":27}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":9},"end":{"line":23,"column":13}},{"start":{"line":23,"column":17},"end":{"line":23,"column":19}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":14},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":29}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":25},"end":{"line":42,"column":38}},{"start":{"line":42,"column":42},"end":{"line":42,"column":47}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"7":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":18}},{"start":{"line":93,"column":22},"end":{"line":93,"column":33}}]},"8":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]}},"code":["'use strict';","const EventEmitter = require('events');","const chalk = require('chalk');","const flatten = require('arr-flatten');","const figures = require('figures');","const autoBind = require('auto-bind');","const prefixTitle = require('./prefix-title');","","function sum(arr, key) {","\tlet result = 0;","","\tarr.forEach(item => {","\t\tresult += item[key];","\t});","","\treturn result;","}","","class RunStatus extends EventEmitter {","\tconstructor(opts) {","\t\tsuper();","","\t\topts = opts || {};","\t\tthis.prefixTitles = opts.prefixTitles !== false;","\t\tthis.hasExclusive = Boolean(opts.runOnlyExclusive);","\t\tthis.base = opts.base || '';","\t\tthis.rejectionCount = 0;","\t\tthis.exceptionCount = 0;","\t\tthis.passCount = 0;","\t\tthis.knownFailureCount = 0;","\t\tthis.skipCount = 0;","\t\tthis.todoCount = 0;","\t\tthis.failCount = 0;","\t\tthis.fileCount = 0;","\t\tthis.testCount = 0;","\t\tthis.remainingCount = 0;","\t\tthis.previousFailCount = 0;","\t\tthis.knownFailures = [];","\t\tthis.errors = [];","\t\tthis.stats = [];","\t\tthis.tests = [];","\t\tthis.failFastEnabled = opts.failFast || false;","","\t\tautoBind(this);","\t}","\tobserveFork(emitter) {","\t\temitter","\t\t\t.on('teardown', this.handleTeardown)","\t\t\t.on('stats', this.handleStats)","\t\t\t.on('test', this.handleTest)","\t\t\t.on('unhandledRejections', this.handleRejections)","\t\t\t.on('uncaughtException', this.handleExceptions)","\t\t\t.on('stdout', this.handleOutput.bind(this, 'stdout'))","\t\t\t.on('stderr', this.handleOutput.bind(this, 'stderr'));","\t}","\thandleRejections(data) {","\t\tthis.rejectionCount += data.rejections.length;","","\t\tdata.rejections.forEach(err => {","\t\t\terr.type = 'rejection';","\t\t\terr.file = data.file;","\t\t\tthis.emit('error', err, this);","\t\t\tthis.errors.push(err);","\t\t});","\t}","\thandleExceptions(data) {","\t\tthis.exceptionCount++;","\t\tconst err = data.exception;","\t\terr.type = 'exception';","\t\terr.file = data.file;","\t\tthis.emit('error', err, this);","\t\tthis.errors.push(err);","\t}","\thandleTeardown(data) {","\t\tthis.emit('dependencies', data.file, data.dependencies, this);","\t}","\thandleStats(stats) {","\t\tthis.emit('stats', stats, this);","","\t\tif (stats.hasExclusive) {","\t\t\tthis.hasExclusive = true;","\t\t}","","\t\tthis.testCount += stats.testCount;","\t}","\thandleTest(test) {","\t\ttest.title = this.prefixTitle(test.file) + test.title;","","\t\tif (test.error) {","\t\t\tthis.errors.push(test);","\t\t}","","\t\tif (test.failing && !test.error) {","\t\t\tthis.knownFailures.push(test);","\t\t}","","\t\tthis.emit('test', test, this);","\t}","\tprefixTitle(file) {","\t\tif (!this.prefixTitles) {","\t\t\treturn '';","\t\t}","","\t\tconst separator = ' ' + chalk.gray.dim(figures.pointerSmall) + ' ';","","\t\treturn prefixTitle(file, this.base, separator);","\t}","\thandleOutput(channel, data) {","\t\tthis.emit(channel, data, this);","\t}","\tprocessResults(results) {","\t\t// Assemble stats from all tests","\t\tthis.stats = results.map(result => result.stats);","\t\tthis.tests = results.map(result => result.tests);","\t\tthis.tests = flatten(this.tests);","\t\tthis.passCount = sum(this.stats, 'passCount');","\t\tthis.knownFailureCount = sum(this.stats, 'knownFailureCount');","\t\tthis.skipCount = sum(this.stats, 'skipCount');","\t\tthis.todoCount = sum(this.stats, 'todoCount');","\t\tthis.failCount = sum(this.stats, 'failCount');","\t\tthis.remainingCount = this.testCount - this.passCount - this.failCount - this.skipCount - this.todoCount - this.knownFailureCount;","\t}","}","","module.exports = RunStatus;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"12":0,"13":0,"16":0,"21":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"47":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"75":0,"78":0,"80":0,"81":0,"84":0,"87":0,"89":0,"90":0,"93":0,"94":0,"97":0,"100":0,"101":0,"104":0,"106":0,"109":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"125":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/prefix-title.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/prefix-title.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":5,"column":1},"end":{"line":14,"column":19}},"4":{"start":{"line":7,"column":36},"end":{"line":7,"column":61}},"5":{"start":{"line":13,"column":15},"end":{"line":13,"column":32}},"6":{"start":{"line":16,"column":1},"end":{"line":18,"column":2}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":22}},"8":{"start":{"line":20,"column":1},"end":{"line":20,"column":15}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":53}},{"start":{"line":7,"column":56},"end":{"line":7,"column":61}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},{"start":{"line":16,"column":1},"end":{"line":16,"column":1}}]}},"code":["'use strict';","const path = require('path');","","module.exports = (file, base, separator) => {","\tlet prefix = file","\t\t// Only replace this.base if it is found at the start of the path","\t\t.replace(base, (match, offset) => offset === 0 ? '' : match)","\t\t.replace(/\\.spec/, '')","\t\t.replace(/\\.test/, '')","\t\t.replace(/test-/g, '')","\t\t.replace(/\\.js$/, '')","\t\t.split(path.sep)","\t\t.filter(p => p !== '__tests__')","\t\t.join(separator);","","\tif (prefix.length > 0) {","\t\tprefix += separator;","\t}","","\treturn prefix;","};",""],"l":{"2":1,"4":1,"5":0,"7":0,"13":0,"16":0,"17":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/ava-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/ava-error.js","s":{"1":0,"2":0,"3":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":22}}}},"statementMap":{"1":{"start":{"line":5,"column":2},"end":{"line":5,"column":17}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":25}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}}},"branchMap":{},"code":["'use strict';","","class AvaError extends Error {","\tconstructor(message) {","\t\tsuper(message);","\t\tthis.name = 'AvaError';","\t}","}","","module.exports = AvaError;",""],"l":{"5":0,"6":0,"10":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/ava-files.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/ava-files.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":1,"125":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,1],"10":[1,0],"11":[1,0],"12":[0,0],"13":[1,0],"14":[1,1],"15":[1,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":1,"2":0,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"handlePaths","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}}},"2":{"name":"alreadySearchingParent","line":19,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":38}}},"3":{"name":"(anonymous_3)","line":104,"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":22}}},"4":{"name":"(anonymous_4)","line":128,"loc":{"start":{"line":128,"column":14},"end":{"line":128,"column":17}}},"5":{"name":"(anonymous_5)","line":137,"loc":{"start":{"line":137,"column":16},"end":{"line":137,"column":19}}},"6":{"name":"(anonymous_6)","line":147,"loc":{"start":{"line":147,"column":9},"end":{"line":147,"column":20}}},"7":{"name":"(anonymous_7)","line":198,"loc":{"start":{"line":198,"column":7},"end":{"line":198,"column":18}}},"8":{"name":"(anonymous_8)","line":244,"loc":{"start":{"line":244,"column":20},"end":{"line":244,"column":23}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":65}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"10":{"start":{"line":12,"column":0},"end":{"line":74,"column":1}},"11":{"start":{"line":14,"column":1},"end":{"line":14,"column":77}},"12":{"start":{"line":16,"column":1},"end":{"line":16,"column":35}},"13":{"start":{"line":17,"column":1},"end":{"line":17,"column":30}},"14":{"start":{"line":19,"column":1},"end":{"line":32,"column":2}},"15":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"16":{"start":{"line":21,"column":3},"end":{"line":21,"column":15}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"18":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"19":{"start":{"line":28,"column":3},"end":{"line":28,"column":16}},"20":{"start":{"line":31,"column":2},"end":{"line":31,"column":43}},"21":{"start":{"line":34,"column":1},"end":{"line":73,"column":5}},"22":{"start":{"line":36,"column":3},"end":{"line":36,"column":46}},"23":{"start":{"line":38,"column":3},"end":{"line":53,"column":4}},"24":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"25":{"start":{"line":40,"column":5},"end":{"line":40,"column":17}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":48}},"28":{"start":{"line":47,"column":4},"end":{"line":50,"column":5}},"29":{"start":{"line":49,"column":5},"end":{"line":49,"column":30}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":64}},"31":{"start":{"line":57,"column":3},"end":{"line":57,"column":31}},"32":{"start":{"line":60,"column":18},"end":{"line":60,"column":54}},"33":{"start":{"line":62,"column":3},"end":{"line":64,"column":4}},"34":{"start":{"line":63,"column":4},"end":{"line":63,"column":17}},"35":{"start":{"line":66,"column":3},"end":{"line":66,"column":15}},"36":{"start":{"line":68,"column":15},"end":{"line":68,"column":33}},"37":{"start":{"line":70,"column":3},"end":{"line":70,"column":45}},"38":{"start":{"line":71,"column":3},"end":{"line":71,"column":24}},"39":{"start":{"line":72,"column":3},"end":{"line":72,"column":24}},"40":{"start":{"line":76,"column":0},"end":{"line":80,"column":2}},"41":{"start":{"line":76,"column":37},"end":{"line":80,"column":1}},"42":{"start":{"line":82,"column":0},"end":{"line":88,"column":2}},"43":{"start":{"line":82,"column":37},"end":{"line":88,"column":1}},"44":{"start":{"line":90,"column":0},"end":{"line":95,"column":2}},"45":{"start":{"line":90,"column":36},"end":{"line":95,"column":1}},"46":{"start":{"line":97,"column":0},"end":{"line":97,"column":79}},"47":{"start":{"line":97,"column":39},"end":{"line":97,"column":78}},"48":{"start":{"line":97,"column":64},"end":{"line":97,"column":77}},"49":{"start":{"line":101,"column":0},"end":{"line":101,"column":72}},"50":{"start":{"line":101,"column":66},"end":{"line":101,"column":70}},"51":{"start":{"line":105,"column":2},"end":{"line":105,"column":26}},"52":{"start":{"line":107,"column":2},"end":{"line":115,"column":5}},"53":{"start":{"line":110,"column":3},"end":{"line":112,"column":4}},"54":{"start":{"line":111,"column":4},"end":{"line":111,"column":25}},"55":{"start":{"line":114,"column":3},"end":{"line":114,"column":15}},"56":{"start":{"line":117,"column":2},"end":{"line":119,"column":3}},"57":{"start":{"line":118,"column":3},"end":{"line":118,"column":36}},"58":{"start":{"line":121,"column":2},"end":{"line":121,"column":50}},"59":{"start":{"line":122,"column":2},"end":{"line":122,"column":21}},"60":{"start":{"line":123,"column":2},"end":{"line":123,"column":39}},"61":{"start":{"line":124,"column":2},"end":{"line":124,"column":42}},"62":{"start":{"line":126,"column":2},"end":{"line":126,"column":17}},"63":{"start":{"line":129,"column":2},"end":{"line":135,"column":5}},"64":{"start":{"line":138,"column":2},"end":{"line":145,"column":5}},"65":{"start":{"line":148,"column":2},"end":{"line":148,"column":25}},"66":{"start":{"line":149,"column":2},"end":{"line":149,"column":59}},"67":{"start":{"line":150,"column":2},"end":{"line":150,"column":43}},"68":{"start":{"line":152,"column":2},"end":{"line":152,"column":33}},"69":{"start":{"line":153,"column":2},"end":{"line":166,"column":5}},"70":{"start":{"line":154,"column":3},"end":{"line":154,"column":31}},"71":{"start":{"line":157,"column":3},"end":{"line":159,"column":4}},"72":{"start":{"line":158,"column":4},"end":{"line":158,"column":30}},"73":{"start":{"line":163,"column":3},"end":{"line":165,"column":4}},"74":{"start":{"line":164,"column":4},"end":{"line":164,"column":48}},"75":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"76":{"start":{"line":170,"column":3},"end":{"line":170,"column":69}},"77":{"start":{"line":173,"column":2},"end":{"line":173,"column":33}},"78":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"79":{"start":{"line":178,"column":3},"end":{"line":178,"column":16}},"80":{"start":{"line":181,"column":2},"end":{"line":181,"column":68}},"81":{"start":{"line":182,"column":2},"end":{"line":184,"column":3}},"82":{"start":{"line":183,"column":3},"end":{"line":183,"column":16}},"83":{"start":{"line":186,"column":2},"end":{"line":186,"column":77}},"84":{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},"85":{"start":{"line":188,"column":3},"end":{"line":188,"column":15}},"86":{"start":{"line":191,"column":2},"end":{"line":191,"column":96}},"87":{"start":{"line":192,"column":2},"end":{"line":194,"column":3}},"88":{"start":{"line":193,"column":3},"end":{"line":193,"column":15}},"89":{"start":{"line":196,"column":2},"end":{"line":196,"column":15}},"90":{"start":{"line":199,"column":2},"end":{"line":199,"column":47}},"91":{"start":{"line":200,"column":2},"end":{"line":200,"column":61}},"92":{"start":{"line":203,"column":2},"end":{"line":205,"column":3}},"93":{"start":{"line":204,"column":3},"end":{"line":204,"column":16}},"94":{"start":{"line":208,"column":2},"end":{"line":210,"column":3}},"95":{"start":{"line":209,"column":3},"end":{"line":209,"column":15}},"96":{"start":{"line":213,"column":2},"end":{"line":213,"column":41}},"97":{"start":{"line":214,"column":2},"end":{"line":216,"column":3}},"98":{"start":{"line":215,"column":3},"end":{"line":215,"column":16}},"99":{"start":{"line":220,"column":2},"end":{"line":231,"column":9}},"100":{"start":{"line":221,"column":3},"end":{"line":221,"column":48}},"101":{"start":{"line":223,"column":3},"end":{"line":228,"column":4}},"102":{"start":{"line":225,"column":4},"end":{"line":225,"column":44}},"103":{"start":{"line":227,"column":4},"end":{"line":227,"column":29}},"104":{"start":{"line":230,"column":3},"end":{"line":230,"column":19}},"105":{"start":{"line":235,"column":2},"end":{"line":238,"column":41}},"106":{"start":{"line":236,"column":22},"end":{"line":236,"column":71}},"107":{"start":{"line":238,"column":19},"end":{"line":238,"column":39}},"108":{"start":{"line":242,"column":2},"end":{"line":242,"column":97}},"109":{"start":{"line":245,"column":2},"end":{"line":245,"column":17}},"110":{"start":{"line":246,"column":2},"end":{"line":246,"column":19}},"111":{"start":{"line":248,"column":2},"end":{"line":254,"column":5}},"112":{"start":{"line":249,"column":3},"end":{"line":253,"column":4}},"113":{"start":{"line":250,"column":4},"end":{"line":250,"column":35}},"114":{"start":{"line":252,"column":4},"end":{"line":252,"column":24}},"115":{"start":{"line":261,"column":2},"end":{"line":263,"column":34}},"116":{"start":{"line":262,"column":22},"end":{"line":262,"column":71}},"117":{"start":{"line":263,"column":19},"end":{"line":263,"column":32}},"118":{"start":{"line":265,"column":2},"end":{"line":265,"column":86}},"119":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"120":{"start":{"line":268,"column":3},"end":{"line":268,"column":39}},"121":{"start":{"line":271,"column":2},"end":{"line":271,"column":35}},"122":{"start":{"line":273,"column":2},"end":{"line":276,"column":4}},"123":{"start":{"line":280,"column":0},"end":{"line":280,"column":26}},"124":{"start":{"line":281,"column":0},"end":{"line":281,"column":63}},"125":{"start":{"line":282,"column":0},"end":{"line":282,"column":63}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":3},"end":{"line":38,"column":3}},{"start":{"line":38,"column":3},"end":{"line":38,"column":3}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":18},"end":{"line":60,"column":22}},{"start":{"line":60,"column":26},"end":{"line":60,"column":54}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":3},"end":{"line":62,"column":3}},{"start":{"line":62,"column":3},"end":{"line":62,"column":3}}]},"8":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":7},"end":{"line":62,"column":37}},{"start":{"line":62,"column":41},"end":{"line":62,"column":85}}]},"9":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":49},"end":{"line":101,"column":54}},{"start":{"line":101,"column":58},"end":{"line":101,"column":70}}]},"10":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":19}},{"start":{"line":105,"column":23},"end":{"line":105,"column":25}}]},"11":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":15},"end":{"line":107,"column":28}},{"start":{"line":107,"column":32},"end":{"line":107,"column":34}}]},"12":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":3},"end":{"line":110,"column":3}},{"start":{"line":110,"column":3},"end":{"line":110,"column":3}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"14":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":17},"end":{"line":123,"column":32}},{"start":{"line":123,"column":36},"end":{"line":123,"column":38}}]},"15":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":13},"end":{"line":124,"column":24}},{"start":{"line":124,"column":28},"end":{"line":124,"column":41}}]},"16":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":3},"end":{"line":157,"column":3}},{"start":{"line":157,"column":3},"end":{"line":157,"column":3}}]},"17":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":7},"end":{"line":157,"column":26}},{"start":{"line":157,"column":30},"end":{"line":157,"column":48}}]},"18":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":3},"end":{"line":163,"column":3}},{"start":{"line":163,"column":3},"end":{"line":163,"column":3}}]},"19":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"20":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"21":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"22":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"23":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"24":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"25":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":38}},{"start":{"line":203,"column":42},"end":{"line":203,"column":76}}]},"26":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"27":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"28":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":3},"end":{"line":223,"column":3}},{"start":{"line":223,"column":3},"end":{"line":223,"column":3}}]},"29":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":3},"end":{"line":249,"column":3}},{"start":{"line":249,"column":3},"end":{"line":249,"column":3}}]},"30":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]}},"code":["'use strict';","const fs = require('fs');","const path = require('path');","const Promise = require('bluebird');","const slash = require('slash');","const globby = require('globby');","const flatten = require('lodash.flatten');","const autoBind = require('auto-bind');","const defaultIgnore = require('ignore-by-default').directories();","const multimatch = require('multimatch');","","function handlePaths(files, excludePatterns, globOptions) {","\t// Convert Promise to Bluebird","\tfiles = Promise.resolve(globby(files.concat(excludePatterns), globOptions));","","\tconst searchedParents = new Set();","\tconst foundFiles = new Set();","","\tfunction alreadySearchingParent(dir) {","\t\tif (searchedParents.has(dir)) {","\t\t\treturn true;","\t\t}","","\t\tconst parentDir = path.dirname(dir);","","\t\tif (parentDir === dir) {","\t\t\t// We have reached the root path","\t\t\treturn false;","\t\t}","","\t\treturn alreadySearchingParent(parentDir);","\t}","","\treturn files","\t\t.map(file => {","\t\t\tfile = path.resolve(globOptions.cwd, file);","","\t\t\tif (fs.statSync(file).isDirectory()) {","\t\t\t\tif (alreadySearchingParent(file)) {","\t\t\t\t\treturn null;","\t\t\t\t}","","\t\t\t\tsearchedParents.add(file);","","\t\t\t\tlet pattern = path.join(file, '**', '*.js');","","\t\t\t\tif (process.platform === 'win32') {","\t\t\t\t\t// Always use `/` in patterns, harmonizing matching across platforms","\t\t\t\t\tpattern = slash(pattern);","\t\t\t\t}","","\t\t\t\treturn handlePaths([pattern], excludePatterns, globOptions);","\t\t\t}","","\t\t\t// `globby` returns slashes even on Windows. Normalize here so the file","\t\t\t// paths are consistently platform-accurate as tests are run.","\t\t\treturn path.normalize(file);","\t\t})","\t\t.then(flatten)","\t\t.filter(file => file && path.extname(file) === '.js')","\t\t.filter(file => {","\t\t\tif (path.basename(file)[0] === '_' && globOptions.includeUnderscoredFiles !== true) {","\t\t\t\treturn false;","\t\t\t}","","\t\t\treturn true;","\t\t})","\t\t.map(file => path.resolve(file))","\t\t.filter(file => {","\t\t\tconst alreadyFound = foundFiles.has(file);","\t\t\tfoundFiles.add(file);","\t\t\treturn !alreadyFound;","\t\t});","}","","const defaultExcludePatterns = () => [","\t'!**/node_modules/**',","\t'!**/fixtures/**',","\t'!**/helpers/**'","];","","const defaultIncludePatterns = () => [","\t'test.js',","\t'test-*.js',","\t'test',","\t'**/__tests__',","\t'**/*.test.js'","];","","const defaultHelperPatterns = () => [","\t'**/__tests__/helpers/**/*.js',","\t'**/__tests__/**/_*.js',","\t'**/test/helpers/**/*.js',","\t'**/test/**/_*.js'","];","","const getDefaultIgnorePatterns = () => defaultIgnore.map(dir => `${dir}/**/*`);","","// Used on paths before they're passed to multimatch to harmonize matching","// across platforms","const matchable = process.platform === 'win32' ? slash : (path => path);","","class AvaFiles {","\tconstructor(options) {","\t\toptions = options || {};","","\t\tlet files = (options.files || []).map(file => {","\t\t\t// `./` should be removed from the beginning of patterns because","\t\t\t// otherwise they won't match change events from Chokidar","\t\t\tif (file.slice(0, 2) === './') {","\t\t\t\treturn file.slice(2);","\t\t\t}","","\t\t\treturn file;","\t\t});","","\t\tif (files.length === 0) {","\t\t\tfiles = defaultIncludePatterns();","\t\t}","","\t\tthis.excludePatterns = defaultExcludePatterns();","\t\tthis.files = files;","\t\tthis.sources = options.sources || [];","\t\tthis.cwd = options.cwd || process.cwd();","","\t\tautoBind(this);","\t}","\tfindTestFiles() {","\t\treturn handlePaths(this.files, this.excludePatterns, {","\t\t\tcwd: this.cwd,","\t\t\tcache: Object.create(null),","\t\t\tstatCache: Object.create(null),","\t\t\trealpathCache: Object.create(null),","\t\t\tsymlinks: Object.create(null)","\t\t});","\t}","\tfindTestHelpers() {","\t\treturn handlePaths(defaultHelperPatterns(), ['!**/node_modules/**'], {","\t\t\tcwd: this.cwd,","\t\t\tincludeUnderscoredFiles: true,","\t\t\tcache: Object.create(null),","\t\t\tstatCache: Object.create(null),","\t\t\trealpathCache: Object.create(null),","\t\t\tsymlinks: Object.create(null)","\t\t});","\t}","\tisSource(filePath) {","\t\tlet mixedPatterns = [];","\t\tconst defaultIgnorePatterns = getDefaultIgnorePatterns();","\t\tconst overrideDefaultIgnorePatterns = [];","","\t\tlet hasPositivePattern = false;","\t\tthis.sources.forEach(pattern => {","\t\t\tmixedPatterns.push(pattern);","","\t\t\t// TODO: Why not just `pattern[0] !== '!'`?","\t\t\tif (!hasPositivePattern && pattern[0] !== '!') {","\t\t\t\thasPositivePattern = true;","\t\t\t}","","\t\t\t// Extract patterns that start with an ignored directory. These need to be","\t\t\t// rematched separately.","\t\t\tif (defaultIgnore.indexOf(pattern.split('/')[0]) >= 0) {","\t\t\t\toverrideDefaultIgnorePatterns.push(pattern);","\t\t\t}","\t\t});","","\t\t// Same defaults as used for Chokidar","\t\tif (!hasPositivePattern) {","\t\t\tmixedPatterns = ['package.json', '**/*.js'].concat(mixedPatterns);","\t\t}","","\t\tfilePath = matchable(filePath);","","\t\t// Ignore paths outside the current working directory.","\t\t// They can't be matched to a pattern.","\t\tif (/^\\.\\.\\//.test(filePath)) {","\t\t\treturn false;","\t\t}","","\t\tconst isSource = multimatch(filePath, mixedPatterns).length === 1;","\t\tif (!isSource) {","\t\t\treturn false;","\t\t}","","\t\tconst isIgnored = multimatch(filePath, defaultIgnorePatterns).length === 1;","\t\tif (!isIgnored) {","\t\t\treturn true;","\t\t}","","\t\tconst isErroneouslyIgnored = multimatch(filePath, overrideDefaultIgnorePatterns).length === 1;","\t\tif (isErroneouslyIgnored) {","\t\t\treturn true;","\t\t}","","\t\treturn false;","\t}","\tisTest(filePath) {","\t\tconst excludePatterns = this.excludePatterns;","\t\tconst initialPatterns = this.files.concat(excludePatterns);","","\t\t// Like in `api.js`, tests must be `.js` files and not start with `_`","\t\tif (path.extname(filePath) !== '.js' || path.basename(filePath)[0] === '_') {","\t\t\treturn false;","\t\t}","","\t\t// Check if the entire path matches a pattern","\t\tif (multimatch(matchable(filePath), initialPatterns).length === 1) {","\t\t\treturn true;","\t\t}","","\t\t// Check if the path contains any directory components","\t\tconst dirname = path.dirname(filePath);","\t\tif (dirname === '.') {","\t\t\treturn false;","\t\t}","","\t\t// Compute all possible subpaths. Note that the dirname is assumed to be","\t\t// relative to the working directory, without a leading `./`.","\t\tconst subpaths = dirname.split(/[\\\\/]/).reduce((subpaths, component) => {","\t\t\tconst parent = subpaths[subpaths.length - 1];","","\t\t\tif (parent) {","\t\t\t\t// Always use `/`` to makes multimatch consistent across platforms","\t\t\t\tsubpaths.push(`${parent}/${component}`);","\t\t\t} else {","\t\t\t\tsubpaths.push(component);","\t\t\t}","","\t\t\treturn subpaths;","\t\t}, []);","","\t\t// Check if any of the possible subpaths match a pattern. If so, generate a","\t\t// new pattern with **/*.js.","\t\tconst recursivePatterns = subpaths","\t\t\t.filter(subpath => multimatch(subpath, initialPatterns).length === 1)","\t\t\t// Always use `/` to makes multimatch consistent across platforms","\t\t\t.map(subpath => `${subpath}/**/*.js`);","","\t\t// See if the entire path matches any of the subpaths patterns, taking the","\t\t// excludePatterns into account. This mimicks the behavior in api.js","\t\treturn multimatch(matchable(filePath), recursivePatterns.concat(excludePatterns)).length === 1;","\t}","\tgetChokidarPatterns() {","\t\tlet paths = [];","\t\tlet ignored = [];","","\t\tthis.sources.forEach(pattern => {","\t\t\tif (pattern[0] === '!') {","\t\t\t\tignored.push(pattern.slice(1));","\t\t\t} else {","\t\t\t\tpaths.push(pattern);","\t\t\t}","\t\t});","","\t\t// Allow source patterns to override the default ignore patterns. Chokidar","\t\t// ignores paths that match the list of ignored patterns. It uses anymatch","\t\t// under the hood, which supports negation patterns. For any source pattern","\t\t// that starts with an ignored directory, ensure the corresponding negation","\t\t// pattern is added to the ignored paths.","\t\tconst overrideDefaultIgnorePatterns = paths","\t\t\t.filter(pattern => defaultIgnore.indexOf(pattern.split('/')[0]) >= 0)","\t\t\t.map(pattern => `!${pattern}`);","","\t\tignored = getDefaultIgnorePatterns().concat(ignored, overrideDefaultIgnorePatterns);","","\t\tif (paths.length === 0) {","\t\t\tpaths = ['package.json', '**/*.js'];","\t\t}","","\t\tpaths = paths.concat(this.files);","","\t\treturn {","\t\t\tpaths,","\t\t\tignored","\t\t};","\t}","}","","module.exports = AvaFiles;","module.exports.defaultIncludePatterns = defaultIncludePatterns;","module.exports.defaultExcludePatterns = defaultExcludePatterns;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"14":1,"16":1,"17":1,"19":1,"20":0,"21":0,"24":0,"26":0,"28":0,"31":0,"34":1,"36":0,"38":0,"39":0,"40":0,"43":0,"45":0,"47":0,"49":0,"52":0,"57":0,"60":0,"62":0,"63":0,"66":0,"68":0,"70":0,"71":0,"72":0,"76":1,"82":1,"90":1,"97":1,"101":1,"105":1,"107":1,"110":0,"111":0,"114":0,"117":1,"118":1,"121":1,"122":1,"123":1,"124":1,"126":1,"129":1,"138":0,"148":0,"149":0,"150":0,"152":0,"153":0,"154":0,"157":0,"158":0,"163":0,"164":0,"169":0,"170":0,"173":0,"177":0,"178":0,"181":0,"182":0,"183":0,"186":0,"187":0,"188":0,"191":0,"192":0,"193":0,"196":0,"199":0,"200":0,"203":0,"204":0,"208":0,"209":0,"213":0,"214":0,"215":0,"220":0,"221":0,"223":0,"225":0,"227":0,"230":0,"235":0,"236":0,"238":0,"242":0,"245":0,"246":0,"248":0,"249":0,"250":0,"252":0,"261":0,"262":0,"263":0,"265":0,"267":0,"268":0,"271":0,"273":0,"280":1,"281":1,"282":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/fork.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/fork.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[0,1],"2":[0,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":142,"loc":{"start":{"line":142,"column":14},"end":{"line":142,"column":26}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"7":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"8":{"start":{"line":10,"column":1},"end":{"line":10,"column":357}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}},"10":{"start":{"line":16,"column":0},"end":{"line":23,"column":1}},"11":{"start":{"line":17,"column":1},"end":{"line":17,"column":30}},"12":{"start":{"line":19,"column":1},"end":{"line":22,"column":24}},"13":{"start":{"line":21,"column":12},"end":{"line":21,"column":27}},"14":{"start":{"line":27,"column":0},"end":{"line":27,"column":45}},"15":{"start":{"line":29,"column":0},"end":{"line":178,"column":2}},"16":{"start":{"line":30,"column":1},"end":{"line":37,"column":10}},"17":{"start":{"line":39,"column":1},"end":{"line":39,"column":76}},"18":{"start":{"line":41,"column":1},"end":{"line":46,"column":4}},"19":{"start":{"line":48,"column":1},"end":{"line":48,"column":42}},"20":{"start":{"line":50,"column":1},"end":{"line":50,"column":21}},"21":{"start":{"line":51,"column":1},"end":{"line":62,"column":3}},"22":{"start":{"line":52,"column":2},"end":{"line":61,"column":3}},"23":{"start":{"line":56,"column":3},"end":{"line":60,"column":6}},"24":{"start":{"line":64,"column":1},"end":{"line":64,"column":24}},"25":{"start":{"line":65,"column":1},"end":{"line":65,"column":13}},"26":{"start":{"line":67,"column":1},"end":{"line":121,"column":4}},"27":{"start":{"line":68,"column":2},"end":{"line":68,"column":25}},"28":{"start":{"line":71,"column":2},"end":{"line":82,"column":5}},"29":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":11}},"31":{"start":{"line":76,"column":3},"end":{"line":76,"column":48}},"32":{"start":{"line":77,"column":3},"end":{"line":77,"column":29}},"33":{"start":{"line":79,"column":3},"end":{"line":79,"column":48}},"34":{"start":{"line":81,"column":3},"end":{"line":81,"column":35}},"35":{"start":{"line":84,"column":2},"end":{"line":86,"column":5}},"36":{"start":{"line":85,"column":3},"end":{"line":85,"column":27}},"37":{"start":{"line":88,"column":2},"end":{"line":92,"column":5}},"38":{"start":{"line":89,"column":3},"end":{"line":89,"column":18}},"39":{"start":{"line":90,"column":3},"end":{"line":90,"column":28}},"40":{"start":{"line":91,"column":3},"end":{"line":91,"column":20}},"41":{"start":{"line":94,"column":2},"end":{"line":108,"column":5}},"42":{"start":{"line":95,"column":3},"end":{"line":97,"column":4}},"43":{"start":{"line":96,"column":4},"end":{"line":96,"column":88}},"44":{"start":{"line":99,"column":3},"end":{"line":101,"column":4}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":70}},"46":{"start":{"line":103,"column":3},"end":{"line":107,"column":4}},"47":{"start":{"line":104,"column":4},"end":{"line":104,"column":21}},"48":{"start":{"line":106,"column":4},"end":{"line":106,"column":75}},"49":{"start":{"line":110,"column":2},"end":{"line":120,"column":5}},"50":{"start":{"line":111,"column":3},"end":{"line":111,"column":20}},"51":{"start":{"line":113,"column":3},"end":{"line":113,"column":48}},"52":{"start":{"line":115,"column":3},"end":{"line":117,"column":4}},"53":{"start":{"line":116,"column":4},"end":{"line":116,"column":74}},"54":{"start":{"line":119,"column":3},"end":{"line":119,"column":33}},"55":{"start":{"line":124,"column":1},"end":{"line":127,"column":4}},"56":{"start":{"line":125,"column":2},"end":{"line":125,"column":15}},"57":{"start":{"line":126,"column":2},"end":{"line":126,"column":17}},"58":{"start":{"line":130,"column":1},"end":{"line":132,"column":4}},"59":{"start":{"line":131,"column":2},"end":{"line":131,"column":19}},"60":{"start":{"line":134,"column":1},"end":{"line":136,"column":4}},"61":{"start":{"line":135,"column":2},"end":{"line":135,"column":26}},"62":{"start":{"line":138,"column":1},"end":{"line":140,"column":4}},"63":{"start":{"line":139,"column":2},"end":{"line":139,"column":26}},"64":{"start":{"line":142,"column":1},"end":{"line":145,"column":3}},"65":{"start":{"line":143,"column":2},"end":{"line":143,"column":29}},"66":{"start":{"line":144,"column":2},"end":{"line":144,"column":17}},"67":{"start":{"line":147,"column":1},"end":{"line":150,"column":3}},"68":{"start":{"line":148,"column":2},"end":{"line":148,"column":19}},"69":{"start":{"line":149,"column":2},"end":{"line":149,"column":17}},"70":{"start":{"line":152,"column":1},"end":{"line":155,"column":3}},"71":{"start":{"line":153,"column":2},"end":{"line":153,"column":20}},"72":{"start":{"line":154,"column":2},"end":{"line":154,"column":17}},"73":{"start":{"line":158,"column":1},"end":{"line":158,"column":21}},"74":{"start":{"line":160,"column":1},"end":{"line":162,"column":4}},"75":{"start":{"line":161,"column":2},"end":{"line":161,"column":17}},"76":{"start":{"line":164,"column":1},"end":{"line":175,"column":3}},"77":{"start":{"line":165,"column":2},"end":{"line":168,"column":3}},"78":{"start":{"line":166,"column":3},"end":{"line":166,"column":24}},"79":{"start":{"line":167,"column":3},"end":{"line":167,"column":18}},"80":{"start":{"line":170,"column":2},"end":{"line":172,"column":5}},"81":{"start":{"line":171,"column":3},"end":{"line":171,"column":24}},"82":{"start":{"line":174,"column":2},"end":{"line":174,"column":17}},"83":{"start":{"line":177,"column":1},"end":{"line":177,"column":16}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":0},"end":{"line":9,"column":0}},{"start":{"line":9,"column":0},"end":{"line":9,"column":0}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":0},"end":{"line":16,"column":0}},{"start":{"line":16,"column":0},"end":{"line":16,"column":0}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":30},"end":{"line":36,"column":3}},{"start":{"line":36,"column":6},"end":{"line":36,"column":11}}]},"4":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":50},"end":{"line":39,"column":59}},{"start":{"line":39,"column":62},"end":{"line":39,"column":74}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":20}},{"start":{"line":45,"column":24},"end":{"line":45,"column":40}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":3}},{"start":{"line":72,"column":3},"end":{"line":72,"column":3}}]},"8":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":3},"end":{"line":95,"column":3}},{"start":{"line":95,"column":3},"end":{"line":95,"column":3}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":3},"end":{"line":99,"column":3}},{"start":{"line":99,"column":3},"end":{"line":99,"column":3}}]},"10":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":7},"end":{"line":99,"column":20}},{"start":{"line":99,"column":24},"end":{"line":99,"column":30}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":3},"end":{"line":103,"column":3}},{"start":{"line":103,"column":3},"end":{"line":103,"column":3}}]},"12":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":3},"end":{"line":115,"column":3}},{"start":{"line":115,"column":3},"end":{"line":115,"column":3}}]},"13":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]}},"code":["'use strict';","const childProcess = require('child_process');","const path = require('path');","const fs = require('fs');","const Promise = require('bluebird');","const debug = require('debug')('ava');","const AvaError = require('./ava-error');","","if (fs.realpathSync(__filename) !== __filename) {","\tconsole.warn('WARNING: `npm link ava` and the `--preserve-symlink` flag are incompatible. We have detected that AVA is linked via `npm link`, and that you are using either an early version of Node 6, or the `--preserve-symlink` flag. This breaks AVA. You should upgrade to Node 6.2.0+, avoid the `--preserve-symlink` flag, or avoid using `npm link ava`.');","}","","let env = process.env;","","// Ensure NODE_PATH paths are absolute","if (env.NODE_PATH) {","\tenv = Object.assign({}, env);","","\tenv.NODE_PATH = env.NODE_PATH","\t\t.split(path.delimiter)","\t\t.map(x => path.resolve(x))","\t\t.join(path.delimiter);","}","","// In case the test file imports a different AVA install,","// the presence of this variable allows it to require this one instead","env.AVA_PATH = path.resolve(__dirname, '..');","","module.exports = (file, opts, execArgv) => {","\topts = Object.assign({","\t\tfile,","\t\tbaseDir: process.cwd(),","\t\ttty: process.stdout.isTTY ? {","\t\t\tcolumns: process.stdout.columns,","\t\t\trows: process.stdout.rows","\t\t} : false","\t}, opts);","","\tconst args = [JSON.stringify(opts), opts.color ? '--color' : '--no-color'];","","\tconst ps = childProcess.fork(path.join(__dirname, 'test-worker.js'), args, {","\t\tcwd: opts.projectDir,","\t\tsilent: true,","\t\tenv,","\t\texecArgv: execArgv || process.execArgv","\t});","","\tconst relFile = path.relative('.', file);","","\tlet exiting = false;","\tconst send = (name, data) => {","\t\tif (!exiting) {","\t\t\t// This seems to trigger a Node bug which kills the AVA master process, at","\t\t\t// least while running AVA's tests. See","\t\t\t// <https://github.com/novemberborn/_ava-tap-crash> for more details.","\t\t\tps.send({","\t\t\t\tname: `ava-${name}`,","\t\t\t\tdata,","\t\t\t\tava: true","\t\t\t});","\t\t}","\t};","","\tconst testResults = [];","\tlet results;","","\tconst promise = new Promise((resolve, reject) => {","\t\tps.on('error', reject);","","\t\t// Emit `test` and `stats` events","\t\tps.on('message', event => {","\t\t\tif (!event.ava) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tevent.name = event.name.replace(/^ava-/, '');","\t\t\tevent.data.file = relFile;","","\t\t\tdebug('ipc %s:\\n%o', event.name, event.data);","","\t\t\tps.emit(event.name, event.data);","\t\t});","","\t\tps.on('test', props => {","\t\t\ttestResults.push(props);","\t\t});","","\t\tps.on('results', data => {","\t\t\tresults = data;","\t\t\tdata.tests = testResults;","\t\t\tsend('teardown');","\t\t});","","\t\tps.on('exit', (code, signal) => {","\t\t\tif (code > 0) {","\t\t\t\treturn reject(new AvaError(`${relFile} exited with a non-zero exit code: ${code}`));","\t\t\t}","","\t\t\tif (code === null && signal) {","\t\t\t\treturn reject(new AvaError(`${relFile} exited due to ${signal}`));","\t\t\t}","","\t\t\tif (results) {","\t\t\t\tresolve(results);","\t\t\t} else {","\t\t\t\treject(new AvaError(`Test results were not received from ${relFile}`));","\t\t\t}","\t\t});","","\t\tps.on('no-tests', data => {","\t\t\tsend('teardown');","","\t\t\tlet message = `No tests found in ${relFile}`;","","\t\t\tif (!data.avaRequired) {","\t\t\t\tmessage += ', make sure to import \"ava\" at the top of your test file';","\t\t\t}","","\t\t\treject(new AvaError(message));","\t\t});","\t});","","\t// Teardown finished, now exit","\tps.on('teardown', () => {","\t\tsend('exit');","\t\texiting = true;","\t});","","\t// Uncaught exception in fork, need to exit","\tps.on('uncaughtException', () => {","\t\tsend('teardown');","\t});","","\tps.stdout.on('data', data => {","\t\tps.emit('stdout', data);","\t});","","\tps.stderr.on('data', data => {","\t\tps.emit('stderr', data);","\t});","","\tpromise.on = function () {","\t\tps.on.apply(ps, arguments);","\t\treturn promise;","\t};","","\tpromise.send = (name, data) => {","\t\tsend(name, data);","\t\treturn promise;","\t};","","\tpromise.exit = () => {","\t\tsend('init-exit');","\t\treturn promise;","\t};","","\t// Send 'run' event only when fork is listening for it","\tlet isReady = false;","","\tps.on('stats', () => {","\t\tisReady = true;","\t});","","\tpromise.run = options => {","\t\tif (isReady) {","\t\t\tsend('run', options);","\t\t\treturn promise;","\t\t}","","\t\tps.on('stats', () => {","\t\t\tsend('run', options);","\t\t});","","\t\treturn promise;","\t};","","\treturn promise;","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"13":1,"16":1,"17":0,"19":0,"21":0,"27":1,"29":1,"30":0,"39":0,"41":0,"48":0,"50":0,"51":0,"52":0,"56":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"73":0,"76":0,"77":0,"79":0,"81":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"94":0,"95":0,"96":0,"99":0,"100":0,"103":0,"104":0,"106":0,"110":0,"111":0,"113":0,"115":0,"116":0,"119":0,"124":0,"125":0,"126":0,"130":0,"131":0,"134":0,"135":0,"138":0,"139":0,"142":0,"143":0,"144":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"158":0,"160":0,"161":0,"164":0,"165":0,"166":0,"167":0,"170":0,"171":0,"174":0,"177":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":1,"11":1,"12":0,"13":0},"b":{"1":[0,1],"2":[1,1],"3":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"5":{"start":{"line":13,"column":0},"end":{"line":27,"column":1}},"6":{"start":{"line":14,"column":1},"end":{"line":14,"column":37}},"7":{"start":{"line":15,"column":1},"end":{"line":15,"column":19}},"8":{"start":{"line":17,"column":1},"end":{"line":19,"column":2}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":26}},"10":{"start":{"line":21,"column":1},"end":{"line":26,"column":2}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":29}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":38}},"13":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":0},"end":{"line":13,"column":0}},{"start":{"line":13,"column":0},"end":{"line":13,"column":0}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":12}},{"start":{"line":13,"column":16},"end":{"line":13,"column":58}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]}},"code":["//#!/usr/bin/env node","'use strict';","const path = require('path');","const debug = require('debug')('ava');","","// Prefer the local installation of AVA.","const resolveCwd = require('resolve-cwd');","const localCLI = resolveCwd('ava/cli');","","// Use `path.relative()` to detect local AVA installation,","// because __filename's case is inconsistent on Windows","// see https://github.com/nodejs/node/issues/6624","if (localCLI && path.relative(localCLI, __filename) !== '') {","\tdebug('Using local install of AVA');","\trequire(localCLI); // eslint-disable-line import/no-dynamic-require","} else {","\tif (debug.enabled) {","\t\trequire('time-require'); // eslint-disable-line import/no-unassigned-import","\t}","","\ttry {","\t\trequire('./lib/cli').run();","\t} catch (err) {","\t\tconsole.error(`\\n  ${err.message}`);","\t\tprocess.exit(1);","\t}","}",""],"l":{"3":1,"4":1,"7":1,"8":1,"13":1,"14":0,"15":0,"17":1,"18":0,"21":1,"22":1,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":1,"36":1,"37":1,"38":0,"39":1,"40":1,"41":0,"42":1,"43":1,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0},"b":{"1":[0,1],"2":[0,1],"3":[0,1],"4":[0,1],"5":[1,1,0,0,1,0],"6":[0,1],"7":[1,1,0],"8":[0,1],"9":[1,1],"10":[1,0],"11":[0,1],"12":[0,1],"13":[1,0],"14":[1,0],"15":[1,1],"16":[0,1],"17":[0,1],"18":[0,0],"19":[0,0],"20":[0,0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":49}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}},"19":{"start":{"line":23,"column":0},"end":{"line":200,"column":2}},"20":{"start":{"line":24,"column":1},"end":{"line":24,"column":34}},"21":{"start":{"line":26,"column":1},"end":{"line":26,"column":41}},"22":{"start":{"line":27,"column":1},"end":{"line":27,"column":79}},"23":{"start":{"line":29,"column":1},"end":{"line":101,"column":4}},"24":{"start":{"line":103,"column":1},"end":{"line":103,"column":41}},"25":{"start":{"line":105,"column":1},"end":{"line":108,"column":2}},"26":{"start":{"line":106,"column":2},"end":{"line":106,"column":24}},"27":{"start":{"line":107,"column":2},"end":{"line":107,"column":9}},"28":{"start":{"line":110,"column":1},"end":{"line":115,"column":2}},"29":{"start":{"line":114,"column":2},"end":{"line":114,"column":109}},"30":{"start":{"line":117,"column":1},"end":{"line":119,"column":2}},"31":{"start":{"line":118,"column":2},"end":{"line":118,"column":124}},"32":{"start":{"line":121,"column":1},"end":{"line":123,"column":2}},"33":{"start":{"line":122,"column":2},"end":{"line":122,"column":166}},"34":{"start":{"line":126,"column":1},"end":{"line":126,"column":32}},"35":{"start":{"line":128,"column":1},"end":{"line":144,"column":4}},"36":{"start":{"line":146,"column":1},"end":{"line":146,"column":14}},"37":{"start":{"line":148,"column":1},"end":{"line":154,"column":2}},"38":{"start":{"line":149,"column":2},"end":{"line":149,"column":31}},"39":{"start":{"line":150,"column":8},"end":{"line":154,"column":2}},"40":{"start":{"line":151,"column":2},"end":{"line":151,"column":54}},"41":{"start":{"line":153,"column":2},"end":{"line":153,"column":73}},"42":{"start":{"line":156,"column":1},"end":{"line":156,"column":20}},"43":{"start":{"line":157,"column":1},"end":{"line":157,"column":37}},"44":{"start":{"line":159,"column":1},"end":{"line":159,"column":16}},"45":{"start":{"line":161,"column":1},"end":{"line":168,"column":4}},"46":{"start":{"line":162,"column":2},"end":{"line":162,"column":27}},"47":{"start":{"line":163,"column":2},"end":{"line":163,"column":36}},"48":{"start":{"line":164,"column":2},"end":{"line":164,"column":47}},"49":{"start":{"line":166,"column":2},"end":{"line":166,"column":40}},"50":{"start":{"line":167,"column":2},"end":{"line":167,"column":40}},"51":{"start":{"line":170,"column":1},"end":{"line":170,"column":65}},"52":{"start":{"line":172,"column":1},"end":{"line":199,"column":2}},"53":{"start":{"line":173,"column":2},"end":{"line":185,"column":3}},"54":{"start":{"line":174,"column":3},"end":{"line":174,"column":72}},"55":{"start":{"line":175,"column":3},"end":{"line":175,"column":39}},"56":{"start":{"line":177,"column":3},"end":{"line":184,"column":4}},"57":{"start":{"line":179,"column":4},"end":{"line":179,"column":69}},"58":{"start":{"line":180,"column":4},"end":{"line":180,"column":19}},"59":{"start":{"line":183,"column":4},"end":{"line":183,"column":14}},"60":{"start":{"line":187,"column":2},"end":{"line":198,"column":6}},"61":{"start":{"line":189,"column":4},"end":{"line":189,"column":29}},"62":{"start":{"line":190,"column":4},"end":{"line":190,"column":113}},"63":{"start":{"line":195,"column":4},"end":{"line":197,"column":7}},"64":{"start":{"line":196,"column":5},"end":{"line":196,"column":15}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":40},"end":{"line":27,"column":53}},{"start":{"line":27,"column":56},"end":{"line":27,"column":78}}]},"2":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":28},"end":{"line":78,"column":38}},{"start":{"line":78,"column":41},"end":{"line":78,"column":76}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":1},"end":{"line":105,"column":1}},{"start":{"line":105,"column":1},"end":{"line":105,"column":1}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":1},"end":{"line":110,"column":1}},{"start":{"line":110,"column":1},"end":{"line":110,"column":1}}]},"5":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},{"start":{"line":111,"column":26},"end":{"line":111,"column":39}},{"start":{"line":111,"column":45},"end":{"line":111,"column":61}},{"start":{"line":111,"column":65},"end":{"line":111,"column":78}},{"start":{"line":112,"column":3},"end":{"line":112,"column":13}},{"start":{"line":112,"column":17},"end":{"line":112,"column":25}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},{"start":{"line":117,"column":1},"end":{"line":117,"column":1}}]},"7":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":24}},{"start":{"line":117,"column":28},"end":{"line":117,"column":41}},{"start":{"line":117,"column":46},"end":{"line":117,"column":50}}]},"8":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":1},"end":{"line":121,"column":1}},{"start":{"line":121,"column":1},"end":{"line":121,"column":1}}]},"9":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":5},"end":{"line":121,"column":25}},{"start":{"line":121,"column":29},"end":{"line":121,"column":42}}]},"10":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":45},"end":{"line":138,"column":55}},{"start":{"line":138,"column":58},"end":{"line":138,"column":71}}]},"11":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":34},"end":{"line":141,"column":64}},{"start":{"line":141,"column":67},"end":{"line":141,"column":68}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":1},"end":{"line":148,"column":1}},{"start":{"line":148,"column":1},"end":{"line":148,"column":1}}]},"13":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":5},"end":{"line":148,"column":13}},{"start":{"line":148,"column":17},"end":{"line":148,"column":28}}]},"14":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"15":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":24}},{"start":{"line":150,"column":28},"end":{"line":150,"column":32}}]},"16":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":34},"end":{"line":170,"column":43}},{"start":{"line":170,"column":46},"end":{"line":170,"column":64}}]},"17":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":1},"end":{"line":172,"column":1}},{"start":{"line":172,"column":1},"end":{"line":172,"column":1}}]},"18":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":3},"end":{"line":177,"column":3}},{"start":{"line":177,"column":3},"end":{"line":177,"column":3}}]},"19":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":106},"end":{"line":190,"column":107}},{"start":{"line":190,"column":110},"end":{"line":190,"column":111}}]},"20":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":16},"end":{"line":190,"column":39}},{"start":{"line":190,"column":43},"end":{"line":190,"column":71}},{"start":{"line":190,"column":75},"end":{"line":190,"column":103}}]}},"code":["'use strict';","const path = require('path');","const updateNotifier = require('update-notifier');","const figures = require('figures');","const arrify = require('arrify');","const meow = require('meow');","const Promise = require('bluebird');","const pkgConf = require('pkg-conf');","const isCi = require('is-ci');","const hasFlag = require('has-flag');","const Api = require('../api');","const colors = require('./colors');","const VerboseReporter = require('./reporters/verbose');","const MiniReporter = require('./reporters/mini');","const TapReporter = require('./reporters/tap');","const Logger = require('./logger');","const Watcher = require('./watcher');","const babelConfigHelper = require('./babel-config');","","// Bluebird specific","Promise.longStackTraces();","","exports.run = () => {","\tconst conf = pkgConf.sync('ava');","","\tconst filepath = pkgConf.filepath(conf);","\tconst projectDir = filepath === null ? process.cwd() : path.dirname(filepath);","","\tconst cli = meow(`","\t\tUsage","\t\t  ava [<file|directory|glob> ...]","","\t\tOptions","\t\t  --init                  Add AVA to your project","\t\t  --fail-fast             Stop after first test failure","\t\t  --serial, -s            Run tests serially","\t\t  --tap, -t               Generate TAP output","\t\t  --verbose, -v           Enable verbose output","\t\t  --no-cache              Disable the transpiler cache","\t\t  --no-power-assert       Disable Power Assert","\t\t  --color                 Force color output","\t\t  --no-color              Disable color output","\t\t  --match, -m             Only run tests with matching title (Can be repeated)","\t\t  --watch, -w             Re-run tests when tests and source files change","\t\t  --timeout, -T           Set global timeout","\t\t  --concurrency, -c       Maximum number of test files running at the same time (EXPERIMENTAL)","\t\t  --update-snapshots, -u  Update snapshots","","\t\tExamples","\t\t  ava","\t\t  ava test.js test2.js","\t\t  ava test-*.js","\t\t  ava test","\t\t  ava --init","\t\t  ava --init foo.js","","\t\tDefault patterns when no arguments:","\t\ttest.js test-*.js test/**/*.js **/__tests__/**/*.js **/*.test.js","\t`, {","\t\tstring: [","\t\t\t'_',","\t\t\t'match',","\t\t\t'timeout',","\t\t\t'concurrency'","\t\t],","\t\tboolean: [","\t\t\t'init',","\t\t\t'fail-fast',","\t\t\t'serial',","\t\t\t'tap',","\t\t\t'verbose',","\t\t\t'watch',","\t\t\t'update-snapshots',","\t\t\t'color'","\t\t],","\t\tdefault: {","\t\t\tcache: conf.cache,","\t\t\tcolor: 'color' in conf ? conf.color : require('supports-color') !== false,","\t\t\tconcurrency: conf.concurrency,","\t\t\tfailFast: conf.failFast,","\t\t\tinit: conf.init,","\t\t\tmatch: conf.match,","\t\t\tpowerAssert: conf.powerAssert,","\t\t\tserial: conf.serial,","\t\t\ttap: conf.tap,","\t\t\ttimeout: conf.timeout,","\t\t\tupdateSnapshots: conf.updateSnapshots,","\t\t\tverbose: conf.verbose,","\t\t\twatch: conf.watch","\t\t},","\t\talias: {","\t\t\tt: 'tap',","\t\t\tv: 'verbose',","\t\t\ts: 'serial',","\t\t\tm: 'match',","\t\t\tw: 'watch',","\t\t\tT: 'timeout',","\t\t\tc: 'concurrency',","\t\t\tu: 'update-snapshots'","\t\t}","\t});","","\tupdateNotifier({pkg: cli.pkg}).notify();","","\tif (cli.flags.init) {","\t\trequire('ava-init')();","\t\treturn;","\t}","","\tif (","\t\t((hasFlag('--watch') || hasFlag('-w')) && (hasFlag('--tap') || hasFlag('-t'))) ||","\t\t(conf.watch && conf.tap)","\t) {","\t\tthrow new Error(colors.error(figures.cross) + ' The TAP reporter is not available when using watch mode.');","\t}","","\tif ((hasFlag('--watch') || hasFlag('-w')) && isCi) {","\t\tthrow new Error(colors.error(figures.cross) + ' Watch mode is not available in CI, as it prevents AVA from terminating.');","\t}","","\tif (hasFlag('--require') || hasFlag('-r')) {","\t\tthrow new Error(colors.error(figures.cross) + ' The --require and -r flags are deprecated. Requirements should be configured in package.json - see documentation.');","\t}","","\t// Copy resultant cli.flags into conf for use with Api and elsewhere","\tObject.assign(conf, cli.flags);","","\tconst api = new Api({","\t\tfailFast: conf.failFast,","\t\tfailWithoutAssertions: conf.failWithoutAssertions !== false,","\t\tserial: conf.serial,","\t\trequire: arrify(conf.require),","\t\tcacheEnabled: conf.cache !== false,","\t\tpowerAssert: conf.powerAssert !== false,","\t\texplicitTitles: conf.watch,","\t\tmatch: arrify(conf.match),","\t\tbabelConfig: babelConfigHelper.validate(conf.babel),","\t\tresolveTestsFrom: cli.input.length === 0 ? projectDir : process.cwd(),","\t\tprojectDir,","\t\ttimeout: conf.timeout,","\t\tconcurrency: conf.concurrency ? parseInt(conf.concurrency, 10) : 0,","\t\tupdateSnapshots: conf.updateSnapshots,","\t\tcolor: conf.color","\t});","","\tlet reporter;","","\tif (conf.tap && !conf.watch) {","\t\treporter = new TapReporter();","\t} else if (conf.verbose || isCi) {","\t\treporter = new VerboseReporter({color: conf.color});","\t} else {","\t\treporter = new MiniReporter({color: conf.color, watching: conf.watch});","\t}","","\treporter.api = api;","\tconst logger = new Logger(reporter);","","\tlogger.start();","","\tapi.on('test-run', runStatus => {","\t\treporter.api = runStatus;","\t\trunStatus.on('test', logger.test);","\t\trunStatus.on('error', logger.unhandledError);","","\t\trunStatus.on('stdout', logger.stdout);","\t\trunStatus.on('stderr', logger.stderr);","\t});","","\tconst files = cli.input.length ? cli.input : arrify(conf.files);","","\tif (conf.watch) {","\t\ttry {","\t\t\tconst watcher = new Watcher(logger, api, files, arrify(conf.source));","\t\t\twatcher.observeStdin(process.stdin);","\t\t} catch (err) {","\t\t\tif (err.name === 'AvaError') {","\t\t\t\t// An AvaError may be thrown if `chokidar` is not installed. Log it nicely.","\t\t\t\tconsole.error(`  ${colors.error(figures.cross)} ${err.message}`);","\t\t\t\tlogger.exit(1);","\t\t\t} else {","\t\t\t\t// Rethrow so it becomes an uncaught exception","\t\t\t\tthrow err;","\t\t\t}","\t\t}","\t} else {","\t\tapi.run(files)","\t\t\t.then(runStatus => {","\t\t\t\tlogger.finish(runStatus);","\t\t\t\tlogger.exit(runStatus.failCount > 0 || runStatus.rejectionCount > 0 || runStatus.exceptionCount > 0 ? 1 : 0);","\t\t\t})","\t\t\t.catch(err => {","\t\t\t\t// Don't swallow exceptions. Note that any expected error should already","\t\t\t\t// have been logged.","\t\t\t\tsetImmediate(() => {","\t\t\t\t\tthrow err;","\t\t\t\t});","\t\t\t});","\t}","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"21":1,"23":1,"24":1,"26":1,"27":1,"29":1,"103":1,"105":1,"106":0,"107":0,"110":1,"114":0,"117":1,"118":0,"121":1,"122":0,"126":1,"128":1,"146":1,"148":1,"149":0,"150":1,"151":1,"153":0,"156":1,"157":1,"159":1,"161":1,"162":0,"163":0,"164":0,"166":0,"167":0,"170":1,"172":1,"173":0,"174":0,"175":0,"177":0,"179":0,"180":0,"183":0,"187":1,"189":0,"190":0,"195":0,"196":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/verbose.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/verbose.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":10,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":22}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":9}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":5},"end":{"line":25,"column":23}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":21}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":7},"end":{"line":72,"column":19}}},"6":{"name":"(anonymous_6)","line":151,"loc":{"start":{"line":151,"column":8},"end":{"line":151,"column":11}}},"7":{"name":"(anonymous_7)","line":154,"loc":{"start":{"line":154,"column":6},"end":{"line":154,"column":12}}},"8":{"name":"(anonymous_8)","line":157,"loc":{"start":{"line":157,"column":7},"end":{"line":157,"column":14}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":7},"end":{"line":160,"column":14}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":67}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":44}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":37}},"13":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"14":{"start":{"line":19,"column":3},"end":{"line":19,"column":44}},"15":{"start":{"line":23,"column":2},"end":{"line":23,"column":12}},"16":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"17":{"start":{"line":27,"column":3},"end":{"line":27,"column":105}},"18":{"start":{"line":30,"column":2},"end":{"line":34,"column":3}},"19":{"start":{"line":31,"column":3},"end":{"line":31,"column":48}},"20":{"start":{"line":32,"column":9},"end":{"line":34,"column":3}},"21":{"start":{"line":33,"column":3},"end":{"line":33,"column":48}},"22":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"23":{"start":{"line":37,"column":3},"end":{"line":37,"column":77}},"24":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"25":{"start":{"line":41,"column":3},"end":{"line":41,"column":20}},"26":{"start":{"line":45,"column":2},"end":{"line":45,"column":24}},"27":{"start":{"line":46,"column":2},"end":{"line":46,"column":106}},"28":{"start":{"line":48,"column":2},"end":{"line":48,"column":72}},"29":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"30":{"start":{"line":52,"column":3},"end":{"line":52,"column":65}},"31":{"start":{"line":55,"column":2},"end":{"line":58,"column":4}},"32":{"start":{"line":60,"column":2},"end":{"line":60,"column":68}},"33":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"34":{"start":{"line":63,"column":3},"end":{"line":63,"column":51}},"35":{"start":{"line":65,"column":3},"end":{"line":65,"column":61}},"36":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"37":{"start":{"line":70,"column":2},"end":{"line":70,"column":16}},"38":{"start":{"line":73,"column":2},"end":{"line":73,"column":20}},"39":{"start":{"line":75,"column":2},"end":{"line":85,"column":20}},"40":{"start":{"line":87,"column":2},"end":{"line":90,"column":3}},"41":{"start":{"line":88,"column":3},"end":{"line":88,"column":105}},"42":{"start":{"line":89,"column":3},"end":{"line":89,"column":30}},"43":{"start":{"line":92,"column":2},"end":{"line":96,"column":3}},"44":{"start":{"line":93,"column":3},"end":{"line":95,"column":6}},"45":{"start":{"line":94,"column":4},"end":{"line":94,"column":52}},"46":{"start":{"line":98,"column":2},"end":{"line":138,"column":3}},"47":{"start":{"line":99,"column":3},"end":{"line":137,"column":6}},"48":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"49":{"start":{"line":101,"column":5},"end":{"line":101,"column":12}},"50":{"start":{"line":104,"column":4},"end":{"line":104,"column":60}},"51":{"start":{"line":105,"column":4},"end":{"line":105,"column":69}},"52":{"start":{"line":106,"column":4},"end":{"line":113,"column":5}},"53":{"start":{"line":107,"column":5},"end":{"line":107,"column":103}},"54":{"start":{"line":109,"column":5},"end":{"line":109,"column":88}},"55":{"start":{"line":110,"column":5},"end":{"line":112,"column":6}},"56":{"start":{"line":111,"column":6},"end":{"line":111,"column":55}},"57":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"58":{"start":{"line":116,"column":5},"end":{"line":116,"column":65}},"59":{"start":{"line":119,"column":4},"end":{"line":129,"column":5}},"60":{"start":{"line":120,"column":5},"end":{"line":120,"column":75}},"61":{"start":{"line":121,"column":5},"end":{"line":123,"column":6}},"62":{"start":{"line":122,"column":6},"end":{"line":122,"column":50}},"63":{"start":{"line":125,"column":5},"end":{"line":125,"column":64}},"64":{"start":{"line":126,"column":5},"end":{"line":128,"column":6}},"65":{"start":{"line":127,"column":6},"end":{"line":127,"column":55}},"66":{"start":{"line":131,"column":4},"end":{"line":136,"column":5}},"67":{"start":{"line":132,"column":5},"end":{"line":132,"column":54}},"68":{"start":{"line":133,"column":5},"end":{"line":135,"column":6}},"69":{"start":{"line":134,"column":6},"end":{"line":134,"column":69}},"70":{"start":{"line":140,"column":2},"end":{"line":143,"column":3}},"71":{"start":{"line":141,"column":3},"end":{"line":141,"column":139}},"72":{"start":{"line":142,"column":3},"end":{"line":142,"column":82}},"73":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"74":{"start":{"line":146,"column":3},"end":{"line":146,"column":216}},"75":{"start":{"line":149,"column":2},"end":{"line":149,"column":23}},"76":{"start":{"line":152,"column":2},"end":{"line":152,"column":71}},"77":{"start":{"line":155,"column":2},"end":{"line":155,"column":21}},"78":{"start":{"line":158,"column":2},"end":{"line":158,"column":29}},"79":{"start":{"line":161,"column":2},"end":{"line":161,"column":29}},"80":{"start":{"line":165,"column":0},"end":{"line":165,"column":33}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":9},"end":{"line":32,"column":9}},{"start":{"line":32,"column":9},"end":{"line":32,"column":9}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"5":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"6":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":31}},{"start":{"line":40,"column":35},"end":{"line":40,"column":60}},{"start":{"line":40,"column":64},"end":{"line":40,"column":92}}]},"7":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":47},"end":{"line":46,"column":100}},{"start":{"line":46,"column":103},"end":{"line":46,"column":105}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"9":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":30}},{"start":{"line":51,"column":34},"end":{"line":51,"column":57}}]},"10":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"11":{"line":76,"type":"cond-expr","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":89}},{"start":{"line":78,"column":4},"end":{"line":78,"column":88}}]},"12":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":37},"end":{"line":79,"column":137}},{"start":{"line":79,"column":140},"end":{"line":79,"column":142}}]},"13":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":29},"end":{"line":80,"column":114}},{"start":{"line":80,"column":117},"end":{"line":80,"column":119}}]},"14":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":29},"end":{"line":81,"column":111}},{"start":{"line":81,"column":114},"end":{"line":81,"column":116}}]},"15":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":34},"end":{"line":82,"column":137}},{"start":{"line":82,"column":140},"end":{"line":82,"column":142}}]},"16":{"line":83,"type":"cond-expr","locations":[{"start":{"line":83,"column":34},"end":{"line":83,"column":136}},{"start":{"line":83,"column":139},"end":{"line":83,"column":141}}]},"17":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":37},"end":{"line":84,"column":180}},{"start":{"line":84,"column":183},"end":{"line":84,"column":185}}]},"18":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"19":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"20":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"21":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"22":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":40},"end":{"line":104,"column":46}},{"start":{"line":104,"column":49},"end":{"line":104,"column":59}}]},"23":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"24":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":5},"end":{"line":110,"column":5}},{"start":{"line":110,"column":5},"end":{"line":110,"column":5}}]},"25":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"26":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"27":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":5},"end":{"line":121,"column":5}},{"start":{"line":121,"column":5},"end":{"line":121,"column":5}}]},"28":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":5},"end":{"line":126,"column":5}},{"start":{"line":126,"column":5},"end":{"line":126,"column":5}}]},"29":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"30":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":5},"end":{"line":133,"column":5}},{"start":{"line":133,"column":5},"end":{"line":133,"column":5}}]},"31":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"32":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":40}},{"start":{"line":140,"column":44},"end":{"line":140,"column":72}},{"start":{"line":140,"column":76},"end":{"line":140,"column":99}}]},"33":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"34":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":37}},{"start":{"line":145,"column":41},"end":{"line":145,"column":69}}]},"35":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":40},"end":{"line":152,"column":62}},{"start":{"line":152,"column":66},"end":{"line":152,"column":68}}]}},"code":["'use strict';","const indentString = require('indent-string');","const prettyMs = require('pretty-ms');","const figures = require('figures');","const chalk = require('chalk');","const plur = require('plur');","const formatAssertError = require('../format-assert-error');","const extractStack = require('../extract-stack');","const codeExcerpt = require('../code-excerpt');","const colors = require('../colors');","const improperUsageMessages = require('./improper-usage-messages');","","class VerboseReporter {","\tconstructor(options) {","\t\tthis.options = Object.assign({}, options);","","\t\tchalk.enabled = this.options.color;","\t\tfor (const key of Object.keys(colors)) {","\t\t\tcolors[key].enabled = this.options.color;","\t\t}","\t}","\tstart() {","\t\treturn '';","\t}","\ttest(test, runStatus) {","\t\tif (test.error) {","\t\t\treturn '  ' + colors.error(figures.cross) + ' ' + test.title + ' ' + colors.error(test.error.message);","\t\t}","","\t\tif (test.todo) {","\t\t\treturn '  ' + colors.todo('- ' + test.title);","\t\t} else if (test.skip) {","\t\t\treturn '  ' + colors.skip('- ' + test.title);","\t\t}","","\t\tif (test.failing) {","\t\t\treturn '  ' + colors.error(figures.tick) + ' ' + colors.error(test.title);","\t\t}","","\t\tif (runStatus.fileCount === 1 && runStatus.testCount === 1 && test.title === '[anonymous]') {","\t\t\treturn undefined;","\t\t}","","\t\t// Display duration only over a threshold","\t\tconst threshold = 100;","\t\tconst duration = test.duration > threshold ? colors.duration(' (' + prettyMs(test.duration) + ')') : '';","","\t\treturn '  ' + colors.pass(figures.tick) + ' ' + test.title + duration;","\t}","\tunhandledError(err) {","\t\tif (err.type === 'exception' && err.name === 'AvaError') {","\t\t\treturn colors.error('  ' + figures.cross + ' ' + err.message);","\t\t}","","\t\tconst types = {","\t\t\trejection: 'Unhandled Rejection',","\t\t\texception: 'Uncaught Exception'","\t\t};","","\t\tlet output = colors.error(types[err.type] + ':', err.file) + '\\n';","","\t\tif (err.stack) {","\t\t\toutput += '  ' + colors.stack(err.stack) + '\\n';","\t\t} else {","\t\t\toutput += '  ' + colors.stack(JSON.stringify(err)) + '\\n';","\t\t}","","\t\toutput += '\\n';","","\t\treturn output;","\t}","\tfinish(runStatus) {","\t\tlet output = '\\n';","","\t\tconst lines = [","\t\t\trunStatus.failCount > 0 ?","\t\t\t\t'  ' + colors.error(runStatus.failCount, plur('test', runStatus.failCount), 'failed') :","\t\t\t\t'  ' + colors.pass(runStatus.passCount, plur('test', runStatus.passCount), 'passed'),","\t\t\trunStatus.knownFailureCount > 0 ? '  ' + colors.error(runStatus.knownFailureCount, plur('known failure', runStatus.knownFailureCount)) : '',","\t\t\trunStatus.skipCount > 0 ? '  ' + colors.skip(runStatus.skipCount, plur('test', runStatus.skipCount), 'skipped') : '',","\t\t\trunStatus.todoCount > 0 ? '  ' + colors.todo(runStatus.todoCount, plur('test', runStatus.todoCount), 'todo') : '',","\t\t\trunStatus.rejectionCount > 0 ? '  ' + colors.error(runStatus.rejectionCount, 'unhandled', plur('rejection', runStatus.rejectionCount)) : '',","\t\t\trunStatus.exceptionCount > 0 ? '  ' + colors.error(runStatus.exceptionCount, 'uncaught', plur('exception', runStatus.exceptionCount)) : '',","\t\t\trunStatus.previousFailCount > 0 ? '  ' + colors.error(runStatus.previousFailCount, 'previous', plur('failure', runStatus.previousFailCount), 'in test files that were not rerun') : ''","\t\t].filter(Boolean);","","\t\tif (lines.length > 0) {","\t\t\tlines[0] += ' ' + chalk.gray.dim('[' + new Date().toLocaleTimeString('en-US', {hour12: false}) + ']');","\t\t\toutput += lines.join('\\n');","\t\t}","","\t\tif (runStatus.knownFailureCount > 0) {","\t\t\trunStatus.knownFailures.forEach(test => {","\t\t\t\toutput += '\\n\\n\\n  ' + colors.error(test.title);","\t\t\t});","\t\t}","","\t\tif (runStatus.failCount > 0) {","\t\t\trunStatus.tests.forEach((test, index) => {","\t\t\t\tif (!test.error) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tconst beforeSpacing = index === 0 ? '\\n\\n' : '\\n\\n\\n\\n';","\t\t\t\toutput += beforeSpacing + '  ' + colors.title(test.title) + '\\n';","\t\t\t\tif (test.error.source) {","\t\t\t\t\toutput += '  ' + colors.errorSource(test.error.source.file + ':' + test.error.source.line) + '\\n';","","\t\t\t\t\tconst excerpt = codeExcerpt(test.error.source, {maxWidth: process.stdout.columns});","\t\t\t\t\tif (excerpt) {","\t\t\t\t\t\toutput += '\\n' + indentString(excerpt, 2) + '\\n';","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (test.error.message) {","\t\t\t\t\toutput += '\\n' + indentString(test.error.message, 2) + '\\n';","\t\t\t\t}","","\t\t\t\tif (test.error.avaAssertionError) {","\t\t\t\t\tconst formatted = formatAssertError.formatSerializedError(test.error);","\t\t\t\t\tif (formatted) {","\t\t\t\t\t\toutput += '\\n' + indentString(formatted, 2);","\t\t\t\t\t}","","\t\t\t\t\tconst message = improperUsageMessages.forError(test.error);","\t\t\t\t\tif (message) {","\t\t\t\t\t\toutput += '\\n' + indentString(message, 2) + '\\n';","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (test.error.stack) {","\t\t\t\t\tconst extracted = extractStack(test.error.stack);","\t\t\t\t\tif (extracted.includes('\\n')) {","\t\t\t\t\t\toutput += '\\n' + indentString(colors.errorStack(extracted), 2);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t});","\t\t}","","\t\tif (runStatus.failFastEnabled === true && runStatus.remainingCount > 0 && runStatus.failCount > 0) {","\t\t\tconst remaining = 'At least ' + runStatus.remainingCount + ' ' + plur('test was', 'tests were', runStatus.remainingCount) + ' skipped.';","\t\t\toutput += '\\n\\n\\n  ' + colors.information('`--fail-fast` is on. ' + remaining);","\t\t}","","\t\tif (runStatus.hasExclusive === true && runStatus.remainingCount > 0) {","\t\t\toutput += '\\n\\n\\n  ' + colors.information('The .only() modifier is used in some tests.', runStatus.remainingCount, plur('test', runStatus.remainingCount), plur('was', 'were', runStatus.remainingCount), 'not run');","\t\t}","","\t\treturn output + '\\n';","\t}","\tsection() {","\t\treturn chalk.gray.dim('\\u2500'.repeat(process.stdout.columns || 80));","\t}","\twrite(str) {","\t\tconsole.error(str);","\t}","\tstdout(data) {","\t\tprocess.stderr.write(data);","\t}","\tstderr(data) {","\t\tprocess.stderr.write(data);","\t}","}","","module.exports = VerboseReporter;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"15":1,"17":1,"18":1,"19":10,"23":1,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"36":0,"37":0,"40":0,"41":0,"45":0,"46":0,"48":0,"51":0,"52":0,"55":0,"60":0,"62":0,"63":0,"65":0,"68":0,"70":0,"73":0,"75":0,"87":0,"88":0,"89":0,"92":0,"93":0,"94":0,"98":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"111":0,"115":0,"116":0,"119":0,"120":0,"121":0,"122":0,"125":0,"126":0,"127":0,"131":0,"132":0,"133":0,"134":0,"140":0,"141":0,"142":0,"145":0,"146":0,"149":0,"152":0,"155":1,"158":0,"161":0,"165":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/format-assert-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/format-assert-error.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"formatValue","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}}},"2":{"name":"formatDiff","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}}},"3":{"name":"formatWithLabel","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":39}}},"4":{"name":"formatSerializedError","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":38}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":51}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":81}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":46}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":16,"column":1}},"9":{"start":{"line":11,"column":1},"end":{"line":15,"column":14}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":34}},"11":{"start":{"line":19,"column":0},"end":{"line":37,"column":2}},"12":{"start":{"line":20,"column":1},"end":{"line":22,"column":2}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":48}},"14":{"start":{"line":24,"column":1},"end":{"line":26,"column":2}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":46}},"16":{"start":{"line":28,"column":1},"end":{"line":30,"column":2}},"17":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"18":{"start":{"line":32,"column":1},"end":{"line":34,"column":2}},"19":{"start":{"line":33,"column":2},"end":{"line":33,"column":14}},"20":{"start":{"line":36,"column":1},"end":{"line":36,"column":19}},"21":{"start":{"line":39,"column":0},"end":{"line":50,"column":2}},"22":{"start":{"line":40,"column":1},"end":{"line":40,"column":27}},"23":{"start":{"line":41,"column":1},"end":{"line":48,"column":2}},"24":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"25":{"start":{"line":43,"column":3},"end":{"line":43,"column":17}},"26":{"start":{"line":45,"column":2},"end":{"line":47,"column":3}},"27":{"start":{"line":46,"column":3},"end":{"line":46,"column":18}},"28":{"start":{"line":49,"column":1},"end":{"line":49,"column":13}},"29":{"start":{"line":52,"column":0},"end":{"line":92,"column":1}},"30":{"start":{"line":53,"column":1},"end":{"line":53,"column":36}},"31":{"start":{"line":54,"column":1},"end":{"line":54,"column":40}},"32":{"start":{"line":55,"column":1},"end":{"line":57,"column":2}},"33":{"start":{"line":56,"column":2},"end":{"line":56,"column":14}},"34":{"start":{"line":59,"column":1},"end":{"line":69,"column":2}},"35":{"start":{"line":60,"column":2},"end":{"line":66,"column":16}},"36":{"start":{"line":68,"column":2},"end":{"line":68,"column":43}},"37":{"start":{"line":71,"column":1},"end":{"line":89,"column":2}},"38":{"start":{"line":72,"column":2},"end":{"line":86,"column":16}},"39":{"start":{"line":75,"column":4},"end":{"line":77,"column":5}},"40":{"start":{"line":76,"column":5},"end":{"line":76,"column":41}},"41":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"42":{"start":{"line":80,"column":5},"end":{"line":80,"column":39}},"43":{"start":{"line":83,"column":4},"end":{"line":83,"column":30}},"44":{"start":{"line":88,"column":2},"end":{"line":88,"column":43}},"45":{"start":{"line":91,"column":1},"end":{"line":91,"column":13}},"46":{"start":{"line":93,"column":0},"end":{"line":93,"column":32}},"47":{"start":{"line":95,"column":0},"end":{"line":97,"column":1}},"48":{"start":{"line":96,"column":1},"end":{"line":96,"column":47}},"49":{"start":{"line":98,"column":0},"end":{"line":98,"column":42}},"50":{"start":{"line":100,"column":0},"end":{"line":120,"column":1}},"51":{"start":{"line":101,"column":1},"end":{"line":103,"column":2}},"52":{"start":{"line":102,"column":2},"end":{"line":102,"column":14}},"53":{"start":{"line":105,"column":1},"end":{"line":107,"column":14}},"54":{"start":{"line":106,"column":16},"end":{"line":106,"column":85}},"55":{"start":{"line":109,"column":1},"end":{"line":117,"column":2}},"56":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"57":{"start":{"line":111,"column":3},"end":{"line":111,"column":18}},"58":{"start":{"line":114,"column":2},"end":{"line":116,"column":15}},"59":{"start":{"line":115,"column":21},"end":{"line":115,"column":77}},"60":{"start":{"line":119,"column":1},"end":{"line":119,"column":15}},"61":{"start":{"line":121,"column":0},"end":{"line":121,"column":54}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},{"start":{"line":24,"column":1},"end":{"line":24,"column":1}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},{"start":{"line":41,"column":1},"end":{"line":41,"column":1}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":1},"end":{"line":55,"column":1}},{"start":{"line":55,"column":1},"end":{"line":55,"column":1}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},{"start":{"line":59,"column":1},"end":{"line":59,"column":1}}]},"10":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":5},"end":{"line":59,"column":27}},{"start":{"line":59,"column":31},"end":{"line":59,"column":54}}]},"11":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":1},"end":{"line":71,"column":1}},{"start":{"line":71,"column":1},"end":{"line":71,"column":1}}]},"12":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]},"13":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"14":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":1},"end":{"line":101,"column":1}},{"start":{"line":101,"column":1},"end":{"line":101,"column":1}}]},"15":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":5},"end":{"line":101,"column":34}},{"start":{"line":101,"column":38},"end":{"line":101,"column":63}}]},"16":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":1},"end":{"line":109,"column":1}},{"start":{"line":109,"column":1},"end":{"line":109,"column":1}}]},"17":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]}},"code":["'use strict';","const prettyFormat = require('@ava/pretty-format');","const reactTestPlugin = require('@ava/pretty-format/plugins/ReactTestComponent');","const chalk = require('chalk');","const diff = require('diff');","const DiffMatchPatch = require('diff-match-patch');","const indentString = require('indent-string');","const globals = require('./globals');","","function formatValue(value, options) {","\treturn prettyFormat(value, Object.assign({","\t\tcallToJSON: false,","\t\tplugins: [reactTestPlugin],","\t\thighlight: globals.options.color !== false","\t}, options));","}","exports.formatValue = formatValue;","","const cleanUp = line => {","\tif (line[0] === '+') {","\t\treturn `${chalk.green('+')} ${line.slice(1)}`;","\t}","","\tif (line[0] === '-') {","\t\treturn `${chalk.red('-')} ${line.slice(1)}`;","\t}","","\tif (line.match(/@@/)) {","\t\treturn null;","\t}","","\tif (line.match(/\\\\ No newline/)) {","\t\treturn null;","\t}","","\treturn ` ${line}`;","};","","const getType = value => {","\tconst type = typeof value;","\tif (type === 'object') {","\t\tif (type === null) {","\t\t\treturn 'null';","\t\t}","\t\tif (Array.isArray(value)) {","\t\t\treturn 'array';","\t\t}","\t}","\treturn type;","};","","function formatDiff(actual, expected) {","\tconst actualType = getType(actual);","\tconst expectedType = getType(expected);","\tif (actualType !== expectedType) {","\t\treturn null;","\t}","","\tif (actualType === 'array' || actualType === 'object') {","\t\tconst formatted = diff.createPatch('string', formatValue(actual), formatValue(expected))","\t\t\t.split('\\n')","\t\t\t.slice(4)","\t\t\t.map(cleanUp)","\t\t\t.filter(Boolean)","\t\t\t.join('\\n')","\t\t\t.trimRight();","","\t\treturn {label: 'Difference:', formatted};","\t}","","\tif (actualType === 'string') {","\t\tconst formatted = new DiffMatchPatch()","\t\t\t.diff_main(formatValue(actual, {highlight: false}), formatValue(expected, {highlight: false}))","\t\t\t.map(part => {","\t\t\t\tif (part[0] === 1) {","\t\t\t\t\treturn chalk.bgGreen.black(part[1]);","\t\t\t\t}","","\t\t\t\tif (part[0] === -1) {","\t\t\t\t\treturn chalk.bgRed.black(part[1]);","\t\t\t\t}","","\t\t\t\treturn chalk.red(part[1]);","\t\t\t})","\t\t\t.join('')","\t\t\t.trimRight();","","\t\treturn {label: 'Difference:', formatted};","\t}","","\treturn null;","}","exports.formatDiff = formatDiff;","","function formatWithLabel(label, value) {","\treturn {label, formatted: formatValue(value)};","}","exports.formatWithLabel = formatWithLabel;","","function formatSerializedError(error) {","\tif (error.statements.length === 0 && error.values.length === 0) {","\t\treturn null;","\t}","","\tlet result = error.values","\t\t.map(value => `${value.label}\\n\\n${indentString(value.formatted, 2).trimRight()}\\n`)","\t\t.join('\\n');","","\tif (error.statements.length > 0) {","\t\tif (error.values.length > 0) {","\t\t\tresult += '\\n';","\t\t}","","\t\tresult += error.statements","\t\t\t.map(statement => `${statement[0]}\\n${chalk.grey('=>')} ${statement[1]}\\n`)","\t\t\t.join('\\n');","\t}","","\treturn result;","}","exports.formatSerializedError = formatSerializedError;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":0,"17":1,"19":1,"20":0,"21":0,"24":0,"25":0,"28":0,"29":0,"32":0,"33":0,"36":0,"39":1,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"49":0,"52":1,"53":0,"54":0,"55":0,"56":0,"59":0,"60":0,"68":0,"71":0,"72":0,"75":0,"76":0,"79":0,"80":0,"83":0,"88":0,"91":0,"93":1,"95":1,"96":0,"98":1,"100":1,"101":0,"102":0,"105":0,"106":0,"109":0,"110":0,"111":0,"114":0,"115":0,"119":0,"121":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/globals.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/globals.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":17}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":15}}},"branchMap":{},"code":["'use strict';","","// Global objects / functions to be bound before requiring test file, so tests do not interfere","","const x = module.exports;","x.now = Date.now;","x.setTimeout = setTimeout;","x.clearTimeout = clearTimeout;","x.setImmediate = setImmediate;","x.options = {};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/extract-stack.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/extract-stack.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":51}},"2":{"start":{"line":4,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":5,"column":1},"end":{"line":9,"column":14}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":26}}},"branchMap":{},"code":["'use strict';","const stackLineRegex = /^.+ \\(.+:[0-9]+:[0-9]+\\)$/;","","module.exports = stack => {","\treturn stack","\t\t.split('\\n')","\t\t.filter(line => stackLineRegex.test(line))","\t\t.map(line => line.trim())","\t\t.join('\\n');","};",""],"l":{"2":1,"4":1,"5":0,"7":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/code-excerpt.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/code-excerpt.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"6":{"start":{"line":8,"column":0},"end":{"line":9,"column":96}},"7":{"start":{"line":9,"column":1},"end":{"line":9,"column":95}},"8":{"start":{"line":11,"column":0},"end":{"line":57,"column":2}},"9":{"start":{"line":12,"column":1},"end":{"line":14,"column":2}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":14}},"11":{"start":{"line":16,"column":1},"end":{"line":16,"column":26}},"12":{"start":{"line":17,"column":1},"end":{"line":17,"column":26}},"13":{"start":{"line":19,"column":1},"end":{"line":19,"column":25}},"14":{"start":{"line":20,"column":1},"end":{"line":20,"column":41}},"15":{"start":{"line":22,"column":1},"end":{"line":22,"column":14}},"16":{"start":{"line":23,"column":1},"end":{"line":27,"column":2}},"17":{"start":{"line":24,"column":2},"end":{"line":24,"column":43}},"18":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"19":{"start":{"line":29,"column":1},"end":{"line":29,"column":58}},"20":{"start":{"line":30,"column":1},"end":{"line":32,"column":2}},"21":{"start":{"line":31,"column":2},"end":{"line":31,"column":14}},"22":{"start":{"line":34,"column":1},"end":{"line":37,"column":5}},"23":{"start":{"line":34,"column":36},"end":{"line":37,"column":2}},"24":{"start":{"line":39,"column":1},"end":{"line":39,"column":62}},"25":{"start":{"line":39,"column":39},"end":{"line":39,"column":49}},"26":{"start":{"line":40,"column":1},"end":{"line":40,"column":60}},"27":{"start":{"line":42,"column":1},"end":{"line":56,"column":14}},"28":{"start":{"line":43,"column":25},"end":{"line":46,"column":3}},"29":{"start":{"line":48,"column":3},"end":{"line":48,"column":44}},"30":{"start":{"line":50,"column":3},"end":{"line":50,"column":62}},"31":{"start":{"line":51,"column":3},"end":{"line":51,"column":81}},"32":{"start":{"line":52,"column":3},"end":{"line":52,"column":56}},"33":{"start":{"line":54,"column":3},"end":{"line":54,"column":55}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":5},"end":{"line":12,"column":28}},{"start":{"line":12,"column":32},"end":{"line":12,"column":51}}]},"3":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":18}},{"start":{"line":19,"column":22},"end":{"line":19,"column":24}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":34}},{"start":{"line":20,"column":38},"end":{"line":20,"column":40}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},{"start":{"line":30,"column":1},"end":{"line":30,"column":1}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":45},"end":{"line":51,"column":55}},{"start":{"line":51,"column":58},"end":{"line":51,"column":80}}]},"7":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":26},"end":{"line":54,"column":45}},{"start":{"line":54,"column":48},"end":{"line":54,"column":54}}]}},"code":["'use strict';","const fs = require('fs');","const equalLength = require('equal-length');","const codeExcerpt = require('code-excerpt');","const truncate = require('cli-truncate');","const chalk = require('chalk');","","const formatLineNumber = (lineNumber, maxLineNumber) =>","\t' '.repeat(Math.max(0, String(maxLineNumber).length - String(lineNumber).length)) + lineNumber;","","module.exports = (source, options) => {","\tif (!source.isWithinProject || source.isDependency) {","\t\treturn null;","\t}","","\tconst file = source.file;","\tconst line = source.line;","","\toptions = options || {};","\tconst maxWidth = options.maxWidth || 80;","","\tlet contents;","\ttry {","\t\tcontents = fs.readFileSync(file, 'utf8');","\t} catch (err) {","\t\treturn null;","\t}","","\tconst excerpt = codeExcerpt(contents, line, {around: 1});","\tif (!excerpt) {","\t\treturn null;","\t}","","\tconst lines = excerpt.map(item => ({","\t\tline: item.line,","\t\tvalue: truncate(item.value, maxWidth - String(line).length - 5)","\t}));","","\tconst joinedLines = lines.map(line => line.value).join('\\n');","\tconst extendedLines = equalLength(joinedLines).split('\\n');","","\treturn lines","\t\t.map((item, index) => ({","\t\t\tline: item.line,","\t\t\tvalue: extendedLines[index]","\t\t}))","\t\t.map(item => {","\t\t\tconst isErrorSource = item.line === line;","","\t\t\tconst lineNumber = formatLineNumber(item.line, line) + ':';","\t\t\tconst coloredLineNumber = isErrorSource ? lineNumber : chalk.grey(lineNumber);","\t\t\tconst result = ` ${coloredLineNumber} ${item.value}`;","","\t\t\treturn isErrorSource ? chalk.bgRed(result) : result;","\t\t})","\t\t.join('\\n');","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"11":1,"12":0,"13":0,"16":0,"17":0,"19":0,"20":0,"22":0,"23":0,"24":0,"26":0,"29":0,"30":0,"31":0,"34":0,"39":0,"40":0,"42":0,"43":0,"48":0,"50":0,"51":0,"52":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/improper-usage-messages.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/improper-usage-messages.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":5,"column":1},"end":{"line":7,"column":2}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":14}},"5":{"start":{"line":9,"column":1},"end":{"line":9,"column":35}},"6":{"start":{"line":10,"column":1},"end":{"line":12,"column":2}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":14}},"8":{"start":{"line":14,"column":1},"end":{"line":20,"column":95}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},{"start":{"line":5,"column":1},"end":{"line":5,"column":1}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"3":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":5},"end":{"line":10,"column":27}},{"start":{"line":10,"column":31},"end":{"line":10,"column":57}}]}},"code":["'use strict';","const chalk = require('chalk');","","exports.forError = error => {","\tif (!error.improperUsage) {","\t\treturn null;","\t}","","\tconst assertion = error.assertion;","\tif (assertion !== 'throws' || !assertion === 'notThrows') {","\t\treturn null;","\t}","","\treturn `Try wrapping the first argument to \\`t.${assertion}()\\` in a function:","","  ${chalk.cyan(`t.${assertion}(() => { `)}${chalk.grey('/* your code here */')}${chalk.cyan(' })')}","","Visit the following URL for more details:","","  ${chalk.blue.underline('https://github.com/avajs/ava#throwsfunctionpromise-error-message')}`;","};",""],"l":{"2":1,"4":1,"5":0,"6":0,"9":0,"10":0,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/mini.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/mini.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"eraseLines","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":12},"end":{"line":39,"column":22}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":6},"end":{"line":55,"column":9}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":6},"end":{"line":63,"column":9}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":12},"end":{"line":78,"column":15}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":14},"end":{"line":81,"column":17}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":5},"end":{"line":85,"column":12}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":13}}},"9":{"name":"(anonymous_9)","line":113,"loc":{"start":{"line":113,"column":6},"end":{"line":113,"column":13}}},"10":{"name":"(anonymous_10)","line":124,"loc":{"start":{"line":124,"column":15},"end":{"line":124,"column":21}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":13},"end":{"line":131,"column":20}}},"12":{"name":"(anonymous_12)","line":146,"loc":{"start":{"line":146,"column":7},"end":{"line":146,"column":19}}},"13":{"name":"(anonymous_13)","line":254,"loc":{"start":{"line":254,"column":8},"end":{"line":254,"column":11}}},"14":{"name":"(anonymous_14)","line":257,"loc":{"start":{"line":257,"column":6},"end":{"line":257,"column":9}}},"15":{"name":"(anonymous_15)","line":260,"loc":{"start":{"line":260,"column":6},"end":{"line":260,"column":12}}},"16":{"name":"(anonymous_16)","line":266,"loc":{"start":{"line":266,"column":7},"end":{"line":266,"column":14}}},"17":{"name":"(anonymous_17)","line":269,"loc":{"start":{"line":269,"column":7},"end":{"line":269,"column":14}}},"18":{"name":"(anonymous_18)","line":272,"loc":{"start":{"line":272,"column":8},"end":{"line":272,"column":15}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"10":{"start":{"line":11,"column":0},"end":{"line":11,"column":60}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"13":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"14":{"start":{"line":15,"column":0},"end":{"line":15,"column":67}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"19":{"start":{"line":24,"column":0},"end":{"line":36,"column":1}},"20":{"start":{"line":25,"column":1},"end":{"line":25,"column":16}},"21":{"start":{"line":27,"column":1},"end":{"line":29,"column":2}},"22":{"start":{"line":28,"column":2},"end":{"line":28,"column":57}},"23":{"start":{"line":31,"column":1},"end":{"line":33,"column":2}},"24":{"start":{"line":32,"column":2},"end":{"line":32,"column":30}},"25":{"start":{"line":35,"column":1},"end":{"line":35,"column":14}},"26":{"start":{"line":40,"column":2},"end":{"line":40,"column":44}},"27":{"start":{"line":42,"column":2},"end":{"line":42,"column":37}},"28":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"29":{"start":{"line":44,"column":3},"end":{"line":44,"column":44}},"30":{"start":{"line":47,"column":2},"end":{"line":47,"column":78}},"31":{"start":{"line":48,"column":2},"end":{"line":48,"column":69}},"32":{"start":{"line":48,"column":50},"end":{"line":48,"column":67}},"33":{"start":{"line":49,"column":2},"end":{"line":49,"column":45}},"34":{"start":{"line":51,"column":2},"end":{"line":51,"column":15}},"35":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"36":{"start":{"line":53,"column":2},"end":{"line":53,"column":43}},"37":{"start":{"line":56,"column":2},"end":{"line":59,"column":27}},"38":{"start":{"line":57,"column":3},"end":{"line":57,"column":75}},"39":{"start":{"line":58,"column":3},"end":{"line":58,"column":29}},"40":{"start":{"line":61,"column":2},"end":{"line":61,"column":25}},"41":{"start":{"line":64,"column":2},"end":{"line":64,"column":23}},"42":{"start":{"line":65,"column":2},"end":{"line":65,"column":21}},"43":{"start":{"line":66,"column":2},"end":{"line":66,"column":29}},"44":{"start":{"line":67,"column":2},"end":{"line":67,"column":21}},"45":{"start":{"line":68,"column":2},"end":{"line":68,"column":21}},"46":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"47":{"start":{"line":70,"column":2},"end":{"line":70,"column":26}},"48":{"start":{"line":71,"column":2},"end":{"line":71,"column":26}},"49":{"start":{"line":72,"column":2},"end":{"line":72,"column":26}},"50":{"start":{"line":73,"column":2},"end":{"line":73,"column":24}},"51":{"start":{"line":74,"column":2},"end":{"line":74,"column":27}},"52":{"start":{"line":75,"column":2},"end":{"line":75,"column":24}},"53":{"start":{"line":76,"column":2},"end":{"line":76,"column":43}},"54":{"start":{"line":79,"column":2},"end":{"line":79,"column":47}},"55":{"start":{"line":82,"column":2},"end":{"line":82,"column":31}},"56":{"start":{"line":83,"column":2},"end":{"line":83,"column":23}},"57":{"start":{"line":86,"column":2},"end":{"line":97,"column":3}},"58":{"start":{"line":87,"column":3},"end":{"line":87,"column":20}},"59":{"start":{"line":88,"column":9},"end":{"line":97,"column":3}},"60":{"start":{"line":89,"column":3},"end":{"line":89,"column":20}},"61":{"start":{"line":90,"column":9},"end":{"line":97,"column":3}},"62":{"start":{"line":91,"column":3},"end":{"line":91,"column":20}},"63":{"start":{"line":93,"column":3},"end":{"line":93,"column":20}},"64":{"start":{"line":94,"column":3},"end":{"line":96,"column":4}},"65":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"66":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"67":{"start":{"line":100,"column":3},"end":{"line":100,"column":10}},"68":{"start":{"line":103,"column":2},"end":{"line":103,"column":39}},"69":{"start":{"line":106,"column":2},"end":{"line":106,"column":32}},"70":{"start":{"line":107,"column":2},"end":{"line":107,"column":25}},"71":{"start":{"line":111,"column":2},"end":{"line":111,"column":44}},"72":{"start":{"line":114,"column":2},"end":{"line":114,"column":26}},"73":{"start":{"line":115,"column":2},"end":{"line":115,"column":20}},"74":{"start":{"line":116,"column":2},"end":{"line":116,"column":88}},"75":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"76":{"start":{"line":119,"column":3},"end":{"line":119,"column":36}},"77":{"start":{"line":122,"column":2},"end":{"line":122,"column":44}},"78":{"start":{"line":125,"column":2},"end":{"line":129,"column":3}},"79":{"start":{"line":126,"column":3},"end":{"line":126,"column":25}},"80":{"start":{"line":128,"column":3},"end":{"line":128,"column":25}},"81":{"start":{"line":132,"column":2},"end":{"line":138,"column":20}},"82":{"start":{"line":140,"column":2},"end":{"line":142,"column":3}},"83":{"start":{"line":141,"column":3},"end":{"line":141,"column":26}},"84":{"start":{"line":144,"column":2},"end":{"line":144,"column":24}},"85":{"start":{"line":147,"column":2},"end":{"line":147,"column":23}},"86":{"start":{"line":148,"column":2},"end":{"line":148,"column":11}},"87":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"88":{"start":{"line":151,"column":3},"end":{"line":151,"column":94}},"89":{"start":{"line":154,"column":2},"end":{"line":154,"column":39}},"90":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"91":{"start":{"line":157,"column":3},"end":{"line":157,"column":96}},"92":{"start":{"line":160,"column":2},"end":{"line":162,"column":3}},"93":{"start":{"line":161,"column":3},"end":{"line":161,"column":96}},"94":{"start":{"line":164,"column":2},"end":{"line":166,"column":3}},"95":{"start":{"line":165,"column":3},"end":{"line":165,"column":159}},"96":{"start":{"line":168,"column":2},"end":{"line":175,"column":3}},"97":{"start":{"line":169,"column":3},"end":{"line":174,"column":4}},"98":{"start":{"line":170,"column":4},"end":{"line":170,"column":29}},"99":{"start":{"line":171,"column":4},"end":{"line":171,"column":46}},"100":{"start":{"line":177,"column":2},"end":{"line":218,"column":3}},"101":{"start":{"line":178,"column":3},"end":{"line":217,"column":6}},"102":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"103":{"start":{"line":180,"column":5},"end":{"line":180,"column":12}},"104":{"start":{"line":183,"column":4},"end":{"line":183,"column":60}},"105":{"start":{"line":185,"column":4},"end":{"line":185,"column":69}},"106":{"start":{"line":186,"column":4},"end":{"line":193,"column":5}},"107":{"start":{"line":187,"column":5},"end":{"line":187,"column":103}},"108":{"start":{"line":189,"column":5},"end":{"line":189,"column":88}},"109":{"start":{"line":190,"column":5},"end":{"line":192,"column":6}},"110":{"start":{"line":191,"column":6},"end":{"line":191,"column":55}},"111":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"112":{"start":{"line":196,"column":5},"end":{"line":196,"column":65}},"113":{"start":{"line":199,"column":4},"end":{"line":209,"column":5}},"114":{"start":{"line":200,"column":5},"end":{"line":200,"column":75}},"115":{"start":{"line":201,"column":5},"end":{"line":203,"column":6}},"116":{"start":{"line":202,"column":6},"end":{"line":202,"column":50}},"117":{"start":{"line":205,"column":5},"end":{"line":205,"column":64}},"118":{"start":{"line":206,"column":5},"end":{"line":208,"column":6}},"119":{"start":{"line":207,"column":6},"end":{"line":207,"column":55}},"120":{"start":{"line":211,"column":4},"end":{"line":216,"column":5}},"121":{"start":{"line":212,"column":5},"end":{"line":212,"column":54}},"122":{"start":{"line":213,"column":5},"end":{"line":215,"column":6}},"123":{"start":{"line":214,"column":6},"end":{"line":214,"column":69}},"124":{"start":{"line":220,"column":2},"end":{"line":241,"column":3}},"125":{"start":{"line":222,"column":3},"end":{"line":240,"column":6}},"126":{"start":{"line":223,"column":4},"end":{"line":225,"column":5}},"127":{"start":{"line":224,"column":5},"end":{"line":224,"column":12}},"128":{"start":{"line":227,"column":4},"end":{"line":239,"column":5}},"129":{"start":{"line":228,"column":5},"end":{"line":228,"column":66}},"130":{"start":{"line":230,"column":5},"end":{"line":230,"column":91}},"131":{"start":{"line":231,"column":5},"end":{"line":231,"column":79}},"132":{"start":{"line":232,"column":5},"end":{"line":232,"column":43}},"133":{"start":{"line":233,"column":5},"end":{"line":233,"column":89}},"134":{"start":{"line":234,"column":5},"end":{"line":234,"column":56}},"135":{"start":{"line":236,"column":5},"end":{"line":236,"column":53}},"136":{"start":{"line":237,"column":5},"end":{"line":237,"column":54}},"137":{"start":{"line":238,"column":5},"end":{"line":238,"column":45}},"138":{"start":{"line":243,"column":2},"end":{"line":246,"column":3}},"139":{"start":{"line":244,"column":3},"end":{"line":244,"column":139}},"140":{"start":{"line":245,"column":3},"end":{"line":245,"column":80}},"141":{"start":{"line":248,"column":2},"end":{"line":250,"column":3}},"142":{"start":{"line":249,"column":3},"end":{"line":249,"column":214}},"143":{"start":{"line":252,"column":2},"end":{"line":252,"column":25}},"144":{"start":{"line":255,"column":2},"end":{"line":255,"column":78}},"145":{"start":{"line":258,"column":2},"end":{"line":258,"column":12}},"146":{"start":{"line":261,"column":2},"end":{"line":261,"column":19}},"147":{"start":{"line":262,"column":2},"end":{"line":262,"column":27}},"148":{"start":{"line":263,"column":2},"end":{"line":263,"column":17}},"149":{"start":{"line":264,"column":2},"end":{"line":264,"column":63}},"150":{"start":{"line":267,"column":2},"end":{"line":267,"column":21}},"151":{"start":{"line":270,"column":2},"end":{"line":270,"column":21}},"152":{"start":{"line":273,"column":2},"end":{"line":273,"column":15}},"153":{"start":{"line":274,"column":2},"end":{"line":274,"column":32}},"154":{"start":{"line":275,"column":2},"end":{"line":275,"column":41}},"155":{"start":{"line":276,"column":2},"end":{"line":276,"column":49}},"156":{"start":{"line":279,"column":2},"end":{"line":279,"column":79}},"157":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"158":{"start":{"line":283,"column":3},"end":{"line":283,"column":8}},"159":{"start":{"line":287,"column":2},"end":{"line":287,"column":24}},"160":{"start":{"line":290,"column":2},"end":{"line":290,"column":18}},"161":{"start":{"line":292,"column":2},"end":{"line":294,"column":3}},"162":{"start":{"line":293,"column":3},"end":{"line":293,"column":26}},"163":{"start":{"line":296,"column":2},"end":{"line":300,"column":3}},"164":{"start":{"line":298,"column":3},"end":{"line":298,"column":63}},"165":{"start":{"line":299,"column":3},"end":{"line":299,"column":27}},"166":{"start":{"line":302,"column":2},"end":{"line":302,"column":41}},"167":{"start":{"line":304,"column":2},"end":{"line":314,"column":3}},"168":{"start":{"line":305,"column":3},"end":{"line":305,"column":46}},"169":{"start":{"line":309,"column":3},"end":{"line":311,"column":4}},"170":{"start":{"line":310,"column":4},"end":{"line":310,"column":41}},"171":{"start":{"line":313,"column":3},"end":{"line":313,"column":36}},"172":{"start":{"line":318,"column":0},"end":{"line":318,"column":30}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":41},"end":{"line":28,"column":50}},{"start":{"line":28,"column":53},"end":{"line":28,"column":55}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},{"start":{"line":31,"column":1},"end":{"line":31,"column":1}}]},"3":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":61},"end":{"line":47,"column":67}},{"start":{"line":47,"column":70},"end":{"line":47,"column":76}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":9},"end":{"line":88,"column":9}},{"start":{"line":88,"column":9},"end":{"line":88,"column":9}}]},"6":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":9},"end":{"line":90,"column":9}},{"start":{"line":90,"column":9},"end":{"line":90,"column":9}}]},"7":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":3},"end":{"line":94,"column":3}},{"start":{"line":94,"column":3},"end":{"line":94,"column":3}}]},"8":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"9":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":15}},{"start":{"line":99,"column":19},"end":{"line":99,"column":28}}]},"10":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":11}},{"start":{"line":106,"column":15},"end":{"line":106,"column":31}}]},"11":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"12":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":6},"end":{"line":118,"column":16}},{"start":{"line":118,"column":20},"end":{"line":118,"column":32}}]},"13":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"14":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":24},"end":{"line":133,"column":70}},{"start":{"line":133,"column":73},"end":{"line":133,"column":75}}]},"15":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":32},"end":{"line":134,"column":124}},{"start":{"line":134,"column":127},"end":{"line":134,"column":129}}]},"16":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":24},"end":{"line":135,"column":71}},{"start":{"line":135,"column":74},"end":{"line":135,"column":76}}]},"17":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":24},"end":{"line":136,"column":71}},{"start":{"line":136,"column":74},"end":{"line":136,"column":76}}]},"18":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":24},"end":{"line":137,"column":68}},{"start":{"line":137,"column":71},"end":{"line":137,"column":73}}]},"19":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"20":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":10}},{"start":{"line":140,"column":14},"end":{"line":140,"column":30}}]},"21":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"22":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"23":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"24":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"25":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"26":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"27":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"28":{"line":183,"type":"cond-expr","locations":[{"start":{"line":183,"column":40},"end":{"line":183,"column":46}},{"start":{"line":183,"column":49},"end":{"line":183,"column":59}}]},"29":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"30":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":5},"end":{"line":190,"column":5}},{"start":{"line":190,"column":5},"end":{"line":190,"column":5}}]},"31":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"32":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"33":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":5},"end":{"line":201,"column":5}},{"start":{"line":201,"column":5},"end":{"line":201,"column":5}}]},"34":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":5},"end":{"line":206,"column":5}},{"start":{"line":206,"column":5},"end":{"line":206,"column":5}}]},"35":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"36":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":5},"end":{"line":213,"column":5}},{"start":{"line":213,"column":5},"end":{"line":213,"column":5}}]},"37":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"38":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":29}},{"start":{"line":220,"column":33},"end":{"line":220,"column":56}}]},"39":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"40":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"41":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":8},"end":{"line":227,"column":32}},{"start":{"line":227,"column":36},"end":{"line":227,"column":59}}]},"42":{"line":230,"type":"cond-expr","locations":[{"start":{"line":230,"column":46},"end":{"line":230,"column":67}},{"start":{"line":230,"column":70},"end":{"line":230,"column":90}}]},"43":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":35},"end":{"line":231,"column":56}},{"start":{"line":231,"column":59},"end":{"line":231,"column":78}}]},"44":{"line":233,"type":"cond-expr","locations":[{"start":{"line":233,"column":35},"end":{"line":233,"column":49}},{"start":{"line":233,"column":52},"end":{"line":233,"column":88}}]},"45":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"46":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":40}},{"start":{"line":243,"column":44},"end":{"line":243,"column":72}},{"start":{"line":243,"column":76},"end":{"line":243,"column":99}}]},"47":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"48":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":6},"end":{"line":248,"column":37}},{"start":{"line":248,"column":41},"end":{"line":248,"column":69}}]},"49":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":47},"end":{"line":255,"column":69}},{"start":{"line":255,"column":73},"end":{"line":255,"column":75}}]},"50":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"51":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"52":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"53":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":2},"end":{"line":304,"column":2}},{"start":{"line":304,"column":2},"end":{"line":304,"column":2}}]},"54":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":3},"end":{"line":309,"column":3}},{"start":{"line":309,"column":3},"end":{"line":309,"column":3}}]}},"code":["'use strict';","const StringDecoder = require('string_decoder').StringDecoder;","const cliCursor = require('cli-cursor');","const lastLineTracker = require('last-line-stream/tracker');","const plur = require('plur');","const spinners = require('cli-spinners');","const chalk = require('chalk');","const cliTruncate = require('cli-truncate');","const cross = require('figures').cross;","const indentString = require('indent-string');","const formatAssertError = require('../format-assert-error');","const extractStack = require('../extract-stack');","const codeExcerpt = require('../code-excerpt');","const colors = require('../colors');","const improperUsageMessages = require('./improper-usage-messages');","","// TODO(@jamestalamge): This should be fixed in log-update and ansi-escapes once we are confident it's a good solution.","const CSI = '\\u001B[';","const ERASE_LINE = CSI + '2K';","const CURSOR_TO_COLUMN_0 = CSI + '0G';","const CURSOR_UP = CSI + '1A';","","// Returns a string that will erase `count` lines from the end of the terminal.","function eraseLines(count) {","\tlet clear = '';","","\tfor (let i = 0; i < count; i++) {","\t\tclear += ERASE_LINE + (i < count - 1 ? CURSOR_UP : '');","\t}","","\tif (count) {","\t\tclear += CURSOR_TO_COLUMN_0;","\t}","","\treturn clear;","}","","class MiniReporter {","\tconstructor(options) {","\t\tthis.options = Object.assign({}, options);","","\t\tchalk.enabled = this.options.color;","\t\tfor (const key of Object.keys(colors)) {","\t\t\tcolors[key].enabled = this.options.color;","\t\t}","","\t\tconst spinnerDef = spinners[process.platform === 'win32' ? 'line' : 'dots'];","\t\tthis.spinnerFrames = spinnerDef.frames.map(c => chalk.gray.dim(c));","\t\tthis.spinnerInterval = spinnerDef.interval;","","\t\tthis.reset();","\t\tthis.stream = process.stderr;","\t\tthis.stringDecoder = new StringDecoder();","\t}","\tstart() {","\t\tthis.interval = setInterval(() => {","\t\t\tthis.spinnerIndex = (this.spinnerIndex + 1) % this.spinnerFrames.length;","\t\t\tthis.write(this.prefix());","\t\t}, this.spinnerInterval);","","\t\treturn this.prefix('');","\t}","\treset() {","\t\tthis.clearInterval();","\t\tthis.passCount = 0;","\t\tthis.knownFailureCount = 0;","\t\tthis.failCount = 0;","\t\tthis.skipCount = 0;","\t\tthis.todoCount = 0;","\t\tthis.rejectionCount = 0;","\t\tthis.exceptionCount = 0;","\t\tthis.currentStatus = '';","\t\tthis.currentTest = '';","\t\tthis.statusLineCount = 0;","\t\tthis.spinnerIndex = 0;","\t\tthis.lastLineTracker = lastLineTracker();","\t}","\tspinnerChar() {","\t\treturn this.spinnerFrames[this.spinnerIndex];","\t}","\tclearInterval() {","\t\tclearInterval(this.interval);","\t\tthis.interval = null;","\t}","\ttest(test) {","\t\tif (test.todo) {","\t\t\tthis.todoCount++;","\t\t} else if (test.skip) {","\t\t\tthis.skipCount++;","\t\t} else if (test.error) {","\t\t\tthis.failCount++;","\t\t} else {","\t\t\tthis.passCount++;","\t\t\tif (test.failing) {","\t\t\t\tthis.knownFailureCount++;","\t\t\t}","\t\t}","","\t\tif (test.todo || test.skip) {","\t\t\treturn;","\t\t}","","\t\treturn this.prefix(this._test(test));","\t}","\tprefix(str) {","\t\tstr = str || this.currentTest;","\t\tthis.currentTest = str;","","\t\t// The space before the newline is required for proper formatting","\t\t// TODO(jamestalmage): Figure out why it's needed and document it here","\t\treturn ` \\n ${this.spinnerChar()} ${str}`;","\t}","\t_test(test) {","\t\tconst SPINNER_WIDTH = 3;","\t\tconst PADDING = 1;","\t\tlet title = cliTruncate(test.title, process.stdout.columns - SPINNER_WIDTH - PADDING);","","\t\tif (test.error || test.failing) {","\t\t\ttitle = colors.error(test.title);","\t\t}","","\t\treturn title + '\\n' + this.reportCounts();","\t}","\tunhandledError(err) {","\t\tif (err.type === 'exception') {","\t\t\tthis.exceptionCount++;","\t\t} else {","\t\t\tthis.rejectionCount++;","\t\t}","\t}","\treportCounts(time) {","\t\tconst lines = [","\t\t\tthis.passCount > 0 ? '\\n  ' + colors.pass(this.passCount, 'passed') : '',","\t\t\tthis.knownFailureCount > 0 ? '\\n  ' + colors.error(this.knownFailureCount, plur('known failure', this.knownFailureCount)) : '',","\t\t\tthis.failCount > 0 ? '\\n  ' + colors.error(this.failCount, 'failed') : '',","\t\t\tthis.skipCount > 0 ? '\\n  ' + colors.skip(this.skipCount, 'skipped') : '',","\t\t\tthis.todoCount > 0 ? '\\n  ' + colors.todo(this.todoCount, 'todo') : ''","\t\t].filter(Boolean);","","\t\tif (time && lines.length > 0) {","\t\t\tlines[0] += ' ' + time;","\t\t}","","\t\treturn lines.join('');","\t}","\tfinish(runStatus) {","\t\tthis.clearInterval();","\t\tlet time;","","\t\tif (this.options.watching) {","\t\t\ttime = chalk.gray.dim('[' + new Date().toLocaleTimeString('en-US', {hour12: false}) + ']');","\t\t}","","\t\tlet status = this.reportCounts(time);","","\t\tif (this.rejectionCount > 0) {","\t\t\tstatus += '\\n  ' + colors.error(this.rejectionCount, plur('rejection', this.rejectionCount));","\t\t}","","\t\tif (this.exceptionCount > 0) {","\t\t\tstatus += '\\n  ' + colors.error(this.exceptionCount, plur('exception', this.exceptionCount));","\t\t}","","\t\tif (runStatus.previousFailCount > 0) {","\t\t\tstatus += '\\n  ' + colors.error(runStatus.previousFailCount, 'previous', plur('failure', runStatus.previousFailCount), 'in test files that were not rerun');","\t\t}","","\t\tif (this.knownFailureCount > 0) {","\t\t\tfor (const test of runStatus.knownFailures) {","\t\t\t\tconst title = test.title;","\t\t\t\tstatus += '\\n\\n   ' + colors.title(title);","\t\t\t\t// TODO: Output description with link","\t\t\t\t// status += colors.stack(description);","\t\t\t}","\t\t}","","\t\tif (this.failCount > 0) {","\t\t\trunStatus.errors.forEach((test, index) => {","\t\t\t\tif (!test.error) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tconst beforeSpacing = index === 0 ? '\\n\\n' : '\\n\\n\\n\\n';","","\t\t\t\tstatus += beforeSpacing + '  ' + colors.title(test.title) + '\\n';","\t\t\t\tif (test.error.source) {","\t\t\t\t\tstatus += '  ' + colors.errorSource(test.error.source.file + ':' + test.error.source.line) + '\\n';","","\t\t\t\t\tconst excerpt = codeExcerpt(test.error.source, {maxWidth: process.stdout.columns});","\t\t\t\t\tif (excerpt) {","\t\t\t\t\t\tstatus += '\\n' + indentString(excerpt, 2) + '\\n';","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (test.error.message) {","\t\t\t\t\tstatus += '\\n' + indentString(test.error.message, 2) + '\\n';","\t\t\t\t}","","\t\t\t\tif (test.error.avaAssertionError) {","\t\t\t\t\tconst formatted = formatAssertError.formatSerializedError(test.error);","\t\t\t\t\tif (formatted) {","\t\t\t\t\t\tstatus += '\\n' + indentString(formatted, 2);","\t\t\t\t\t}","","\t\t\t\t\tconst message = improperUsageMessages.forError(test.error);","\t\t\t\t\tif (message) {","\t\t\t\t\t\tstatus += '\\n' + indentString(message, 2) + '\\n';","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (test.error.stack) {","\t\t\t\t\tconst extracted = extractStack(test.error.stack);","\t\t\t\t\tif (extracted.includes('\\n')) {","\t\t\t\t\t\tstatus += '\\n' + indentString(colors.errorStack(extracted), 2);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t});","\t\t}","","\t\tif (this.rejectionCount > 0 || this.exceptionCount > 0) {","\t\t\t// TODO(sindresorhus): Figure out why this causes a test failure when switched to a for-of loop","\t\t\trunStatus.errors.forEach(err => {","\t\t\t\tif (err.title) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tif (err.type === 'exception' && err.name === 'AvaError') {","\t\t\t\t\tstatus += '\\n\\n  ' + colors.error(cross + ' ' + err.message);","\t\t\t\t} else {","\t\t\t\t\tconst title = err.type === 'rejection' ? 'Unhandled Rejection' : 'Uncaught Exception';","\t\t\t\t\tlet description = err.stack ? err.stack.trimRight() : JSON.stringify(err);","\t\t\t\t\tdescription = description.split('\\n');","\t\t\t\t\tconst errorTitle = err.name ? description[0] : 'Threw non-error: ' + description[0];","\t\t\t\t\tconst errorStack = description.slice(1).join('\\n');","","\t\t\t\t\tstatus += '\\n\\n  ' + colors.title(title) + '\\n';","\t\t\t\t\tstatus += '  ' + colors.stack(errorTitle) + '\\n';","\t\t\t\t\tstatus += colors.errorStack(errorStack);","\t\t\t\t}","\t\t\t});","\t\t}","","\t\tif (runStatus.failFastEnabled === true && runStatus.remainingCount > 0 && runStatus.failCount > 0) {","\t\t\tconst remaining = 'At least ' + runStatus.remainingCount + ' ' + plur('test was', 'tests were', runStatus.remainingCount) + ' skipped.';","\t\t\tstatus += '\\n\\n  ' + colors.information('`--fail-fast` is on. ' + remaining);","\t\t}","","\t\tif (runStatus.hasExclusive === true && runStatus.remainingCount > 0) {","\t\t\tstatus += '\\n\\n  ' + colors.information('The .only() modifier is used in some tests.', runStatus.remainingCount, plur('test', runStatus.remainingCount), plur('was', 'were', runStatus.remainingCount), 'not run');","\t\t}","","\t\treturn status + '\\n\\n';","\t}","\tsection() {","\t\treturn '\\n' + chalk.gray.dim('\\u2500'.repeat(process.stdout.columns || 80));","\t}","\tclear() {","\t\treturn '';","\t}","\twrite(str) {","\t\tcliCursor.hide();","\t\tthis.currentStatus = str;","\t\tthis._update();","\t\tthis.statusLineCount = this.currentStatus.split('\\n').length;","\t}","\tstdout(data) {","\t\tthis._update(data);","\t}","\tstderr(data) {","\t\tthis._update(data);","\t}","\t_update(data) {","\t\tlet str = '';","\t\tlet ct = this.statusLineCount;","\t\tconst columns = process.stdout.columns;","\t\tlet lastLine = this.lastLineTracker.lastLine();","","\t\t// Terminals automatically wrap text. We only need the last log line as seen on the screen.","\t\tlastLine = lastLine.substring(lastLine.length - (lastLine.length % columns));","","\t\t// Don't delete the last log line if it's completely empty.","\t\tif (lastLine.length > 0) {","\t\t\tct++;","\t\t}","","\t\t// Erase the existing status message, plus the last log line.","\t\tstr += eraseLines(ct);","","\t\t// Rewrite the last log line.","\t\tstr += lastLine;","","\t\tif (str.length > 0) {","\t\t\tthis.stream.write(str);","\t\t}","","\t\tif (data) {","\t\t\t// Send new log data to the terminal, and update the last line status.","\t\t\tthis.lastLineTracker.update(this.stringDecoder.write(data));","\t\t\tthis.stream.write(data);","\t\t}","","\t\tlet currentStatus = this.currentStatus;","","\t\tif (currentStatus.length > 0) {","\t\t\tlastLine = this.lastLineTracker.lastLine();","\t\t\t// We need a newline at the end of the last log line, before the status message.","\t\t\t// However, if the last log line is the exact width of the terminal a newline is implied,","\t\t\t// and adding a second will cause problems.","\t\t\tif (lastLine.length % columns) {","\t\t\t\tcurrentStatus = '\\n' + currentStatus;","\t\t\t}","\t\t\t// Rewrite the status message.","\t\t\tthis.stream.write(currentStatus);","\t\t}","\t}","}","","module.exports = MiniReporter;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"18":1,"19":1,"20":1,"21":1,"24":1,"25":0,"27":0,"28":0,"31":0,"32":0,"35":0,"40":0,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"79":0,"82":0,"83":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"99":0,"100":0,"103":0,"106":0,"107":0,"111":0,"114":0,"115":0,"116":0,"118":0,"119":0,"122":0,"125":0,"126":0,"128":0,"132":0,"140":0,"141":0,"144":0,"147":0,"148":0,"150":0,"151":0,"154":0,"156":0,"157":0,"160":0,"161":0,"164":0,"165":0,"168":0,"169":0,"170":0,"171":0,"177":0,"178":0,"179":0,"180":0,"183":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"195":0,"196":0,"199":0,"200":0,"201":0,"202":0,"205":0,"206":0,"207":0,"211":0,"212":0,"213":0,"214":0,"220":0,"222":0,"223":0,"224":0,"227":0,"228":0,"230":0,"231":0,"232":0,"233":0,"234":0,"236":0,"237":0,"238":0,"243":0,"244":0,"245":0,"248":0,"249":0,"252":0,"255":0,"258":0,"261":0,"262":0,"263":0,"264":0,"267":0,"270":0,"273":0,"274":0,"275":0,"276":0,"279":0,"282":0,"283":0,"287":0,"290":0,"292":0,"293":0,"296":0,"298":0,"299":0,"302":0,"304":0,"305":0,"309":0,"310":0,"313":0,"318":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/tap.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/reporters/tap.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"getSourceFromStack","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}}},"2":{"name":"dumpError","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":15}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":6},"end":{"line":48,"column":9}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":12}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":80,"column":21}}},"7":{"name":"(anonymous_7)","line":92,"loc":{"start":{"line":92,"column":7},"end":{"line":92,"column":19}}},"8":{"name":"(anonymous_8)","line":108,"loc":{"start":{"line":108,"column":6},"end":{"line":108,"column":12}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":7},"end":{"line":111,"column":14}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":7},"end":{"line":114,"column":14}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"6":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"7":{"start":{"line":10,"column":1},"end":{"line":10,"column":43}},"8":{"start":{"line":13,"column":0},"end":{"line":42,"column":1}},"9":{"start":{"line":14,"column":1},"end":{"line":14,"column":45}},"10":{"start":{"line":15,"column":1},"end":{"line":17,"column":2}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":24}},"12":{"start":{"line":18,"column":1},"end":{"line":20,"column":2}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":30}},"14":{"start":{"line":22,"column":1},"end":{"line":35,"column":2}},"15":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"16":{"start":{"line":24,"column":3},"end":{"line":24,"column":35}},"17":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"18":{"start":{"line":27,"column":3},"end":{"line":27,"column":33}},"19":{"start":{"line":29,"column":2},"end":{"line":34,"column":3}},"20":{"start":{"line":30,"column":3},"end":{"line":33,"column":10}},"21":{"start":{"line":31,"column":4},"end":{"line":31,"column":50}},"22":{"start":{"line":32,"column":4},"end":{"line":32,"column":15}},"23":{"start":{"line":37,"column":1},"end":{"line":39,"column":2}},"24":{"start":{"line":38,"column":2},"end":{"line":38,"column":43}},"25":{"start":{"line":41,"column":1},"end":{"line":41,"column":70}},"26":{"start":{"line":46,"column":2},"end":{"line":46,"column":13}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"28":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}},"29":{"start":{"line":54,"column":2},"end":{"line":54,"column":21}},"30":{"start":{"line":55,"column":2},"end":{"line":55,"column":45}},"31":{"start":{"line":57,"column":2},"end":{"line":61,"column":3}},"32":{"start":{"line":58,"column":3},"end":{"line":58,"column":24}},"33":{"start":{"line":59,"column":9},"end":{"line":61,"column":3}},"34":{"start":{"line":60,"column":3},"end":{"line":60,"column":24}},"35":{"start":{"line":63,"column":2},"end":{"line":63,"column":38}},"36":{"start":{"line":65,"column":2},"end":{"line":76,"column":3}},"37":{"start":{"line":66,"column":3},"end":{"line":70,"column":5}},"38":{"start":{"line":72,"column":3},"end":{"line":75,"column":5}},"39":{"start":{"line":78,"column":2},"end":{"line":78,"column":27}},"40":{"start":{"line":81,"column":2},"end":{"line":84,"column":4}},"41":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"42":{"start":{"line":87,"column":3},"end":{"line":87,"column":38}},"43":{"start":{"line":90,"column":2},"end":{"line":90,"column":27}},"44":{"start":{"line":93,"column":2},"end":{"line":98,"column":4}},"45":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"46":{"start":{"line":101,"column":3},"end":{"line":101,"column":48}},"47":{"start":{"line":104,"column":2},"end":{"line":104,"column":107}},"48":{"start":{"line":106,"column":2},"end":{"line":106,"column":27}},"49":{"start":{"line":109,"column":2},"end":{"line":109,"column":19}},"50":{"start":{"line":112,"column":2},"end":{"line":112,"column":29}},"51":{"start":{"line":115,"column":2},"end":{"line":115,"column":20}},"52":{"start":{"line":119,"column":0},"end":{"line":119,"column":29}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":5},"end":{"line":18,"column":19}},{"start":{"line":18,"column":23},"end":{"line":18,"column":36}}]},"4":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},{"start":{"line":22,"column":1},"end":{"line":22,"column":1}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"6":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"7":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"8":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},{"start":{"line":37,"column":1},"end":{"line":37,"column":1}}]},"9":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":29},"end":{"line":55,"column":37}},{"start":{"line":55,"column":40},"end":{"line":55,"column":44}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"11":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":9},"end":{"line":59,"column":9}},{"start":{"line":59,"column":9},"end":{"line":59,"column":9}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"13":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"14":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":30}},{"start":{"line":86,"column":34},"end":{"line":86,"column":57}}]},"15":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]}},"code":["'use strict';","const format = require('util').format;","const indentString = require('indent-string');","const stripAnsi = require('strip-ansi');","const yaml = require('js-yaml');","const extractStack = require('../extract-stack');","","// Parses stack trace and extracts original function name, file name and line","function getSourceFromStack(stack) {","\treturn extractStack(stack).split('\\n')[0];","}","","function dumpError(error, includeMessage) {","\tconst obj = Object.assign({}, error.object);","\tif (error.name) {","\t\tobj.name = error.name;","\t}","\tif (includeMessage && error.message) {","\t\tobj.message = error.message;","\t}","","\tif (error.avaAssertionError) {","\t\tif (error.assertion) {","\t\t\tobj.assertion = error.assertion;","\t\t}","\t\tif (error.operator) {","\t\t\tobj.operator = error.operator;","\t\t}","\t\tif (error.values.length > 0) {","\t\t\tobj.values = error.values.reduce((acc, value) => {","\t\t\t\tacc[value.label] = stripAnsi(value.formatted);","\t\t\t\treturn acc;","\t\t\t}, {});","\t\t}","\t}","","\tif (error.stack) {","\t\tobj.at = getSourceFromStack(error.stack);","\t}","","\treturn `  ---\\n${indentString(yaml.safeDump(obj).trim(), 4)}\\n  ...`;","}","","class TapReporter {","\tconstructor() {","\t\tthis.i = 0;","\t}","\tstart() {","\t\treturn 'TAP version 13';","\t}","\ttest(test) {","\t\tlet output;","","\t\tlet directive = '';","\t\tconst passed = test.todo ? 'not ok' : 'ok';","","\t\tif (test.todo) {","\t\t\tdirective = '# TODO';","\t\t} else if (test.skip) {","\t\t\tdirective = '# SKIP';","\t\t}","","\t\tconst title = stripAnsi(test.title);","","\t\tif (test.error) {","\t\t\toutput = [","\t\t\t\t'# ' + title,","\t\t\t\tformat('not ok %d - %s', ++this.i, title),","\t\t\t\tdumpError(test.error, true)","\t\t\t];","\t\t} else {","\t\t\toutput = [","\t\t\t\t`# ${title}`,","\t\t\t\tformat('%s %d - %s %s', passed, ++this.i, title, directive).trim()","\t\t\t];","\t\t}","","\t\treturn output.join('\\n');","\t}","\tunhandledError(err) {","\t\tconst output = [","\t\t\t`# ${err.message}`,","\t\t\tformat('not ok %d - %s', ++this.i, err.message)","\t\t];","\t\t// AvaErrors don't have stack traces","\t\tif (err.type !== 'exception' || err.name !== 'AvaError') {","\t\t\toutput.push(dumpError(err, false));","\t\t}","","\t\treturn output.join('\\n');","\t}","\tfinish(runStatus) {","\t\tconst output = [","\t\t\t'',","\t\t\t'1..' + (runStatus.passCount + runStatus.failCount + runStatus.skipCount),","\t\t\t'# tests ' + (runStatus.passCount + runStatus.failCount + runStatus.skipCount),","\t\t\t'# pass ' + runStatus.passCount","\t\t];","","\t\tif (runStatus.skipCount > 0) {","\t\t\toutput.push(`# skip ${runStatus.skipCount}`);","\t\t}","","\t\toutput.push('# fail ' + (runStatus.failCount + runStatus.rejectionCount + runStatus.exceptionCount), '');","","\t\treturn output.join('\\n');","\t}","\twrite(str) {","\t\tconsole.log(str);","\t}","\tstdout(data) {","\t\tprocess.stderr.write(data);","\t}","\tstderr(data) {","\t\tthis.stdout(data);","\t}","}","","module.exports = TapReporter;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"9":1,"10":0,"13":1,"14":0,"15":0,"16":0,"18":0,"19":0,"22":0,"23":0,"24":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"37":0,"38":0,"41":0,"46":0,"49":0,"52":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"63":0,"65":0,"66":0,"72":0,"78":0,"81":0,"86":0,"87":0,"90":0,"93":0,"100":0,"101":0,"104":0,"106":0,"109":0,"112":0,"115":0,"119":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/logger.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/logger.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,1],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":12},"end":{"line":5,"column":23}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":6},"end":{"line":9,"column":18}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":6},"end":{"line":16,"column":18}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":23}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":32}}},"6":{"name":"(anonymous_6)","line":33,"loc":{"start":{"line":33,"column":7},"end":{"line":33,"column":19}}},"7":{"name":"(anonymous_7)","line":40,"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":11}}},"8":{"name":"(anonymous_8)","line":47,"loc":{"start":{"line":47,"column":6},"end":{"line":47,"column":9}}},"9":{"name":"(anonymous_9)","line":55,"loc":{"start":{"line":55,"column":6},"end":{"line":55,"column":23}}},"10":{"name":"(anonymous_10)","line":62,"loc":{"start":{"line":62,"column":7},"end":{"line":62,"column":25}}},"11":{"name":"(anonymous_11)","line":69,"loc":{"start":{"line":69,"column":7},"end":{"line":69,"column":25}}},"12":{"name":"(anonymous_12)","line":76,"loc":{"start":{"line":76,"column":5},"end":{"line":76,"column":12}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":38}},"2":{"start":{"line":6,"column":2},"end":{"line":6,"column":27}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":17}},"4":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"5":{"start":{"line":11,"column":3},"end":{"line":11,"column":10}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":56}},"7":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"8":{"start":{"line":18,"column":3},"end":{"line":18,"column":10}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":56}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":61}},"11":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"12":{"start":{"line":28,"column":3},"end":{"line":28,"column":10}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":70}},"14":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"15":{"start":{"line":35,"column":3},"end":{"line":35,"column":10}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":57}},"17":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"18":{"start":{"line":42,"column":3},"end":{"line":42,"column":10}},"19":{"start":{"line":45,"column":2},"end":{"line":45,"column":38}},"20":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"21":{"start":{"line":49,"column":3},"end":{"line":49,"column":16}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":36}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":14}},"24":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"25":{"start":{"line":57,"column":3},"end":{"line":57,"column":10}},"26":{"start":{"line":60,"column":2},"end":{"line":60,"column":38}},"27":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"28":{"start":{"line":64,"column":3},"end":{"line":64,"column":10}},"29":{"start":{"line":67,"column":2},"end":{"line":67,"column":40}},"30":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"31":{"start":{"line":71,"column":3},"end":{"line":71,"column":10}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":40}},"33":{"start":{"line":77,"column":2},"end":{"line":77,"column":21}},"34":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"4":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"7":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"8":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"9":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]}},"code":["'use strict';","const autoBind = require('auto-bind');","","class Logger {","\tconstructor(reporter) {","\t\tthis.reporter = reporter;","\t\tautoBind(this);","\t}","\tstart(runStatus) {","\t\tif (!this.reporter.start) {","\t\t\treturn;","\t\t}","","\t\tthis.write(this.reporter.start(runStatus), runStatus);","\t}","\treset(runStatus) {","\t\tif (!this.reporter.reset) {","\t\t\treturn;","\t\t}","","\t\tthis.write(this.reporter.reset(runStatus), runStatus);","\t}","\ttest(test, runStatus) {","\t\tthis.write(this.reporter.test(test, runStatus), runStatus);","\t}","\tunhandledError(err, runStatus) {","\t\tif (!this.reporter.unhandledError) {","\t\t\treturn;","\t\t}","","\t\tthis.write(this.reporter.unhandledError(err, runStatus), runStatus);","\t}","\tfinish(runStatus) {","\t\tif (!this.reporter.finish) {","\t\t\treturn;","\t\t}","","\t\tthis.write(this.reporter.finish(runStatus), runStatus);","\t}","\tsection() {","\t\tif (!this.reporter.section) {","\t\t\treturn;","\t\t}","","\t\tthis.write(this.reporter.section());","\t}","\tclear() {","\t\tif (!this.reporter.clear) {","\t\t\treturn false;","\t\t}","","\t\tthis.write(this.reporter.clear());","\t\treturn true;","\t}","\twrite(str, runStatus) {","\t\tif (typeof str === 'undefined') {","\t\t\treturn;","\t\t}","","\t\tthis.reporter.write(str, runStatus);","\t}","\tstdout(data, runStatus) {","\t\tif (!this.reporter.stdout) {","\t\t\treturn;","\t\t}","","\t\tthis.reporter.stdout(data, runStatus);","\t}","\tstderr(data, runStatus) {","\t\tif (!this.reporter.stderr) {","\t\t\treturn;","\t\t}","","\t\tthis.reporter.stderr(data, runStatus);","\t}","\texit(code) {","\t\tprocess.exit(code); // eslint-disable-line unicorn/no-process-exit","\t}","}","","module.exports = Logger;",""],"l":{"2":1,"6":1,"7":1,"10":1,"11":0,"14":1,"17":0,"18":0,"21":0,"24":0,"27":0,"28":0,"31":0,"34":0,"35":0,"38":0,"41":0,"42":0,"45":0,"48":0,"49":0,"52":0,"53":0,"56":1,"57":0,"60":1,"63":0,"64":0,"67":0,"70":0,"71":0,"74":0,"77":0,"81":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/watcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/watcher.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"rethrowAsync","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":22}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":9},"end":{"line":25,"column":12}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":10}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":28}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":9},"end":{"line":67,"column":18}}},"7":{"name":"(anonymous_7)","line":73,"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":42}}},"8":{"name":"(anonymous_8)","line":138,"loc":{"start":{"line":138,"column":11},"end":{"line":138,"column":14}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":22},"end":{"line":152,"column":28}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":23},"end":{"line":162,"column":39}}},"11":{"name":"(anonymous_11)","line":182,"loc":{"start":{"line":182,"column":17},"end":{"line":182,"column":23}}},"12":{"name":"(anonymous_12)","line":187,"loc":{"start":{"line":187,"column":18},"end":{"line":187,"column":44}}},"13":{"name":"(anonymous_13)","line":196,"loc":{"start":{"line":196,"column":14},"end":{"line":196,"column":20}}},"14":{"name":"(anonymous_14)","line":213,"loc":{"start":{"line":213,"column":14},"end":{"line":213,"column":21}}},"15":{"name":"(anonymous_15)","line":216,"loc":{"start":{"line":216,"column":13},"end":{"line":216,"column":28}}},"16":{"name":"(anonymous_16)","line":234,"loc":{"start":{"line":234,"column":20},"end":{"line":234,"column":35}}},"17":{"name":"(anonymous_17)","line":245,"loc":{"start":{"line":245,"column":19},"end":{"line":245,"column":35}}},"18":{"name":"(anonymous_18)","line":252,"loc":{"start":{"line":252,"column":13},"end":{"line":252,"column":21}}},"19":{"name":"(anonymous_19)","line":274,"loc":{"start":{"line":274,"column":9},"end":{"line":274,"column":12}}},"20":{"name":"(anonymous_20)","line":278,"loc":{"start":{"line":278,"column":16},"end":{"line":278,"column":19}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"9":{"start":{"line":11,"column":0},"end":{"line":17,"column":1}},"10":{"start":{"line":14,"column":1},"end":{"line":16,"column":4}},"11":{"start":{"line":15,"column":2},"end":{"line":15,"column":12}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"14":{"start":{"line":23,"column":2},"end":{"line":23,"column":22}},"15":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"16":{"start":{"line":27,"column":3},"end":{"line":27,"column":21}},"17":{"start":{"line":28,"column":3},"end":{"line":28,"column":10}},"18":{"start":{"line":31,"column":2},"end":{"line":49,"column":9}},"19":{"start":{"line":32,"column":3},"end":{"line":48,"column":6}},"20":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":36,"column":5},"end":{"line":36,"column":12}},"22":{"start":{"line":39,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":40,"column":5},"end":{"line":40,"column":23}},"24":{"start":{"line":41,"column":5},"end":{"line":41,"column":24}},"25":{"start":{"line":42,"column":5},"end":{"line":42,"column":21}},"26":{"start":{"line":44,"column":5},"end":{"line":44,"column":36}},"27":{"start":{"line":45,"column":5},"end":{"line":45,"column":23}},"28":{"start":{"line":46,"column":5},"end":{"line":46,"column":24}},"29":{"start":{"line":51,"column":2},"end":{"line":51,"column":21}},"30":{"start":{"line":54,"column":2},"end":{"line":58,"column":3}},"31":{"start":{"line":55,"column":3},"end":{"line":55,"column":28}},"32":{"start":{"line":56,"column":3},"end":{"line":56,"column":21}},"33":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"34":{"start":{"line":64,"column":2},"end":{"line":64,"column":19}},"35":{"start":{"line":65,"column":2},"end":{"line":65,"column":25}},"36":{"start":{"line":68,"column":2},"end":{"line":68,"column":45}},"37":{"start":{"line":74,"column":2},"end":{"line":74,"column":39}},"38":{"start":{"line":75,"column":2},"end":{"line":78,"column":5}},"39":{"start":{"line":80,"column":2},"end":{"line":80,"column":32}},"40":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}},"41":{"start":{"line":82,"column":2},"end":{"line":123,"column":4}},"42":{"start":{"line":83,"column":3},"end":{"line":93,"column":4}},"43":{"start":{"line":84,"column":4},"end":{"line":84,"column":61}},"44":{"start":{"line":85,"column":4},"end":{"line":88,"column":5}},"45":{"start":{"line":86,"column":5},"end":{"line":86,"column":20}},"46":{"start":{"line":87,"column":5},"end":{"line":87,"column":22}},"47":{"start":{"line":89,"column":4},"end":{"line":89,"column":34}},"48":{"start":{"line":91,"column":4},"end":{"line":91,"column":19}},"49":{"start":{"line":92,"column":4},"end":{"line":92,"column":19}},"50":{"start":{"line":95,"column":3},"end":{"line":95,"column":23}},"51":{"start":{"line":97,"column":3},"end":{"line":97,"column":40}},"52":{"start":{"line":99,"column":3},"end":{"line":99,"column":32}},"53":{"start":{"line":101,"column":3},"end":{"line":112,"column":4}},"54":{"start":{"line":102,"column":4},"end":{"line":102,"column":107}},"55":{"start":{"line":102,"column":56},"end":{"line":102,"column":105}},"56":{"start":{"line":104,"column":4},"end":{"line":104,"column":85}},"57":{"start":{"line":106,"column":4},"end":{"line":111,"column":5}},"58":{"start":{"line":109,"column":5},"end":{"line":109,"column":64}},"59":{"start":{"line":110,"column":5},"end":{"line":110,"column":73}},"60":{"start":{"line":114,"column":3},"end":{"line":122,"column":25}},"61":{"start":{"line":116,"column":5},"end":{"line":116,"column":75}},"62":{"start":{"line":117,"column":5},"end":{"line":117,"column":30}},"63":{"start":{"line":119,"column":5},"end":{"line":119,"column":97}},"64":{"start":{"line":120,"column":5},"end":{"line":120,"column":72}},"65":{"start":{"line":125,"column":2},"end":{"line":125,"column":29}},"66":{"start":{"line":126,"column":2},"end":{"line":126,"column":43}},"67":{"start":{"line":128,"column":2},"end":{"line":128,"column":36}},"68":{"start":{"line":129,"column":2},"end":{"line":129,"column":29}},"69":{"start":{"line":131,"column":2},"end":{"line":131,"column":30}},"70":{"start":{"line":132,"column":2},"end":{"line":132,"column":26}},"71":{"start":{"line":134,"column":2},"end":{"line":134,"column":24}},"72":{"start":{"line":135,"column":2},"end":{"line":135,"column":20}},"73":{"start":{"line":136,"column":2},"end":{"line":136,"column":18}},"74":{"start":{"line":139,"column":2},"end":{"line":139,"column":55}},"75":{"start":{"line":141,"column":2},"end":{"line":150,"column":5}},"76":{"start":{"line":145,"column":3},"end":{"line":149,"column":4}},"77":{"start":{"line":146,"column":4},"end":{"line":146,"column":44}},"78":{"start":{"line":147,"column":4},"end":{"line":147,"column":35}},"79":{"start":{"line":148,"column":4},"end":{"line":148,"column":30}},"80":{"start":{"line":153,"column":2},"end":{"line":153,"column":72}},"81":{"start":{"line":153,"column":30},"end":{"line":153,"column":71}},"82":{"start":{"line":155,"column":2},"end":{"line":160,"column":5}},"83":{"start":{"line":156,"column":3},"end":{"line":159,"column":6}},"84":{"start":{"line":157,"column":4},"end":{"line":157,"column":81}},"85":{"start":{"line":158,"column":4},"end":{"line":158,"column":50}},"86":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"87":{"start":{"line":164,"column":3},"end":{"line":164,"column":82}},"88":{"start":{"line":164,"column":63},"end":{"line":164,"column":80}},"89":{"start":{"line":165,"column":3},"end":{"line":165,"column":10}},"90":{"start":{"line":168,"column":2},"end":{"line":176,"column":5}},"91":{"start":{"line":169,"column":3},"end":{"line":171,"column":4}},"92":{"start":{"line":170,"column":4},"end":{"line":170,"column":17}},"93":{"start":{"line":173,"column":3},"end":{"line":173,"column":25}},"94":{"start":{"line":175,"column":3},"end":{"line":175,"column":15}},"95":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"96":{"start":{"line":179,"column":3},"end":{"line":179,"column":65}},"97":{"start":{"line":183,"column":2},"end":{"line":185,"column":5}},"98":{"start":{"line":184,"column":3},"end":{"line":184,"column":58}},"99":{"start":{"line":188,"column":2},"end":{"line":188,"column":59}},"100":{"start":{"line":190,"column":2},"end":{"line":194,"column":3}},"101":{"start":{"line":191,"column":3},"end":{"line":191,"column":43}},"102":{"start":{"line":192,"column":9},"end":{"line":194,"column":3}},"103":{"start":{"line":193,"column":3},"end":{"line":193,"column":49}},"104":{"start":{"line":197,"column":2},"end":{"line":211,"column":5}},"105":{"start":{"line":198,"column":3},"end":{"line":200,"column":6}},"106":{"start":{"line":199,"column":4},"end":{"line":199,"column":63}},"107":{"start":{"line":202,"column":3},"end":{"line":202,"column":40}},"108":{"start":{"line":203,"column":3},"end":{"line":205,"column":6}},"109":{"start":{"line":204,"column":4},"end":{"line":204,"column":47}},"110":{"start":{"line":206,"column":3},"end":{"line":210,"column":6}},"111":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"112":{"start":{"line":208,"column":5},"end":{"line":208,"column":51}},"113":{"start":{"line":214,"column":2},"end":{"line":214,"column":87}},"114":{"start":{"line":214,"column":66},"end":{"line":214,"column":85}},"115":{"start":{"line":217,"column":2},"end":{"line":224,"column":5}},"116":{"start":{"line":218,"column":3},"end":{"line":220,"column":4}},"117":{"start":{"line":219,"column":4},"end":{"line":219,"column":17}},"118":{"start":{"line":222,"column":3},"end":{"line":222,"column":17}},"119":{"start":{"line":223,"column":3},"end":{"line":223,"column":15}},"120":{"start":{"line":226,"column":2},"end":{"line":232,"column":3}},"121":{"start":{"line":227,"column":3},"end":{"line":231,"column":6}},"122":{"start":{"line":235,"column":2},"end":{"line":235,"column":16}},"123":{"start":{"line":237,"column":2},"end":{"line":241,"column":5}},"124":{"start":{"line":238,"column":3},"end":{"line":240,"column":4}},"125":{"start":{"line":239,"column":4},"end":{"line":239,"column":25}},"126":{"start":{"line":243,"column":2},"end":{"line":243,"column":15}},"127":{"start":{"line":246,"column":2},"end":{"line":250,"column":5}},"128":{"start":{"line":247,"column":3},"end":{"line":247,"column":45}},"129":{"start":{"line":248,"column":3},"end":{"line":248,"column":43}},"130":{"start":{"line":249,"column":3},"end":{"line":249,"column":32}},"131":{"start":{"line":253,"column":2},"end":{"line":253,"column":17}},"132":{"start":{"line":254,"column":2},"end":{"line":254,"column":28}},"133":{"start":{"line":256,"column":2},"end":{"line":272,"column":5}},"134":{"start":{"line":257,"column":3},"end":{"line":257,"column":36}},"135":{"start":{"line":258,"column":3},"end":{"line":260,"column":4}},"136":{"start":{"line":259,"column":4},"end":{"line":259,"column":11}},"137":{"start":{"line":264,"column":3},"end":{"line":264,"column":27}},"138":{"start":{"line":265,"column":3},"end":{"line":271,"column":6}},"139":{"start":{"line":268,"column":4},"end":{"line":268,"column":28}},"140":{"start":{"line":269,"column":4},"end":{"line":269,"column":35}},"141":{"start":{"line":270,"column":4},"end":{"line":270,"column":20}},"142":{"start":{"line":275,"column":2},"end":{"line":275,"column":24}},"143":{"start":{"line":276,"column":2},"end":{"line":276,"column":13}},"144":{"start":{"line":279,"column":2},"end":{"line":279,"column":39}},"145":{"start":{"line":280,"column":2},"end":{"line":280,"column":24}},"146":{"start":{"line":282,"column":2},"end":{"line":282,"column":46}},"147":{"start":{"line":283,"column":2},"end":{"line":283,"column":61}},"148":{"start":{"line":284,"column":2},"end":{"line":284,"column":52}},"149":{"start":{"line":285,"column":2},"end":{"line":285,"column":88}},"150":{"start":{"line":285,"column":56},"end":{"line":285,"column":86}},"151":{"start":{"line":286,"column":2},"end":{"line":286,"column":62}},"152":{"start":{"line":288,"column":2},"end":{"line":288,"column":41}},"153":{"start":{"line":291,"column":2},"end":{"line":293,"column":3}},"154":{"start":{"line":292,"column":3},"end":{"line":292,"column":10}},"155":{"start":{"line":295,"column":2},"end":{"line":299,"column":3}},"156":{"start":{"line":297,"column":3},"end":{"line":297,"column":33}},"157":{"start":{"line":298,"column":3},"end":{"line":298,"column":10}},"158":{"start":{"line":302,"column":2},"end":{"line":307,"column":45}},"159":{"start":{"line":303,"column":3},"end":{"line":306,"column":6}},"160":{"start":{"line":303,"column":46},"end":{"line":303,"column":64}},"161":{"start":{"line":304,"column":4},"end":{"line":304,"column":54}},"162":{"start":{"line":305,"column":4},"end":{"line":305,"column":20}},"163":{"start":{"line":307,"column":27},"end":{"line":307,"column":43}},"164":{"start":{"line":311,"column":2},"end":{"line":315,"column":3}},"165":{"start":{"line":312,"column":3},"end":{"line":312,"column":88}},"166":{"start":{"line":313,"column":3},"end":{"line":313,"column":14}},"167":{"start":{"line":314,"column":3},"end":{"line":314,"column":10}},"168":{"start":{"line":318,"column":2},"end":{"line":318,"column":69}},"169":{"start":{"line":322,"column":0},"end":{"line":322,"column":25}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":3},"end":{"line":83,"column":3}},{"start":{"line":83,"column":3},"end":{"line":83,"column":3}}]},"6":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":20},"end":{"line":84,"column":42}},{"start":{"line":84,"column":46},"end":{"line":84,"column":60}}]},"7":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"8":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":3},"end":{"line":101,"column":3}},{"start":{"line":101,"column":3},"end":{"line":101,"column":3}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"10":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":23},"end":{"line":114,"column":36}},{"start":{"line":114,"column":40},"end":{"line":114,"column":45}}]},"11":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":30},"end":{"line":120,"column":52}},{"start":{"line":120,"column":56},"end":{"line":120,"column":71}}]},"12":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":3},"end":{"line":145,"column":3}},{"start":{"line":145,"column":3},"end":{"line":145,"column":3}}]},"13":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":7},"end":{"line":145,"column":22}},{"start":{"line":145,"column":26},"end":{"line":145,"column":44}},{"start":{"line":145,"column":48},"end":{"line":145,"column":66}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"15":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":3},"end":{"line":169,"column":3}},{"start":{"line":169,"column":3},"end":{"line":169,"column":3}}]},"16":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"17":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"18":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":23}},{"start":{"line":190,"column":27},"end":{"line":190,"column":39}}]},"19":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":9},"end":{"line":192,"column":9}},{"start":{"line":192,"column":9},"end":{"line":192,"column":9}}]},"20":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":13},"end":{"line":192,"column":31}},{"start":{"line":192,"column":35},"end":{"line":192,"column":47}}]},"21":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"22":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":3},"end":{"line":218,"column":3}},{"start":{"line":218,"column":3},"end":{"line":218,"column":3}}]},"23":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"24":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":3},"end":{"line":238,"column":3}},{"start":{"line":238,"column":3},"end":{"line":238,"column":3}}]},"25":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":3},"end":{"line":258,"column":3}},{"start":{"line":258,"column":3},"end":{"line":258,"column":3}}]},"26":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":7},"end":{"line":258,"column":19}},{"start":{"line":258,"column":23},"end":{"line":258,"column":36}}]},"27":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"28":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"29":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":311,"column":2}},{"start":{"line":311,"column":2},"end":{"line":311,"column":2}}]}},"code":["'use strict';","const nodePath = require('path');","const debug = require('debug')('ava:watcher');","const diff = require('lodash.difference');","const chokidar = require('chokidar');","const flatten = require('arr-flatten');","const union = require('array-union');","const uniq = require('array-uniq');","const AvaFiles = require('./ava-files');","","function rethrowAsync(err) {","\t// Don't swallow exceptions. Note that any","\t// expected error should already have been logged","\tsetImmediate(() => {","\t\tthrow err;","\t});","}","","class Debouncer {","\tconstructor(watcher) {","\t\tthis.watcher = watcher;","\t\tthis.timer = null;","\t\tthis.repeat = false;","\t}","\tdebounce() {","\t\tif (this.timer) {","\t\t\tthis.again = true;","\t\t\treturn;","\t\t}","","\t\tconst timer = setTimeout(() => {","\t\t\tthis.watcher.busy.then(() => {","\t\t\t\t// Do nothing if debouncing was canceled while waiting for the busy","\t\t\t\t// promise to fulfil","\t\t\t\tif (this.timer !== timer) {","\t\t\t\t\treturn;","\t\t\t\t}","","\t\t\t\tif (this.again) {","\t\t\t\t\tthis.timer = null;","\t\t\t\t\tthis.again = false;","\t\t\t\t\tthis.debounce();","\t\t\t\t} else {","\t\t\t\t\tthis.watcher.runAfterChanges();","\t\t\t\t\tthis.timer = null;","\t\t\t\t\tthis.again = false;","\t\t\t\t}","\t\t\t});","\t\t}, 10);","","\t\tthis.timer = timer;","\t}","\tcancel() {","\t\tif (this.timer) {","\t\t\tclearTimeout(this.timer);","\t\t\tthis.timer = null;","\t\t\tthis.again = false;","\t\t}","\t}","}","","class TestDependency {","\tconstructor(file, sources) {","\t\tthis.file = file;","\t\tthis.sources = sources;","\t}","\tcontains(source) {","\t\treturn this.sources.indexOf(source) !== -1;","\t}","}","","class Watcher {","\tconstructor(logger, api, files, sources) {","\t\tthis.debouncer = new Debouncer(this);","\t\tthis.avaFiles = new AvaFiles({","\t\t\tfiles,","\t\t\tsources","\t\t});","","\t\tthis.clearLogOnNextRun = true;","\t\tthis.runVector = 0;","\t\tthis.run = specificFiles => {","\t\t\tif (this.runVector > 0) {","\t\t\t\tconst cleared = this.clearLogOnNextRun && logger.clear();","\t\t\t\tif (!cleared) {","\t\t\t\t\tlogger.reset();","\t\t\t\t\tlogger.section();","\t\t\t\t}","\t\t\t\tthis.clearLogOnNextRun = true;","","\t\t\t\tlogger.reset();","\t\t\t\tlogger.start();","\t\t\t}","","\t\t\tthis.runVector += 1;","","\t\t\tconst currentVector = this.runVector;","","\t\t\tlet runOnlyExclusive = false;","","\t\t\tif (specificFiles) {","\t\t\t\tconst exclusiveFiles = specificFiles.filter(file => this.filesWithExclusiveTests.indexOf(file) !== -1);","","\t\t\t\trunOnlyExclusive = exclusiveFiles.length !== this.filesWithExclusiveTests.length;","","\t\t\t\tif (runOnlyExclusive) {","\t\t\t\t\t// The test files that previously contained exclusive tests are always","\t\t\t\t\t// run, together with the remaining specific files.","\t\t\t\t\tconst remainingFiles = diff(specificFiles, exclusiveFiles);","\t\t\t\t\tspecificFiles = this.filesWithExclusiveTests.concat(remainingFiles);","\t\t\t\t}","\t\t\t}","","\t\t\tthis.busy = api.run(specificFiles || files, {runOnlyExclusive})","\t\t\t\t.then(runStatus => {","\t\t\t\t\trunStatus.previousFailCount = this.sumPreviousFailures(currentVector);","\t\t\t\t\tlogger.finish(runStatus);","","\t\t\t\t\tconst badCounts = runStatus.failCount + runStatus.rejectionCount + runStatus.exceptionCount;","\t\t\t\t\tthis.clearLogOnNextRun = this.clearLogOnNextRun && badCounts === 0;","\t\t\t\t})","\t\t\t\t.catch(rethrowAsync);","\t\t};","","\t\tthis.testDependencies = [];","\t\tthis.trackTestDependencies(api, sources);","","\t\tthis.filesWithExclusiveTests = [];","\t\tthis.trackExclusivity(api);","","\t\tthis.filesWithFailures = [];","\t\tthis.trackFailures(api);","","\t\tthis.dirtyStates = {};","\t\tthis.watchFiles();","\t\tthis.rerunAll();","\t}","\twatchFiles() {","\t\tconst patterns = this.avaFiles.getChokidarPatterns();","","\t\tchokidar.watch(patterns.paths, {","\t\t\tignored: patterns.ignored,","\t\t\tignoreInitial: true","\t\t}).on('all', (event, path) => {","\t\t\tif (event === 'add' || event === 'change' || event === 'unlink') {","\t\t\t\tdebug('Detected %s of %s', event, path);","\t\t\t\tthis.dirtyStates[path] = event;","\t\t\t\tthis.debouncer.debounce();","\t\t\t}","\t\t});","\t}","\ttrackTestDependencies(api) {","\t\tconst relative = absPath => nodePath.relative(process.cwd(), absPath);","","\t\tapi.on('test-run', runStatus => {","\t\t\trunStatus.on('dependencies', (file, dependencies) => {","\t\t\t\tconst sourceDeps = dependencies.map(relative).filter(this.avaFiles.isSource);","\t\t\t\tthis.updateTestDependencies(file, sourceDeps);","\t\t\t});","\t\t});","\t}","\tupdateTestDependencies(file, sources) {","\t\tif (sources.length === 0) {","\t\t\tthis.testDependencies = this.testDependencies.filter(dep => dep.file !== file);","\t\t\treturn;","\t\t}","","\t\tconst isUpdate = this.testDependencies.some(dep => {","\t\t\tif (dep.file !== file) {","\t\t\t\treturn false;","\t\t\t}","","\t\t\tdep.sources = sources;","","\t\t\treturn true;","\t\t});","","\t\tif (!isUpdate) {","\t\t\tthis.testDependencies.push(new TestDependency(file, sources));","\t\t}","\t}","\ttrackExclusivity(api) {","\t\tapi.on('stats', stats => {","\t\t\tthis.updateExclusivity(stats.file, stats.hasExclusive);","\t\t});","\t}","\tupdateExclusivity(file, hasExclusiveTests) {","\t\tconst index = this.filesWithExclusiveTests.indexOf(file);","","\t\tif (hasExclusiveTests && index === -1) {","\t\t\tthis.filesWithExclusiveTests.push(file);","\t\t} else if (!hasExclusiveTests && index !== -1) {","\t\t\tthis.filesWithExclusiveTests.splice(index, 1);","\t\t}","\t}","\ttrackFailures(api) {","\t\tapi.on('test-run', (runStatus, files) => {","\t\t\tfiles.forEach(file => {","\t\t\t\tthis.pruneFailures(nodePath.relative(process.cwd(), file));","\t\t\t});","","\t\t\tconst currentVector = this.runVector;","\t\t\trunStatus.on('error', err => {","\t\t\t\tthis.countFailure(err.file, currentVector);","\t\t\t});","\t\t\trunStatus.on('test', result => {","\t\t\t\tif (result.error) {","\t\t\t\t\tthis.countFailure(result.file, currentVector);","\t\t\t\t}","\t\t\t});","\t\t});","\t}","\tpruneFailures(file) {","\t\tthis.filesWithFailures = this.filesWithFailures.filter(state => state.file !== file);","\t}","\tcountFailure(file, vector) {","\t\tconst isUpdate = this.filesWithFailures.some(state => {","\t\t\tif (state.file !== file) {","\t\t\t\treturn false;","\t\t\t}","","\t\t\tstate.count++;","\t\t\treturn true;","\t\t});","","\t\tif (!isUpdate) {","\t\t\tthis.filesWithFailures.push({","\t\t\t\tfile,","\t\t\t\tvector,","\t\t\t\tcount: 1","\t\t\t});","\t\t}","\t}","\tsumPreviousFailures(beforeVector) {","\t\tlet total = 0;","","\t\tthis.filesWithFailures.forEach(state => {","\t\t\tif (state.vector < beforeVector) {","\t\t\t\ttotal += state.count;","\t\t\t}","\t\t});","","\t\treturn total;","\t}","\tcleanUnlinkedTests(unlinkedTests) {","\t\tunlinkedTests.forEach(testFile => {","\t\t\tthis.updateTestDependencies(testFile, []);","\t\t\tthis.updateExclusivity(testFile, false);","\t\t\tthis.pruneFailures(testFile);","\t\t});","\t}","\tobserveStdin(stdin) {","\t\tstdin.resume();","\t\tstdin.setEncoding('utf8');","","\t\tstdin.on('data', data => {","\t\t\tdata = data.trim().toLowerCase();","\t\t\tif (data !== 'r' && data !== 'rs') {","\t\t\t\treturn;","\t\t\t}","","\t\t\t// Cancel the debouncer, it might rerun specific tests whereas *all* tests","\t\t\t// need to be rerun","\t\t\tthis.debouncer.cancel();","\t\t\tthis.busy.then(() => {","\t\t\t\t// Cancel the debouncer again, it might have restarted while waiting for","\t\t\t\t// the busy promise to fulfil","\t\t\t\tthis.debouncer.cancel();","\t\t\t\tthis.clearLogOnNextRun = false;","\t\t\t\tthis.rerunAll();","\t\t\t});","\t\t});","\t}","\trerunAll() {","\t\tthis.dirtyStates = {};","\t\tthis.run();","\t}","\trunAfterChanges() {","\t\tconst dirtyStates = this.dirtyStates;","\t\tthis.dirtyStates = {};","","\t\tconst dirtyPaths = Object.keys(dirtyStates);","\t\tconst dirtyTests = dirtyPaths.filter(this.avaFiles.isTest);","\t\tconst dirtySources = diff(dirtyPaths, dirtyTests);","\t\tconst addedOrChangedTests = dirtyTests.filter(path => dirtyStates[path] !== 'unlink');","\t\tconst unlinkedTests = diff(dirtyTests, addedOrChangedTests);","","\t\tthis.cleanUnlinkedTests(unlinkedTests);","","\t\t// No need to rerun tests if the only change is that tests were deleted","\t\tif (unlinkedTests.length === dirtyPaths.length) {","\t\t\treturn;","\t\t}","","\t\tif (dirtySources.length === 0) {","\t\t\t// Run any new or changed tests","\t\t\tthis.run(addedOrChangedTests);","\t\t\treturn;","\t\t}","","\t\t// Try to find tests that depend on the changed source files","\t\tconst testsBySource = dirtySources.map(path => {","\t\t\treturn this.testDependencies.filter(dep => dep.contains(path)).map(dep => {","\t\t\t\tdebug('%s is a dependency of %s', path, dep.file);","\t\t\t\treturn dep.file;","\t\t\t});","\t\t}, this).filter(tests => tests.length > 0);","","\t\t// Rerun all tests if source files were changed that could not be traced to","\t\t// specific tests","\t\tif (testsBySource.length !== dirtySources.length) {","\t\t\tdebug('Sources remain that cannot be traced to specific tests. Rerunning all tests');","\t\t\tthis.run();","\t\t\treturn;","\t\t}","","\t\t// Run all affected tests","\t\tthis.run(union(addedOrChangedTests, uniq(flatten(testsBySource))));","\t}","}","","module.exports = Watcher;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"14":0,"15":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"31":0,"32":0,"35":0,"36":0,"39":0,"40":0,"41":0,"42":0,"44":0,"45":0,"46":0,"51":0,"54":0,"55":0,"56":0,"57":0,"64":0,"65":0,"68":0,"74":0,"75":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"92":0,"95":0,"97":0,"99":0,"101":0,"102":0,"104":0,"106":0,"109":0,"110":0,"114":0,"116":0,"117":0,"119":0,"120":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"134":0,"135":0,"136":0,"139":0,"141":0,"145":0,"146":0,"147":0,"148":0,"153":0,"155":0,"156":0,"157":0,"158":0,"163":0,"164":0,"165":0,"168":0,"169":0,"170":0,"173":0,"175":0,"178":0,"179":0,"183":0,"184":0,"188":0,"190":0,"191":0,"192":0,"193":0,"197":0,"198":0,"199":0,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"214":0,"217":0,"218":0,"219":0,"222":0,"223":0,"226":0,"227":0,"235":0,"237":0,"238":0,"239":0,"243":0,"246":0,"247":0,"248":0,"249":0,"253":0,"254":0,"256":0,"257":0,"258":0,"259":0,"264":0,"265":0,"268":0,"269":0,"270":0,"275":0,"276":0,"279":0,"280":0,"282":0,"283":0,"284":0,"285":0,"286":0,"288":0,"291":0,"292":0,"295":0,"297":0,"298":0,"302":0,"303":0,"304":0,"305":0,"307":0,"311":0,"312":0,"313":0,"314":0,"318":0,"322":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/.iron-node.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/.iron-node.js","s":{"1":1,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":2}},"2":{"start":{"line":6,"column":27},"end":{"line":6,"column":36}}},"branchMap":{},"code":["module.exports = {","\tapp: {","\t\topenDevToolsDetached: true,","\t\thideMainWindow: true","\t},","\tworkSpaceDirectory: () => __dirname","};",""],"l":{"1":1,"6":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/profile.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/profile.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[2,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"resolveModules","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}}},"2":{"name":"(anonymous_2)","line":104,"loc":{"start":{"line":104,"column":24},"end":{"line":104,"column":27}}},"3":{"name":"(anonymous_3)","line":104,"loc":{"start":{"line":104,"column":36},"end":{"line":104,"column":39}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":64}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"13":{"start":{"line":20,"column":0},"end":{"line":30,"column":1}},"14":{"start":{"line":21,"column":1},"end":{"line":29,"column":4}},"15":{"start":{"line":22,"column":2},"end":{"line":22,"column":38}},"16":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"17":{"start":{"line":25,"column":3},"end":{"line":25,"column":66}},"18":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}},"19":{"start":{"line":33,"column":0},"end":{"line":33,"column":43}},"20":{"start":{"line":34,"column":0},"end":{"line":34,"column":47}},"21":{"start":{"line":36,"column":0},"end":{"line":36,"column":26}},"22":{"start":{"line":38,"column":0},"end":{"line":42,"column":3}},"23":{"start":{"line":45,"column":0},"end":{"line":67,"column":3}},"24":{"start":{"line":69,"column":0},"end":{"line":71,"column":1}},"25":{"start":{"line":70,"column":1},"end":{"line":70,"column":40}},"26":{"start":{"line":73,"column":0},"end":{"line":73,"column":40}},"27":{"start":{"line":74,"column":0},"end":{"line":77,"column":22}},"28":{"start":{"line":79,"column":0},"end":{"line":161,"column":4}},"29":{"start":{"line":81,"column":2},"end":{"line":85,"column":5}},"30":{"start":{"line":87,"column":2},"end":{"line":87,"column":25}},"31":{"start":{"line":88,"column":2},"end":{"line":88,"column":55}},"32":{"start":{"line":90,"column":2},"end":{"line":98,"column":4}},"33":{"start":{"line":100,"column":2},"end":{"line":100,"column":36}},"34":{"start":{"line":101,"column":2},"end":{"line":101,"column":33}},"35":{"start":{"line":104,"column":2},"end":{"line":104,"column":43}},"36":{"start":{"line":105,"column":2},"end":{"line":119,"column":4}},"37":{"start":{"line":106,"column":3},"end":{"line":116,"column":4}},"38":{"start":{"line":107,"column":4},"end":{"line":107,"column":48}},"39":{"start":{"line":109,"column":4},"end":{"line":113,"column":5}},"40":{"start":{"line":110,"column":5},"end":{"line":110,"column":34}},"41":{"start":{"line":112,"column":5},"end":{"line":112,"column":58}},"42":{"start":{"line":115,"column":4},"end":{"line":115,"column":11}},"43":{"start":{"line":118,"column":3},"end":{"line":118,"column":39}},"44":{"start":{"line":121,"column":2},"end":{"line":123,"column":5}},"45":{"start":{"line":122,"column":3},"end":{"line":122,"column":48}},"46":{"start":{"line":125,"column":2},"end":{"line":135,"column":5}},"47":{"start":{"line":126,"column":3},"end":{"line":128,"column":4}},"48":{"start":{"line":127,"column":4},"end":{"line":127,"column":25}},"49":{"start":{"line":130,"column":3},"end":{"line":130,"column":39}},"50":{"start":{"line":132,"column":3},"end":{"line":134,"column":4}},"51":{"start":{"line":133,"column":4},"end":{"line":133,"column":64}},"52":{"start":{"line":137,"column":2},"end":{"line":141,"column":5}},"53":{"start":{"line":138,"column":3},"end":{"line":140,"column":6}},"54":{"start":{"line":139,"column":4},"end":{"line":139,"column":32}},"55":{"start":{"line":143,"column":2},"end":{"line":148,"column":5}},"56":{"start":{"line":144,"column":3},"end":{"line":144,"column":28}},"57":{"start":{"line":145,"column":3},"end":{"line":145,"column":62}},"58":{"start":{"line":146,"column":3},"end":{"line":146,"column":25}},"59":{"start":{"line":147,"column":3},"end":{"line":147,"column":22}},"60":{"start":{"line":151,"column":2},"end":{"line":151,"column":41}},"61":{"start":{"line":152,"column":2},"end":{"line":152,"column":26}},"62":{"start":{"line":154,"column":2},"end":{"line":156,"column":3}},"63":{"start":{"line":155,"column":3},"end":{"line":155,"column":46}},"64":{"start":{"line":158,"column":2},"end":{"line":160,"column":5}},"65":{"start":{"line":159,"column":3},"end":{"line":159,"column":32}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":0},"end":{"line":69,"column":0}},{"start":{"line":69,"column":0},"end":{"line":69,"column":0}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":17},"end":{"line":77,"column":2}},{"start":{"line":77,"column":6},"end":{"line":77,"column":21}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":3},"end":{"line":106,"column":3}},{"start":{"line":106,"column":3},"end":{"line":106,"column":3}}]},"5":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":7},"end":{"line":106,"column":11}},{"start":{"line":106,"column":15},"end":{"line":106,"column":23}}]},"6":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"7":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":3},"end":{"line":126,"column":3}},{"start":{"line":126,"column":3},"end":{"line":126,"column":3}}]},"8":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":3},"end":{"line":132,"column":3}},{"start":{"line":132,"column":3},"end":{"line":132,"column":3}}]},"9":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":15},"end":{"line":145,"column":19}},{"start":{"line":145,"column":23},"end":{"line":145,"column":37}},{"start":{"line":145,"column":41},"end":{"line":145,"column":61}}]},"10":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":11},"end":{"line":146,"column":16}},{"start":{"line":146,"column":20},"end":{"line":146,"column":24}}]},"11":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]}},"code":["'use strict';","","// Iron-node does not work with forked processes","// This cli command will run a single file in the current process.","// Intended to be used with iron-node for profiling purposes.","","const path = require('path');","const EventEmitter = require('events');","const meow = require('meow');","const Promise = require('bluebird');","const pkgConf = require('pkg-conf');","const findCacheDir = require('find-cache-dir');","const uniqueTempDir = require('unique-temp-dir');","const arrify = require('arrify');","const resolveCwd = require('resolve-cwd');","const babelConfigHelper = require('./lib/babel-config');","const CachingPrecompiler = require('./lib/caching-precompiler');","const globals = require('./lib/globals');","","function resolveModules(modules) {","\treturn arrify(modules).map(name => {","\t\tconst modulePath = resolveCwd(name);","","\t\tif (modulePath === null) {","\t\t\tthrow new Error(`Could not resolve required module '${name}'`);","\t\t}","","\t\treturn modulePath;","\t});","}","","// Chrome gets upset when the `this` value is non-null for these functions","globals.setTimeout = setTimeout.bind(null);","globals.clearTimeout = clearTimeout.bind(null);","","Promise.longStackTraces();","","const conf = pkgConf.sync('ava', {","\tdefaults: {","\t\tbabel: 'default'","\t}","});","","// Define a minimal set of options from the main CLI","const cli = meow(`","\tUsage","\t  $ iron-node node_modules/ava/profile.js <test-file>","","\tOptions","\t  --fail-fast   Stop after first test failure","\t  --serial, -s  Run tests serially","","`, {","\tstring: [","\t\t'_'","\t],","\tboolean: [","\t\t'fail-fast',","\t\t'verbose',","\t\t'serial',","\t\t'tap'","\t],","\tdefault: conf,","\talias: {","\t\ts: 'serial'","\t}","});","","if (cli.input.length !== 1) {","\tthrow new Error('Specify a test file');","}","","const file = path.resolve(cli.input[0]);","const cacheDir = findCacheDir({","\tname: 'ava',","\tfiles: [file]","}) || uniqueTempDir();","","babelConfigHelper.build(process.cwd(), cacheDir, conf.babel, true)","\t.then(result => {","\t\tconst precompiler = new CachingPrecompiler({","\t\t\tpath: cacheDir,","\t\t\tgetBabelOptions: result.getOptions,","\t\t\tbabelCacheKeys: result.cacheKeys","\t\t});","","\t\tconst precompiled = {};","\t\tprecompiled[file] = precompiler.precompileFile(file);","","\t\tconst opts = {","\t\t\tfile,","\t\t\tfailFast: cli.flags.failFast,","\t\t\tserial: cli.flags.serial,","\t\t\ttty: false,","\t\t\tcacheDir,","\t\t\tprecompiled,","\t\t\trequire: resolveModules(conf.require)","\t\t};","","\t\tconst events = new EventEmitter();","\t\tlet uncaughtExceptionCount = 0;","","\t\t// Mock the behavior of a parent process","\t\tprocess.channel = {ref() {}, unref() {}};","\t\tprocess.send = data => {","\t\t\tif (data && data.ava) {","\t\t\t\tconst name = data.name.replace(/^ava-/, '');","","\t\t\t\tif (events.listeners(name).length > 0) {","\t\t\t\t\tevents.emit(name, data.data);","\t\t\t\t} else {","\t\t\t\t\tconsole.log('UNHANDLED AVA EVENT:', name, data.data);","\t\t\t\t}","","\t\t\t\treturn;","\t\t\t}","","\t\t\tconsole.log('NON AVA EVENT:', data);","\t\t};","","\t\tevents.on('test', data => {","\t\t\tconsole.log('TEST:', data.title, data.error);","\t\t});","","\t\tevents.on('results', data => {","\t\t\tif (console.profileEnd) {","\t\t\t\tconsole.profileEnd();","\t\t\t}","","\t\t\tconsole.log('RESULTS:', data.stats);","","\t\t\tif (process.exit) {","\t\t\t\tprocess.exit(data.stats.failCount + uncaughtExceptionCount); // eslint-disable-line unicorn/no-process-exit","\t\t\t}","\t\t});","","\t\tevents.on('stats', () => {","\t\t\tsetImmediate(() => {","\t\t\t\tprocess.emit('ava-run', {});","\t\t\t});","\t\t});","","\t\tevents.on('uncaughtException', data => {","\t\t\tuncaughtExceptionCount++;","\t\t\tlet stack = data && data.exception && data.exception.stack;","\t\t\tstack = stack || data;","\t\t\tconsole.log(stack);","\t\t});","","\t\t// `test-worker` will read process.argv[2] for options","\t\tprocess.argv[2] = JSON.stringify(opts);","\t\tprocess.argv.length = 3;","","\t\tif (console.profile) {","\t\t\tconsole.profile('AVA test-worker process');","\t\t}","","\t\tsetImmediate(() => {","\t\t\trequire('./lib/test-worker'); // eslint-disable-line import/no-unassigned-import","\t\t});","\t});",""],"l":{"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"20":1,"21":0,"22":0,"24":0,"25":0,"28":0,"33":2,"34":2,"36":2,"38":2,"45":2,"69":2,"70":2,"73":0,"74":0,"79":0,"81":0,"87":0,"88":0,"90":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"109":0,"110":0,"112":0,"115":0,"118":0,"121":0,"122":0,"125":0,"126":0,"127":0,"130":0,"132":0,"133":0,"137":0,"138":0,"139":0,"143":0,"144":0,"145":0,"146":0,"147":0,"151":0,"152":0,"154":0,"155":0,"158":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/assert.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/assert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0]},"f":{"1":0,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":19}}},"2":{"name":"getStack","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}}},"3":{"name":"wrapAssertions","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":35}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":6},"end":{"line":50,"column":9}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":6},"end":{"line":54,"column":16}}},"6":{"name":"(anonymous_6)","line":61,"loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":32}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":5},"end":{"line":80,"column":33}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":11},"end":{"line":93,"column":39}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":14},"end":{"line":111,"column":42}}},"10":{"name":"(anonymous_10)","line":123,"loc":{"start":{"line":123,"column":8},"end":{"line":123,"column":27}}},"11":{"name":"(anonymous_11)","line":194,"loc":{"start":{"line":194,"column":11},"end":{"line":194,"column":25}}},"12":{"name":"(anonymous_12)","line":240,"loc":{"start":{"line":240,"column":9},"end":{"line":240,"column":27}}},"13":{"name":"(anonymous_13)","line":252,"loc":{"start":{"line":252,"column":10},"end":{"line":252,"column":28}}},"14":{"name":"(anonymous_14)","line":273,"loc":{"start":{"line":273,"column":8},"end":{"line":273,"column":26}}},"15":{"name":"(anonymous_15)","line":284,"loc":{"start":{"line":284,"column":7},"end":{"line":284,"column":25}}},"16":{"name":"(anonymous_16)","line":295,"loc":{"start":{"line":295,"column":6},"end":{"line":295,"column":24}}},"17":{"name":"(anonymous_17)","line":305,"loc":{"start":{"line":305,"column":7},"end":{"line":305,"column":25}}},"18":{"name":"(anonymous_18)","line":315,"loc":{"start":{"line":315,"column":7},"end":{"line":315,"column":32}}},"19":{"name":"(anonymous_19)","line":345,"loc":{"start":{"line":345,"column":10},"end":{"line":345,"column":35}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":61}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"9":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":31}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":34}},"12":{"start":{"line":17,"column":2},"end":{"line":17,"column":38}},"13":{"start":{"line":18,"column":2},"end":{"line":18,"column":51}},"14":{"start":{"line":19,"column":2},"end":{"line":19,"column":32}},"15":{"start":{"line":20,"column":2},"end":{"line":20,"column":34}},"16":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}},"17":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"18":{"start":{"line":26,"column":3},"end":{"line":26,"column":27}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}},"20":{"start":{"line":32,"column":0},"end":{"line":36,"column":1}},"21":{"start":{"line":33,"column":1},"end":{"line":33,"column":16}},"22":{"start":{"line":34,"column":1},"end":{"line":34,"column":40}},"23":{"start":{"line":35,"column":1},"end":{"line":35,"column":18}},"24":{"start":{"line":38,"column":0},"end":{"line":377,"column":1}},"25":{"start":{"line":39,"column":1},"end":{"line":39,"column":29}},"26":{"start":{"line":40,"column":1},"end":{"line":40,"column":35}},"27":{"start":{"line":41,"column":1},"end":{"line":41,"column":29}},"28":{"start":{"line":43,"column":1},"end":{"line":43,"column":23}},"29":{"start":{"line":44,"column":1},"end":{"line":44,"column":29}},"30":{"start":{"line":44,"column":24},"end":{"line":44,"column":28}},"31":{"start":{"line":45,"column":1},"end":{"line":47,"column":3}},"32":{"start":{"line":45,"column":31},"end":{"line":47,"column":2}},"33":{"start":{"line":46,"column":2},"end":{"line":46,"column":15}},"34":{"start":{"line":49,"column":1},"end":{"line":270,"column":3}},"35":{"start":{"line":51,"column":3},"end":{"line":51,"column":14}},"36":{"start":{"line":55,"column":3},"end":{"line":58,"column":7}},"37":{"start":{"line":62,"column":3},"end":{"line":77,"column":4}},"38":{"start":{"line":63,"column":4},"end":{"line":63,"column":15}},"39":{"start":{"line":65,"column":4},"end":{"line":65,"column":64}},"40":{"start":{"line":66,"column":4},"end":{"line":69,"column":6}},"41":{"start":{"line":71,"column":4},"end":{"line":76,"column":8}},"42":{"start":{"line":81,"column":3},"end":{"line":90,"column":4}},"43":{"start":{"line":82,"column":4},"end":{"line":87,"column":8}},"44":{"start":{"line":89,"column":4},"end":{"line":89,"column":15}},"45":{"start":{"line":94,"column":3},"end":{"line":108,"column":4}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":15}},"47":{"start":{"line":97,"column":4},"end":{"line":97,"column":64}},"48":{"start":{"line":98,"column":4},"end":{"line":101,"column":6}},"49":{"start":{"line":103,"column":4},"end":{"line":107,"column":8}},"50":{"start":{"line":112,"column":3},"end":{"line":120,"column":4}},"51":{"start":{"line":113,"column":4},"end":{"line":117,"column":8}},"52":{"start":{"line":119,"column":4},"end":{"line":119,"column":15}},"53":{"start":{"line":124,"column":3},"end":{"line":124,"column":15}},"54":{"start":{"line":125,"column":3},"end":{"line":137,"column":4}},"55":{"start":{"line":126,"column":4},"end":{"line":126,"column":17}},"56":{"start":{"line":127,"column":10},"end":{"line":137,"column":4}},"57":{"start":{"line":128,"column":4},"end":{"line":128,"column":38}},"58":{"start":{"line":129,"column":10},"end":{"line":137,"column":4}},"59":{"start":{"line":130,"column":4},"end":{"line":135,"column":8}},"60":{"start":{"line":136,"column":4},"end":{"line":136,"column":11}},"61":{"start":{"line":139,"column":3},"end":{"line":139,"column":32}},"62":{"start":{"line":140,"column":3},"end":{"line":146,"column":4}},"63":{"start":{"line":141,"column":4},"end":{"line":141,"column":32}},"64":{"start":{"line":142,"column":4},"end":{"line":142,"column":74}},"65":{"start":{"line":142,"column":40},"end":{"line":142,"column":73}},"66":{"start":{"line":145,"column":4},"end":{"line":145,"column":35}},"67":{"start":{"line":148,"column":3},"end":{"line":174,"column":5}},"68":{"start":{"line":149,"column":4},"end":{"line":149,"column":15}},"69":{"start":{"line":150,"column":4},"end":{"line":150,"column":22}},"70":{"start":{"line":151,"column":4},"end":{"line":173,"column":5}},"71":{"start":{"line":152,"column":5},"end":{"line":160,"column":34}},"72":{"start":{"line":153,"column":6},"end":{"line":159,"column":7}},"73":{"start":{"line":154,"column":7},"end":{"line":154,"column":12}},"74":{"start":{"line":156,"column":7},"end":{"line":156,"column":20}},"75":{"start":{"line":157,"column":7},"end":{"line":157,"column":20}},"76":{"start":{"line":158,"column":7},"end":{"line":158,"column":17}},"77":{"start":{"line":161,"column":5},"end":{"line":161,"column":19}},"78":{"start":{"line":163,"column":5},"end":{"line":165,"column":11}},"79":{"start":{"line":167,"column":5},"end":{"line":172,"column":8}},"80":{"start":{"line":176,"column":3},"end":{"line":183,"column":4}},"81":{"start":{"line":178,"column":4},"end":{"line":178,"column":29}},"82":{"start":{"line":179,"column":4},"end":{"line":179,"column":89}},"83":{"start":{"line":179,"column":72},"end":{"line":179,"column":87}},"84":{"start":{"line":180,"column":4},"end":{"line":180,"column":32}},"85":{"start":{"line":182,"column":4},"end":{"line":182,"column":36}},"86":{"start":{"line":185,"column":3},"end":{"line":191,"column":4}},"87":{"start":{"line":186,"column":4},"end":{"line":186,"column":28}},"88":{"start":{"line":187,"column":4},"end":{"line":187,"column":15}},"89":{"start":{"line":188,"column":4},"end":{"line":188,"column":18}},"90":{"start":{"line":190,"column":4},"end":{"line":190,"column":20}},"91":{"start":{"line":195,"column":3},"end":{"line":195,"column":15}},"92":{"start":{"line":196,"column":3},"end":{"line":208,"column":4}},"93":{"start":{"line":197,"column":4},"end":{"line":197,"column":17}},"94":{"start":{"line":198,"column":10},"end":{"line":208,"column":4}},"95":{"start":{"line":199,"column":4},"end":{"line":199,"column":38}},"96":{"start":{"line":200,"column":10},"end":{"line":208,"column":4}},"97":{"start":{"line":201,"column":4},"end":{"line":206,"column":8}},"98":{"start":{"line":207,"column":4},"end":{"line":207,"column":11}},"99":{"start":{"line":210,"column":3},"end":{"line":221,"column":5}},"100":{"start":{"line":211,"column":4},"end":{"line":220,"column":5}},"101":{"start":{"line":212,"column":5},"end":{"line":212,"column":33}},"102":{"start":{"line":214,"column":5},"end":{"line":219,"column":8}},"103":{"start":{"line":223,"column":3},"end":{"line":230,"column":4}},"104":{"start":{"line":225,"column":4},"end":{"line":225,"column":29}},"105":{"start":{"line":226,"column":4},"end":{"line":226,"column":88}},"106":{"start":{"line":226,"column":54},"end":{"line":226,"column":86}},"107":{"start":{"line":227,"column":4},"end":{"line":227,"column":32}},"108":{"start":{"line":229,"column":4},"end":{"line":229,"column":36}},"109":{"start":{"line":232,"column":3},"end":{"line":237,"column":4}},"110":{"start":{"line":233,"column":4},"end":{"line":233,"column":13}},"111":{"start":{"line":234,"column":4},"end":{"line":234,"column":15}},"112":{"start":{"line":236,"column":4},"end":{"line":236,"column":20}},"113":{"start":{"line":241,"column":3},"end":{"line":249,"column":4}},"114":{"start":{"line":242,"column":4},"end":{"line":246,"column":8}},"115":{"start":{"line":248,"column":4},"end":{"line":248,"column":15}},"116":{"start":{"line":253,"column":3},"end":{"line":253,"column":47}},"117":{"start":{"line":254,"column":3},"end":{"line":254,"column":50}},"118":{"start":{"line":255,"column":3},"end":{"line":268,"column":4}},"119":{"start":{"line":256,"column":4},"end":{"line":256,"column":15}},"120":{"start":{"line":258,"column":4},"end":{"line":262,"column":17}},"121":{"start":{"line":263,"column":4},"end":{"line":267,"column":8}},"122":{"start":{"line":272,"column":1},"end":{"line":374,"column":4}},"123":{"start":{"line":274,"column":3},"end":{"line":281,"column":4}},"124":{"start":{"line":275,"column":4},"end":{"line":280,"column":7}},"125":{"start":{"line":285,"column":3},"end":{"line":292,"column":4}},"126":{"start":{"line":286,"column":4},"end":{"line":291,"column":7}},"127":{"start":{"line":296,"column":3},"end":{"line":302,"column":4}},"128":{"start":{"line":297,"column":4},"end":{"line":301,"column":7}},"129":{"start":{"line":306,"column":3},"end":{"line":312,"column":4}},"130":{"start":{"line":307,"column":4},"end":{"line":311,"column":7}},"131":{"start":{"line":316,"column":3},"end":{"line":323,"column":4}},"132":{"start":{"line":317,"column":4},"end":{"line":322,"column":7}},"133":{"start":{"line":324,"column":3},"end":{"line":331,"column":4}},"134":{"start":{"line":325,"column":4},"end":{"line":330,"column":7}},"135":{"start":{"line":333,"column":3},"end":{"line":342,"column":4}},"136":{"start":{"line":334,"column":4},"end":{"line":341,"column":7}},"137":{"start":{"line":346,"column":3},"end":{"line":353,"column":4}},"138":{"start":{"line":347,"column":4},"end":{"line":352,"column":7}},"139":{"start":{"line":354,"column":3},"end":{"line":361,"column":4}},"140":{"start":{"line":355,"column":4},"end":{"line":360,"column":7}},"141":{"start":{"line":363,"column":3},"end":{"line":372,"column":4}},"142":{"start":{"line":364,"column":4},"end":{"line":371,"column":7}},"143":{"start":{"line":376,"column":1},"end":{"line":376,"column":54}},"144":{"start":{"line":378,"column":0},"end":{"line":378,"column":40}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":20}},{"start":{"line":13,"column":24},"end":{"line":13,"column":26}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":23},"end":{"line":18,"column":41}},{"start":{"line":18,"column":45},"end":{"line":18,"column":50}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":27}},{"start":{"line":20,"column":31},"end":{"line":20,"column":33}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":13},"end":{"line":57,"column":20}},{"start":{"line":57,"column":24},"end":{"line":57,"column":52}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":3},"end":{"line":62,"column":3}},{"start":{"line":62,"column":3},"end":{"line":62,"column":3}}]},"7":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":26},"end":{"line":66,"column":32}},{"start":{"line":66,"column":35},"end":{"line":69,"column":5}}]},"8":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":3},"end":{"line":81,"column":3}},{"start":{"line":81,"column":3},"end":{"line":81,"column":3}}]},"9":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":3},"end":{"line":94,"column":3}},{"start":{"line":94,"column":3},"end":{"line":94,"column":3}}]},"10":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":26},"end":{"line":98,"column":32}},{"start":{"line":98,"column":35},"end":{"line":101,"column":5}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":3},"end":{"line":112,"column":3}},{"start":{"line":112,"column":3},"end":{"line":112,"column":3}}]},"12":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":3},"end":{"line":125,"column":3}},{"start":{"line":125,"column":3},"end":{"line":125,"column":3}}]},"13":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":10}},{"start":{"line":127,"column":10},"end":{"line":127,"column":10}}]},"14":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":10}},{"start":{"line":129,"column":10},"end":{"line":129,"column":10}}]},"15":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":3},"end":{"line":140,"column":3}},{"start":{"line":140,"column":3},"end":{"line":140,"column":3}}]},"16":{"line":163,"type":"cond-expr","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":80}},{"start":{"line":165,"column":6},"end":{"line":165,"column":10}}]},"17":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":3},"end":{"line":176,"column":3}},{"start":{"line":176,"column":3},"end":{"line":176,"column":3}}]},"18":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":3},"end":{"line":196,"column":3}},{"start":{"line":196,"column":3},"end":{"line":196,"column":3}}]},"19":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":10}},{"start":{"line":198,"column":10},"end":{"line":198,"column":10}}]},"20":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":10},"end":{"line":200,"column":10}},{"start":{"line":200,"column":10},"end":{"line":200,"column":10}}]},"21":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":3},"end":{"line":223,"column":3}},{"start":{"line":223,"column":3},"end":{"line":223,"column":3}}]},"22":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":3},"end":{"line":241,"column":3}},{"start":{"line":241,"column":3},"end":{"line":241,"column":3}}]},"23":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":3},"end":{"line":255,"column":3}},{"start":{"line":255,"column":3},"end":{"line":255,"column":3}}]},"24":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":14},"end":{"line":265,"column":21}},{"start":{"line":265,"column":25},"end":{"line":265,"column":49}}]},"25":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":3},"end":{"line":274,"column":3}},{"start":{"line":274,"column":3},"end":{"line":274,"column":3}}]},"26":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":3},"end":{"line":285,"column":3}},{"start":{"line":285,"column":3},"end":{"line":285,"column":3}}]},"27":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":3},"end":{"line":296,"column":3}},{"start":{"line":296,"column":3},"end":{"line":296,"column":3}}]},"28":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":3},"end":{"line":306,"column":3}},{"start":{"line":306,"column":3},"end":{"line":306,"column":3}}]},"29":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":3},"end":{"line":316,"column":3}},{"start":{"line":316,"column":3},"end":{"line":316,"column":3}}]},"30":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":3},"end":{"line":324,"column":3}},{"start":{"line":324,"column":3},"end":{"line":324,"column":3}}]},"31":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":3},"end":{"line":333,"column":3}},{"start":{"line":333,"column":3},"end":{"line":333,"column":3}}]},"32":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":3},"end":{"line":346,"column":3}},{"start":{"line":346,"column":3},"end":{"line":346,"column":3}}]},"33":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":3},"end":{"line":354,"column":3}},{"start":{"line":354,"column":3},"end":{"line":354,"column":3}}]},"34":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":3},"end":{"line":363,"column":3}},{"start":{"line":363,"column":3},"end":{"line":363,"column":3}}]}},"code":["'use strict';","const coreAssert = require('core-assert');","const deepEqual = require('lodash.isequal');","const observableToPromise = require('observable-to-promise');","const isObservable = require('is-observable');","const isPromise = require('is-promise');","const jestDiff = require('jest-diff');","const enhanceAssert = require('./enhance-assert');","const formatAssertError = require('./format-assert-error');","","class AssertionError extends Error {","\tconstructor(opts) {","\t\tsuper(opts.message || '');","\t\tthis.name = 'AssertionError';","","\t\tthis.assertion = opts.assertion;","\t\tthis.fixedSource = opts.fixedSource;","\t\tthis.improperUsage = opts.improperUsage || false;","\t\tthis.operator = opts.operator;","\t\tthis.values = opts.values || [];","","\t\t// Reserved for power-assert statements","\t\tthis.statements = [];","","\t\tif (opts.stack) {","\t\t\tthis.stack = opts.stack;","\t\t}","\t}","}","exports.AssertionError = AssertionError;","","function getStack() {","\tconst obj = {};","\tError.captureStackTrace(obj, getStack);","\treturn obj.stack;","}","","function wrapAssertions(callbacks) {","\tconst pass = callbacks.pass;","\tconst pending = callbacks.pending;","\tconst fail = callbacks.fail;","","\tconst noop = () => {};","\tconst makeNoop = () => noop;","\tconst makeRethrow = reason => () => {","\t\tthrow reason;","\t};","","\tconst assertions = {","\t\tpass() {","\t\t\tpass(this);","\t\t},","","\t\tfail(message) {","\t\t\tfail(this, new AssertionError({","\t\t\t\tassertion: 'fail',","\t\t\t\tmessage: message || 'Test failed via `t.fail()`'","\t\t\t}));","\t\t},","","\t\tis(actual, expected, message) {","\t\t\tif (actual === expected) {","\t\t\t\tpass(this);","\t\t\t} else {","\t\t\t\tconst diff = formatAssertError.formatDiff(actual, expected);","\t\t\t\tconst values = diff ? [diff] : [","\t\t\t\t\tformatAssertError.formatWithLabel('Actual:', actual),","\t\t\t\t\tformatAssertError.formatWithLabel('Must be strictly equal to:', expected)","\t\t\t\t];","","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'is',","\t\t\t\t\tmessage,","\t\t\t\t\toperator: '===',","\t\t\t\t\tvalues","\t\t\t\t}));","\t\t\t}","\t\t},","","\t\tnot(actual, expected, message) {","\t\t\tif (actual === expected) {","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'not',","\t\t\t\t\tmessage,","\t\t\t\t\toperator: '!==',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is strictly equal:', actual)]","\t\t\t\t}));","\t\t\t} else {","\t\t\t\tpass(this);","\t\t\t}","\t\t},","","\t\tdeepEqual(actual, expected, message) {","\t\t\tif (deepEqual(actual, expected)) {","\t\t\t\tpass(this);","\t\t\t} else {","\t\t\t\tconst diff = formatAssertError.formatDiff(actual, expected);","\t\t\t\tconst values = diff ? [diff] : [","\t\t\t\t\tformatAssertError.formatWithLabel('Actual:', actual),","\t\t\t\t\tformatAssertError.formatWithLabel('Must be deeply equal to:', expected)","\t\t\t\t];","","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'deepEqual',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues","\t\t\t\t}));","\t\t\t}","\t\t},","","\t\tnotDeepEqual(actual, expected, message) {","\t\t\tif (deepEqual(actual, expected)) {","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'notDeepEqual',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is deeply equal:', actual)]","\t\t\t\t}));","\t\t\t} else {","\t\t\t\tpass(this);","\t\t\t}","\t\t},","","\t\tthrows(fn, err, message) {","\t\t\tlet promise;","\t\t\tif (isPromise(fn)) {","\t\t\t\tpromise = fn;","\t\t\t} else if (isObservable(fn)) {","\t\t\t\tpromise = observableToPromise(fn);","\t\t\t} else if (typeof fn !== 'function') {","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'throws',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.throws()` must be called with a function, Promise, or Observable',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', fn)]","\t\t\t\t}));","\t\t\t\treturn;","\t\t\t}","","\t\t\tlet coreAssertThrowsErrorArg;","\t\t\tif (typeof err === 'string') {","\t\t\t\tconst expectedMessage = err;","\t\t\t\tcoreAssertThrowsErrorArg = error => error.message === expectedMessage;","\t\t\t} else {","\t\t\t\t// Assume it's a constructor function or regular expression","\t\t\t\tcoreAssertThrowsErrorArg = err;","\t\t\t}","","\t\t\tconst test = (fn, stack) => {","\t\t\t\tlet actual;","\t\t\t\tlet threw = false;","\t\t\t\ttry {","\t\t\t\t\tcoreAssert.throws(() => {","\t\t\t\t\t\ttry {","\t\t\t\t\t\t\tfn();","\t\t\t\t\t\t} catch (err) {","\t\t\t\t\t\t\tactual = err;","\t\t\t\t\t\t\tthrew = true;","\t\t\t\t\t\t\tthrow err;","\t\t\t\t\t\t}","\t\t\t\t\t}, coreAssertThrowsErrorArg);","\t\t\t\t\treturn actual;","\t\t\t\t} catch (err) {","\t\t\t\t\tconst values = threw ?","\t\t\t\t\t\t[formatAssertError.formatWithLabel('Threw unexpected exception:', actual)] :","\t\t\t\t\t\tnull;","","\t\t\t\t\tthrow new AssertionError({","\t\t\t\t\t\tassertion: 'throws',","\t\t\t\t\t\tmessage,","\t\t\t\t\t\tstack,","\t\t\t\t\t\tvalues","\t\t\t\t\t});","\t\t\t\t}","\t\t\t};","","\t\t\tif (promise) {","\t\t\t\t// Record stack before it gets lost in the promise chain.","\t\t\t\tconst stack = getStack();","\t\t\t\tconst intermediate = promise.then(makeNoop, makeRethrow).then(fn => test(fn, stack));","\t\t\t\tpending(this, intermediate);","\t\t\t\t// Don't reject the returned promise, even if the assertion fails.","\t\t\t\treturn intermediate.catch(noop);","\t\t\t}","","\t\t\ttry {","\t\t\t\tconst retval = test(fn);","\t\t\t\tpass(this);","\t\t\t\treturn retval;","\t\t\t} catch (err) {","\t\t\t\tfail(this, err);","\t\t\t}","\t\t},","","\t\tnotThrows(fn, message) {","\t\t\tlet promise;","\t\t\tif (isPromise(fn)) {","\t\t\t\tpromise = fn;","\t\t\t} else if (isObservable(fn)) {","\t\t\t\tpromise = observableToPromise(fn);","\t\t\t} else if (typeof fn !== 'function') {","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'notThrows',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.notThrows()` must be called with a function, Promise, or Observable',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', fn)]","\t\t\t\t}));","\t\t\t\treturn;","\t\t\t}","","\t\t\tconst test = (fn, stack) => {","\t\t\t\ttry {","\t\t\t\t\tcoreAssert.doesNotThrow(fn);","\t\t\t\t} catch (err) {","\t\t\t\t\tthrow new AssertionError({","\t\t\t\t\t\tassertion: 'notThrows',","\t\t\t\t\t\tmessage,","\t\t\t\t\t\tstack,","\t\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Threw:', err.actual)]","\t\t\t\t\t});","\t\t\t\t}","\t\t\t};","","\t\t\tif (promise) {","\t\t\t\t// Record stack before it gets lost in the promise chain.","\t\t\t\tconst stack = getStack();","\t\t\t\tconst intermediate = promise.then(noop, reason => test(makeRethrow(reason), stack));","\t\t\t\tpending(this, intermediate);","\t\t\t\t// Don't reject the returned promise, even if the assertion fails.","\t\t\t\treturn intermediate.catch(noop);","\t\t\t}","","\t\t\ttry {","\t\t\t\ttest(fn);","\t\t\t\tpass(this);","\t\t\t} catch (err) {","\t\t\t\tfail(this, err);","\t\t\t}","\t\t},","","\t\tifError(actual, message) {","\t\t\tif (actual) {","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'ifError',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Error:', actual)]","\t\t\t\t}));","\t\t\t} else {","\t\t\t\tpass(this);","\t\t\t}","\t\t},","","\t\tsnapshot(actual, message) {","\t\t\tconst state = this._test.getSnapshotState();","\t\t\tconst result = state.match(this.title, actual);","\t\t\tif (result.pass) {","\t\t\t\tpass(this);","\t\t\t} else {","\t\t\t\tconst diff = jestDiff(result.expected.trim(), result.actual.trim(), {expand: true})","\t\t\t\t\t// Remove annotation","\t\t\t\t\t.split('\\n')","\t\t\t\t\t.slice(3)","\t\t\t\t\t.join('\\n');","\t\t\t\tfail(this, new AssertionError({","\t\t\t\t\tassertion: 'snapshot',","\t\t\t\t\tmessage: message || 'Did not match snapshot',","\t\t\t\t\tvalues: [{label: 'Difference:', formatted: diff}]","\t\t\t\t}));","\t\t\t}","\t\t}","\t};","","\tconst enhancedAssertions = enhanceAssert(pass, fail, {","\t\ttruthy(actual, message) {","\t\t\tif (!actual) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'truthy',","\t\t\t\t\tmessage,","\t\t\t\t\toperator: '!!',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is not truthy:', actual)]","\t\t\t\t});","\t\t\t}","\t\t},","","\t\tfalsy(actual, message) {","\t\t\tif (actual) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'falsy',","\t\t\t\t\tmessage,","\t\t\t\t\toperator: '!',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is not falsy:', actual)]","\t\t\t\t});","\t\t\t}","\t\t},","","\t\ttrue(actual, message) {","\t\t\tif (actual !== true) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'true',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is not `true`:', actual)]","\t\t\t\t});","\t\t\t}","\t\t},","","\t\tfalse(actual, message) {","\t\t\tif (actual !== false) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'false',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Value is not `false`:', actual)]","\t\t\t\t});","\t\t\t}","\t\t},","","\t\tregex(string, regex, message) {","\t\t\tif (typeof string !== 'string') {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'regex',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.regex()` must be called with a string',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', string)]","\t\t\t\t});","\t\t\t}","\t\t\tif (!(regex instanceof RegExp)) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'regex',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.regex()` must be called with a regular expression',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', regex)]","\t\t\t\t});","\t\t\t}","","\t\t\tif (!regex.test(string)) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'regex',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [","\t\t\t\t\t\tformatAssertError.formatWithLabel('Value must match expression:', string),","\t\t\t\t\t\tformatAssertError.formatWithLabel('Regular expression:', regex)","\t\t\t\t\t]","\t\t\t\t});","\t\t\t}","\t\t},","","\t\tnotRegex(string, regex, message) {","\t\t\tif (typeof string !== 'string') {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'notRegex',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.notRegex()` must be called with a string',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', string)]","\t\t\t\t});","\t\t\t}","\t\t\tif (!(regex instanceof RegExp)) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'notRegex',","\t\t\t\t\timproperUsage: true,","\t\t\t\t\tmessage: '`t.notRegex()` must be called with a regular expression',","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Called with:', regex)]","\t\t\t\t});","\t\t\t}","","\t\t\tif (regex.test(string)) {","\t\t\t\tthrow new AssertionError({","\t\t\t\t\tassertion: 'notRegex',","\t\t\t\t\tmessage,","\t\t\t\t\tvalues: [","\t\t\t\t\t\tformatAssertError.formatWithLabel('Value must not match expression:', string),","\t\t\t\t\t\tformatAssertError.formatWithLabel('Regular expression:', regex)","\t\t\t\t\t]","\t\t\t\t});","\t\t\t}","\t\t}","\t});","","\treturn Object.assign(assertions, enhancedAssertions);","}","exports.wrapAssertions = wrapAssertions;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"13":0,"14":0,"16":0,"17":0,"18":0,"19":0,"20":0,"23":0,"25":0,"26":0,"30":1,"32":1,"33":0,"34":0,"35":0,"38":1,"39":1,"40":1,"41":1,"43":1,"44":1,"45":1,"46":0,"49":1,"51":0,"55":0,"62":0,"63":0,"65":0,"66":0,"71":0,"81":0,"82":0,"89":0,"94":0,"95":0,"97":0,"98":0,"103":0,"112":0,"113":0,"119":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"136":0,"139":0,"140":0,"141":0,"142":0,"145":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"161":0,"163":0,"167":0,"176":0,"178":0,"179":0,"180":0,"182":0,"185":0,"186":0,"187":0,"188":0,"190":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"207":0,"210":0,"211":0,"212":0,"214":0,"223":0,"225":0,"226":0,"227":0,"229":0,"232":0,"233":0,"234":0,"236":0,"241":0,"242":0,"248":0,"253":0,"254":0,"255":0,"256":0,"258":0,"263":0,"272":1,"274":0,"275":0,"285":0,"286":0,"296":0,"297":0,"306":0,"307":0,"316":0,"317":0,"324":0,"325":0,"333":0,"334":0,"346":0,"347":0,"354":0,"355":0,"363":0,"364":0,"376":1,"378":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/enhance-assert.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/enhance-assert.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[0,0,0,0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":49,"loc":{"start":{"line":49,"column":9},"end":{"line":49,"column":17}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":11},"end":{"line":56,"column":14}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":65}},"3":{"start":{"line":8,"column":0},"end":{"line":15,"column":2}},"4":{"start":{"line":17,"column":0},"end":{"line":21,"column":2}},"5":{"start":{"line":18,"column":1},"end":{"line":20,"column":31}},"6":{"start":{"line":23,"column":0},"end":{"line":28,"column":2}},"7":{"start":{"line":24,"column":1},"end":{"line":27,"column":12}},"8":{"start":{"line":25,"column":19},"end":{"line":25,"column":51}},"9":{"start":{"line":26,"column":16},"end":{"line":26,"column":74}},"10":{"start":{"line":30,"column":0},"end":{"line":30,"column":74}},"11":{"start":{"line":30,"column":31},"end":{"line":30,"column":73}},"12":{"start":{"line":32,"column":0},"end":{"line":43,"column":2}},"13":{"start":{"line":33,"column":1},"end":{"line":33,"column":44}},"14":{"start":{"line":34,"column":1},"end":{"line":34,"column":50}},"15":{"start":{"line":35,"column":1},"end":{"line":35,"column":37}},"16":{"start":{"line":37,"column":1},"end":{"line":42,"column":13}},"17":{"start":{"line":39,"column":3},"end":{"line":39,"column":48}},"18":{"start":{"line":40,"column":3},"end":{"line":40,"column":83}},"19":{"start":{"line":45,"column":0},"end":{"line":62,"column":2}},"20":{"start":{"line":46,"column":1},"end":{"line":46,"column":41}},"21":{"start":{"line":47,"column":1},"end":{"line":61,"column":4}},"22":{"start":{"line":50,"column":3},"end":{"line":50,"column":29}},"23":{"start":{"line":51,"column":3},"end":{"line":53,"column":4}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":59}},"25":{"start":{"line":54,"column":3},"end":{"line":54,"column":21}},"26":{"start":{"line":57,"column":3},"end":{"line":57,"column":14}},"27":{"start":{"line":63,"column":0},"end":{"line":63,"column":31}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":9},"end":{"line":18,"column":22}},{"start":{"line":18,"column":26},"end":{"line":18,"column":39}},{"start":{"line":19,"column":3},"end":{"line":19,"column":14}},{"start":{"line":19,"column":18},"end":{"line":19,"column":29}},{"start":{"line":20,"column":3},"end":{"line":20,"column":14}},{"start":{"line":20,"column":18},"end":{"line":20,"column":29}}]},"2":{"line":26,"type":"cond-expr","locations":[{"start":{"line":26,"column":44},"end":{"line":26,"column":60}},{"start":{"line":26,"column":63},"end":{"line":26,"column":74}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":3},"end":{"line":51,"column":3}},{"start":{"line":51,"column":3},"end":{"line":51,"column":3}}]}},"code":["'use strict';","const dotProp = require('dot-prop');","const formatValue = require('./format-assert-error').formatValue;","","// When adding patterns, don't forget to add to","// https://github.com/avajs/babel-preset-transform-test-files/blob/master/espower-patterns.json","// Then release a new version of that preset and bump the SemVer range here.","const PATTERNS = [","\t't.truthy(value, [message])',","\t't.falsy(value, [message])',","\t't.true(value, [message])',","\t't.false(value, [message])',","\t't.regex(contents, regex, [message])',","\t't.notRegex(contents, regex, [message])'","];","","const isRangeMatch = (a, b) => {","\treturn (a[0] === b[0] && a[1] === b[1]) ||","\t\t(a[0] > b[0] && a[0] < b[1]) ||","\t\t(a[1] > b[0] && a[1] < b[1]);","};","","const computeStatement = (tokens, range) => {","\treturn tokens","\t\t.filter(token => isRangeMatch(token.range, range))","\t\t.map(token => token.value === undefined ? token.type.label : token.value)","\t\t.join('');","};","","const getNode = (ast, path) => dotProp.get(ast, path.replace(/\\//g, '.'));","","const formatter = context => {","\tconst ast = JSON.parse(context.source.ast);","\tconst tokens = JSON.parse(context.source.tokens);","\tconst args = context.args[0].events;","","\treturn args","\t\t.map(arg => {","\t\t\tconst range = getNode(ast, arg.espath).range;","\t\t\treturn [computeStatement(tokens, range), formatValue(arg.value, {maxDepth: 1})];","\t\t})","\t\t.reverse();","};","","const enhanceAssert = (pass, fail, assertions) => {","\tconst empower = require('empower-core');","\treturn empower(assertions, {","\t\tdestructive: true,","\t\tonError(event) {","\t\t\tconst error = event.error;","\t\t\tif (event.powerAssertContext) { // Context may be missing in internal tests.","\t\t\t\terror.statements = formatter(event.powerAssertContext);","\t\t\t}","\t\t\tfail(this, error);","\t\t},","\t\tonSuccess() {","\t\t\tpass(this);","\t\t},","\t\tpatterns: PATTERNS,","\t\tbindReceiver: false","\t});","};","module.exports = enhanceAssert;",""],"l":{"2":1,"3":1,"8":1,"17":1,"18":0,"23":1,"24":0,"25":0,"26":0,"30":1,"32":1,"33":0,"34":0,"35":0,"37":0,"39":0,"40":0,"45":1,"46":1,"47":1,"50":0,"51":0,"52":0,"54":0,"57":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/beautify-stack.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/beautify-stack.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[1,0],"2":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":63}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":120}},"7":{"start":{"line":12,"column":0},"end":{"line":16,"column":1}},"8":{"start":{"line":13,"column":1},"end":{"line":13,"column":47}},"9":{"start":{"line":14,"column":1},"end":{"line":14,"column":37}},"10":{"start":{"line":15,"column":1},"end":{"line":15,"column":40}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":65}},"12":{"start":{"line":20,"column":0},"end":{"line":37,"column":2}},"13":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"14":{"start":{"line":22,"column":2},"end":{"line":22,"column":12}},"15":{"start":{"line":27,"column":1},"end":{"line":27,"column":27}},"16":{"start":{"line":29,"column":1},"end":{"line":29,"column":36}},"17":{"start":{"line":30,"column":1},"end":{"line":34,"column":14}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":22}},"19":{"start":{"line":36,"column":1},"end":{"line":36,"column":29}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":0},"end":{"line":12,"column":0}},{"start":{"line":12,"column":0},"end":{"line":12,"column":0}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]}},"code":["'use strict';","const StackUtils = require('stack-utils');","const cleanStack = require('clean-stack');","const debug = require('debug')('ava');","","// Ignore unimportant stack trace lines","let ignoreStackLines = [];","","const avaInternals = /\\/ava\\/(?:lib\\/)?[\\w-]+\\.js:\\d+:\\d+\\)?$/;","const avaDependencies = /\\/node_modules\\/(?:bluebird|empower-core|(?:ava\\/node_modules\\/)?(?:babel-runtime|core-js))\\//;","","if (!debug.enabled) {","\tignoreStackLines = StackUtils.nodeInternals();","\tignoreStackLines.push(avaInternals);","\tignoreStackLines.push(avaDependencies);","}","","const stackUtils = new StackUtils({internals: ignoreStackLines});","","module.exports = stack => {","\tif (!stack) {","\t\treturn '';","\t}","","\t// Workaround for https://github.com/tapjs/stack-utils/issues/14","\t// TODO: fix it in `stack-utils`","\tstack = cleanStack(stack);","","\tconst title = stack.split('\\n')[0];","\tconst lines = stackUtils","\t\t.clean(stack)","\t\t.split('\\n')","\t\t.map(x => `    ${x}`)","\t\t.join('\\n');","","\treturn `${title}\\n${lines}`;","};",""],"l":{"2":1,"3":1,"4":1,"7":1,"9":1,"10":1,"12":1,"13":1,"14":1,"15":1,"18":1,"20":1,"21":0,"22":0,"27":0,"29":0,"30":0,"33":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/concurrent.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/concurrent.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":30}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":7}}}},"statementMap":{"1":{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},"2":{"start":{"line":6,"column":3},"end":{"line":6,"column":57}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":29}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":28}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":23}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":20}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":21}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":25}},"10":{"start":{"line":20,"column":2},"end":{"line":38,"column":4}},"11":{"start":{"line":21,"column":3},"end":{"line":26,"column":4}},"12":{"start":{"line":22,"column":4},"end":{"line":25,"column":7}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":28}},"14":{"start":{"line":24,"column":5},"end":{"line":24,"column":30}},"15":{"start":{"line":28,"column":3},"end":{"line":37,"column":22}},"16":{"start":{"line":29,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":30,"column":5},"end":{"line":30,"column":23}},"18":{"start":{"line":32,"column":5},"end":{"line":35,"column":6}},"19":{"start":{"line":34,"column":6},"end":{"line":34,"column":23}},"20":{"start":{"line":40,"column":2},"end":{"line":53,"column":3}},"21":{"start":{"line":41,"column":3},"end":{"line":41,"column":42}},"22":{"start":{"line":43,"column":3},"end":{"line":52,"column":4}},"23":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"24":{"start":{"line":46,"column":5},"end":{"line":46,"column":18}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":22}},"26":{"start":{"line":50,"column":10},"end":{"line":52,"column":4}},"27":{"start":{"line":51,"column":4},"end":{"line":51,"column":35}},"28":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"29":{"start":{"line":56,"column":3},"end":{"line":56,"column":49}},"30":{"start":{"line":57,"column":3},"end":{"line":57,"column":40}},"31":{"start":{"line":57,"column":29},"end":{"line":57,"column":38}},"32":{"start":{"line":60,"column":2},"end":{"line":60,"column":19}},"33":{"start":{"line":64,"column":0},"end":{"line":64,"column":28}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":5,"column":2}},{"start":{"line":5,"column":2},"end":{"line":5,"column":2}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":18}},{"start":{"line":10,"column":22},"end":{"line":10,"column":27}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":3},"end":{"line":21,"column":3}},{"start":{"line":21,"column":3},"end":{"line":21,"column":3}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":5},"end":{"line":32,"column":5}},{"start":{"line":32,"column":5},"end":{"line":32,"column":5}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":3},"end":{"line":43,"column":3}},{"start":{"line":43,"column":3},"end":{"line":43,"column":3}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":10},"end":{"line":50,"column":10}},{"start":{"line":50,"column":10},"end":{"line":50,"column":10}}]},"9":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]}},"code":["'use strict';","","class Concurrent {","\tconstructor(runnables, bail) {","\t\tif (!Array.isArray(runnables)) {","\t\t\tthrow new TypeError('Expected an array of runnables');","\t\t}","","\t\tthis.runnables = runnables;","\t\tthis.bail = bail || false;","\t}","","\trun() {","\t\tlet allPassed = true;","","\t\tlet pending;","\t\tlet rejectPending;","\t\tlet resolvePending;","\t\tconst allPromises = [];","\t\tconst handlePromise = promise => {","\t\t\tif (!pending) {","\t\t\t\tpending = new Promise((resolve, reject) => {","\t\t\t\t\trejectPending = reject;","\t\t\t\t\tresolvePending = resolve;","\t\t\t\t});","\t\t\t}","","\t\t\tallPromises.push(promise.then(passed => {","\t\t\t\tif (!passed) {","\t\t\t\t\tallPassed = false;","","\t\t\t\t\tif (this.bail) {","\t\t\t\t\t\t// Stop if the test failed and bail mode is on.","\t\t\t\t\t\tresolvePending();","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}, rejectPending));","\t\t};","","\t\tfor (const runnable of this.runnables) {","\t\t\tconst passedOrPromise = runnable.run();","","\t\t\tif (!passedOrPromise) {","\t\t\t\tif (this.bail) {","\t\t\t\t\t// Stop if the test failed and bail mode is on.","\t\t\t\t\treturn false;","\t\t\t\t}","","\t\t\t\tallPassed = false;","\t\t\t} else if (passedOrPromise !== true) {","\t\t\t\thandlePromise(passedOrPromise);","\t\t\t}","\t\t}","","\t\tif (pending) {","\t\t\tPromise.all(allPromises).then(resolvePending);","\t\t\treturn pending.then(() => allPassed);","\t\t}","","\t\treturn allPassed;","\t}","}","","module.exports = Concurrent;",""],"l":{"5":0,"6":0,"9":0,"10":0,"14":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"28":0,"29":0,"30":0,"32":0,"34":0,"40":0,"41":0,"43":0,"44":0,"46":0,"49":0,"50":0,"51":0,"55":0,"56":0,"57":0,"60":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/runner.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/runner.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"wrapFunction","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":32}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":21}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":22}}},"4":{"name":"(anonymous_4)","line":104,"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":36}}},"5":{"name":"(anonymous_5)","line":129,"loc":{"start":{"line":129,"column":14},"end":{"line":129,"column":23}}},"6":{"name":"(anonymous_6)","line":145,"loc":{"start":{"line":145,"column":11},"end":{"line":145,"column":14}}},"7":{"name":"(anonymous_7)","line":182,"loc":{"start":{"line":182,"column":17},"end":{"line":182,"column":20}}},"8":{"name":"(anonymous_8)","line":199,"loc":{"start":{"line":199,"column":18},"end":{"line":199,"column":21}}},"9":{"name":"(anonymous_9)","line":205,"loc":{"start":{"line":205,"column":4},"end":{"line":205,"column":14}}},"10":{"name":"(anonymous_10)","line":216,"loc":{"start":{"line":216,"column":21},"end":{"line":216,"column":27}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"9":{"start":{"line":11,"column":0},"end":{"line":36,"column":2}},"10":{"start":{"line":38,"column":0},"end":{"line":42,"column":1}},"11":{"start":{"line":39,"column":1},"end":{"line":41,"column":3}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":42}},"13":{"start":{"line":46,"column":2},"end":{"line":46,"column":10}},"14":{"start":{"line":48,"column":2},"end":{"line":48,"column":26}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":27}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":35}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":31}},"18":{"start":{"line":53,"column":2},"end":{"line":53,"column":49}},"19":{"start":{"line":55,"column":2},"end":{"line":55,"column":26}},"20":{"start":{"line":56,"column":2},"end":{"line":56,"column":20}},"21":{"start":{"line":57,"column":2},"end":{"line":57,"column":28}},"22":{"start":{"line":58,"column":2},"end":{"line":62,"column":5}},"23":{"start":{"line":61,"column":27},"end":{"line":61,"column":50}},"24":{"start":{"line":64,"column":2},"end":{"line":101,"column":5}},"25":{"start":{"line":65,"column":3},"end":{"line":65,"column":13}},"26":{"start":{"line":66,"column":3},"end":{"line":66,"column":10}},"27":{"start":{"line":67,"column":3},"end":{"line":67,"column":21}},"28":{"start":{"line":69,"column":3},"end":{"line":72,"column":4}},"29":{"start":{"line":70,"column":4},"end":{"line":71,"column":68}},"30":{"start":{"line":74,"column":3},"end":{"line":82,"column":4}},"31":{"start":{"line":75,"column":4},"end":{"line":75,"column":20}},"32":{"start":{"line":76,"column":4},"end":{"line":76,"column":17}},"33":{"start":{"line":77,"column":4},"end":{"line":77,"column":22}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"35":{"start":{"line":80,"column":4},"end":{"line":80,"column":17}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":22}},"37":{"start":{"line":84,"column":3},"end":{"line":86,"column":4}},"38":{"start":{"line":85,"column":4},"end":{"line":85,"column":23}},"39":{"start":{"line":88,"column":3},"end":{"line":92,"column":4}},"40":{"start":{"line":89,"column":4},"end":{"line":89,"column":37}},"41":{"start":{"line":91,"column":4},"end":{"line":91,"column":16}},"42":{"start":{"line":94,"column":3},"end":{"line":100,"column":4}},"43":{"start":{"line":95,"column":4},"end":{"line":97,"column":7}},"44":{"start":{"line":96,"column":5},"end":{"line":96,"column":41}},"45":{"start":{"line":99,"column":4},"end":{"line":99,"column":40}},"46":{"start":{"line":105,"column":2},"end":{"line":111,"column":3}},"47":{"start":{"line":106,"column":3},"end":{"line":108,"column":4}},"48":{"start":{"line":107,"column":4},"end":{"line":107,"column":59}},"49":{"start":{"line":110,"column":3},"end":{"line":110,"column":31}},"50":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"51":{"start":{"line":114,"column":3},"end":{"line":114,"column":84}},"52":{"start":{"line":117,"column":2},"end":{"line":117,"column":60}},"53":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"54":{"start":{"line":119,"column":3},"end":{"line":119,"column":40}},"55":{"start":{"line":122,"column":2},"end":{"line":126,"column":5}},"56":{"start":{"line":130,"column":2},"end":{"line":130,"column":29}},"57":{"start":{"line":131,"column":2},"end":{"line":139,"column":4}},"58":{"start":{"line":141,"column":2},"end":{"line":141,"column":28}},"59":{"start":{"line":142,"column":2},"end":{"line":142,"column":27}},"60":{"start":{"line":146,"column":2},"end":{"line":153,"column":4}},"61":{"start":{"line":155,"column":2},"end":{"line":177,"column":3}},"62":{"start":{"line":156,"column":3},"end":{"line":159,"column":4}},"63":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"64":{"start":{"line":161,"column":3},"end":{"line":161,"column":43}},"65":{"start":{"line":162,"column":3},"end":{"line":176,"column":4}},"66":{"start":{"line":163,"column":4},"end":{"line":163,"column":22}},"67":{"start":{"line":165,"column":4},"end":{"line":175,"column":5}},"68":{"start":{"line":166,"column":5},"end":{"line":166,"column":23}},"69":{"start":{"line":167,"column":11},"end":{"line":175,"column":5}},"70":{"start":{"line":168,"column":5},"end":{"line":168,"column":23}},"71":{"start":{"line":169,"column":11},"end":{"line":175,"column":5}},"72":{"start":{"line":170,"column":5},"end":{"line":174,"column":6}},"73":{"start":{"line":171,"column":6},"end":{"line":171,"column":32}},"74":{"start":{"line":173,"column":6},"end":{"line":173,"column":24}},"75":{"start":{"line":179,"column":2},"end":{"line":179,"column":15}},"76":{"start":{"line":183,"column":2},"end":{"line":185,"column":3}},"77":{"start":{"line":184,"column":3},"end":{"line":184,"column":29}},"78":{"start":{"line":187,"column":2},"end":{"line":187,"column":50}},"79":{"start":{"line":188,"column":2},"end":{"line":188,"column":38}},"80":{"start":{"line":190,"column":2},"end":{"line":190,"column":61}},"81":{"start":{"line":191,"column":2},"end":{"line":191,"column":29}},"82":{"start":{"line":192,"column":2},"end":{"line":192,"column":38}},"83":{"start":{"line":194,"column":2},"end":{"line":194,"column":85}},"84":{"start":{"line":195,"column":2},"end":{"line":195,"column":29}},"85":{"start":{"line":196,"column":2},"end":{"line":196,"column":15}},"86":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"87":{"start":{"line":201,"column":3},"end":{"line":201,"column":49}},"88":{"start":{"line":206,"column":2},"end":{"line":208,"column":3}},"89":{"start":{"line":207,"column":3},"end":{"line":207,"column":32}},"90":{"start":{"line":210,"column":2},"end":{"line":210,"column":25}},"91":{"start":{"line":211,"column":2},"end":{"line":213,"column":5}},"92":{"start":{"line":212,"column":3},"end":{"line":212,"column":30}},"93":{"start":{"line":214,"column":2},"end":{"line":214,"column":54}},"94":{"start":{"line":214,"column":28},"end":{"line":214,"column":52}},"95":{"start":{"line":217,"column":2},"end":{"line":217,"column":46}},"96":{"start":{"line":221,"column":0},"end":{"line":221,"column":24}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":19}},{"start":{"line":48,"column":23},"end":{"line":48,"column":25}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":15},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":34}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":3},"end":{"line":69,"column":3}},{"start":{"line":69,"column":3},"end":{"line":69,"column":3}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":3},"end":{"line":74,"column":3}},{"start":{"line":74,"column":3},"end":{"line":74,"column":3}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":3},"end":{"line":84,"column":3}},{"start":{"line":84,"column":3},"end":{"line":84,"column":3}}]},"6":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":3},"end":{"line":88,"column":3}},{"start":{"line":88,"column":3},"end":{"line":88,"column":3}}]},"7":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":3},"end":{"line":94,"column":3}},{"start":{"line":94,"column":3},"end":{"line":94,"column":3}}]},"8":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"9":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":3},"end":{"line":106,"column":3}},{"start":{"line":106,"column":3},"end":{"line":106,"column":3}}]},"10":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":32},"end":{"line":107,"column":37}},{"start":{"line":107,"column":41},"end":{"line":107,"column":43}}]},"11":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"12":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":30}},{"start":{"line":113,"column":34},"end":{"line":113,"column":55}}]},"13":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":38}},{"start":{"line":114,"column":42},"end":{"line":114,"column":83}}]},"14":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"15":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":3},"end":{"line":156,"column":3}},{"start":{"line":156,"column":3},"end":{"line":156,"column":3}}]},"16":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":3},"end":{"line":162,"column":3}},{"start":{"line":162,"column":3},"end":{"line":162,"column":3}}]},"17":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":165,"column":4}},{"start":{"line":165,"column":4},"end":{"line":165,"column":4}}]},"18":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":11},"end":{"line":167,"column":11}},{"start":{"line":167,"column":11},"end":{"line":167,"column":11}}]},"19":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":11},"end":{"line":169,"column":11}},{"start":{"line":169,"column":11},"end":{"line":169,"column":11}}]},"20":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":5},"end":{"line":170,"column":5}},{"start":{"line":170,"column":5},"end":{"line":170,"column":5}}]},"21":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"22":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"23":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"24":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":6},"end":{"line":206,"column":30}},{"start":{"line":206,"column":34},"end":{"line":206,"column":58}}]}},"code":["'use strict';","const EventEmitter = require('events');","const path = require('path');","const Bluebird = require('bluebird');","const jestSnapshot = require('jest-snapshot');","const optionChain = require('option-chain');","const matcher = require('matcher');","const TestCollection = require('./test-collection');","const validateTest = require('./validate-test');","","const chainableMethods = {","\tdefaults: {","\t\ttype: 'test',","\t\tserial: false,","\t\texclusive: false,","\t\tskipped: false,","\t\ttodo: false,","\t\tfailing: false,","\t\tcallback: false,","\t\talways: false","\t},","\tchainableMethods: {","\t\ttest: {},","\t\tserial: {serial: true},","\t\tbefore: {type: 'before'},","\t\tafter: {type: 'after'},","\t\tskip: {skipped: true},","\t\ttodo: {todo: true},","\t\tfailing: {failing: true},","\t\tonly: {exclusive: true},","\t\tbeforeEach: {type: 'beforeEach'},","\t\tafterEach: {type: 'afterEach'},","\t\tcb: {callback: true},","\t\talways: {always: true}","\t}","};","","function wrapFunction(fn, args) {","\treturn function (t) {","\t\treturn fn.apply(this, [t].concat(args));","\t};","}","","class Runner extends EventEmitter {","\tconstructor(options) {","\t\tsuper();","","\t\toptions = options || {};","","\t\tthis.file = options.file;","\t\tthis.match = options.match || [];","\t\tthis.serial = options.serial;","\t\tthis.updateSnapshots = options.updateSnapshots;","","\t\tthis.hasStarted = false;","\t\tthis.results = [];","\t\tthis.snapshotState = null;","\t\tthis.tests = new TestCollection({","\t\t\tbail: options.bail,","\t\t\tfailWithoutAssertions: options.failWithoutAssertions,","\t\t\tgetSnapshotState: () => this.getSnapshotState()","\t\t});","","\t\tthis.chain = optionChain(chainableMethods, (opts, args) => {","\t\t\tlet title;","\t\t\tlet fn;","\t\t\tlet macroArgIndex;","","\t\t\tif (this.hasStarted) {","\t\t\t\tthrow new Error('All tests and hooks must be declared synchronously in your ' +","\t\t\t\t'test file, and cannot be nested within other tests or hooks.');","\t\t\t}","","\t\t\tif (typeof args[0] === 'string') {","\t\t\t\ttitle = args[0];","\t\t\t\tfn = args[1];","\t\t\t\tmacroArgIndex = 2;","\t\t\t} else {","\t\t\t\tfn = args[0];","\t\t\t\ttitle = null;","\t\t\t\tmacroArgIndex = 1;","\t\t\t}","","\t\t\tif (this.serial) {","\t\t\t\topts.serial = true;","\t\t\t}","","\t\t\tif (args.length > macroArgIndex) {","\t\t\t\targs = args.slice(macroArgIndex);","\t\t\t} else {","\t\t\t\targs = null;","\t\t\t}","","\t\t\tif (Array.isArray(fn)) {","\t\t\t\tfn.forEach(fn => {","\t\t\t\t\tthis.addTest(title, opts, fn, args);","\t\t\t\t});","\t\t\t} else {","\t\t\t\tthis.addTest(title, opts, fn, args);","\t\t\t}","\t\t});","\t}","","\taddTest(title, metadata, fn, args) {","\t\tif (args) {","\t\t\tif (fn.title) {","\t\t\t\ttitle = fn.title.apply(fn, [title || ''].concat(args));","\t\t\t}","","\t\t\tfn = wrapFunction(fn, args);","\t\t}","","\t\tif (metadata.type === 'test' && this.match.length > 0) {","\t\t\tmetadata.exclusive = title !== null && matcher([title], this.match).length === 1;","\t\t}","","\t\tconst validationError = validateTest(title, fn, metadata);","\t\tif (validationError !== null) {","\t\t\tthrow new TypeError(validationError);","\t\t}","","\t\tthis.tests.add({","\t\t\tmetadata,","\t\t\tfn,","\t\t\ttitle","\t\t});","\t}","","\taddTestResult(result) {","\t\tconst test = result.result;","\t\tconst props = {","\t\t\tduration: test.duration,","\t\t\ttitle: test.title,","\t\t\terror: result.reason,","\t\t\ttype: test.metadata.type,","\t\t\tskip: test.metadata.skipped,","\t\t\ttodo: test.metadata.todo,","\t\t\tfailing: test.metadata.failing","\t\t};","","\t\tthis.results.push(result);","\t\tthis.emit('test', props);","\t}","","\tbuildStats() {","\t\tconst stats = {","\t\t\tfailCount: 0,","\t\t\tknownFailureCount: 0,","\t\t\tpassCount: 0,","\t\t\tskipCount: 0,","\t\t\ttestCount: 0,","\t\t\ttodoCount: 0","\t\t};","","\t\tfor (const result of this.results) {","\t\t\tif (!result.passed) {","\t\t\t\t// Includes hooks","\t\t\t\tstats.failCount++;","\t\t\t}","","\t\t\tconst metadata = result.result.metadata;","\t\t\tif (metadata.type === 'test') {","\t\t\t\tstats.testCount++;","","\t\t\t\tif (metadata.skipped) {","\t\t\t\t\tstats.skipCount++;","\t\t\t\t} else if (metadata.todo) {","\t\t\t\t\tstats.todoCount++;","\t\t\t\t} else if (result.passed) {","\t\t\t\t\tif (metadata.failing) {","\t\t\t\t\t\tstats.knownFailureCount++;","\t\t\t\t\t} else {","\t\t\t\t\t\tstats.passCount++;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn stats;","\t}","","\tgetSnapshotState() {","\t\tif (this.snapshotState) {","\t\t\treturn this.snapshotState;","\t\t}","","\t\tconst name = path.basename(this.file) + '.snap';","\t\tconst dir = path.dirname(this.file);","","\t\tconst snapshotPath = path.join(dir, '__snapshots__', name);","\t\tconst testPath = this.file;","\t\tconst update = this.updateSnapshots;","","\t\tconst state = jestSnapshot.initializeSnapshotState(testPath, update, snapshotPath);","\t\tthis.snapshotState = state;","\t\treturn state;","\t}","","\tsaveSnapshotState() {","\t\tif (this.snapshotState) {","\t\t\tthis.snapshotState.save(this.updateSnapshots);","\t\t}","\t}","","\trun(options) {","\t\tif (options.runOnlyExclusive && !this.tests.hasExclusive) {","\t\t\treturn Promise.resolve(null);","\t\t}","","\t\tthis.hasStarted = true;","\t\tthis.tests.on('test', result => {","\t\t\tthis.addTestResult(result);","\t\t});","\t\treturn Bluebird.try(() => this.tests.build().run());","\t}","\tattributeLeakedError(err) {","\t\treturn this.tests.attributeLeakedError(err);","\t}","}","","module.exports = Runner;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"38":1,"39":0,"40":0,"46":0,"48":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"61":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"74":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"84":0,"85":0,"88":0,"89":0,"91":0,"94":0,"95":0,"96":0,"99":0,"105":0,"106":0,"107":0,"110":0,"113":0,"114":0,"117":0,"118":0,"119":0,"122":0,"130":0,"131":0,"141":0,"142":0,"146":0,"155":0,"156":0,"158":0,"161":0,"162":0,"163":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"173":0,"179":0,"183":0,"184":0,"187":0,"188":0,"190":0,"191":0,"192":0,"194":0,"195":0,"196":0,"200":0,"201":0,"206":0,"207":0,"210":0,"211":0,"212":0,"214":0,"217":0,"221":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test-collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test-collection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":22}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":11}}},"3":{"name":"(anonymous_3)","line":94,"loc":{"start":{"line":94,"column":13},"end":{"line":94,"column":20}}},"4":{"name":"(anonymous_4)","line":106,"loc":{"start":{"line":106,"column":16},"end":{"line":106,"column":25}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":40}}},"6":{"name":"(anonymous_6)","line":121,"loc":{"start":{"line":121,"column":11},"end":{"line":121,"column":41}}},"7":{"name":"(anonymous_7)","line":144,"loc":{"start":{"line":144,"column":11},"end":{"line":144,"column":30}}},"8":{"name":"(anonymous_8)","line":161,"loc":{"start":{"line":161,"column":20},"end":{"line":161,"column":27}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":178,"column":12},"end":{"line":178,"column":20}}},"10":{"name":"(anonymous_10)","line":181,"loc":{"start":{"line":181,"column":6},"end":{"line":181,"column":9}}},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":27}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":10}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":27}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":61}},"9":{"start":{"line":14,"column":2},"end":{"line":14,"column":51}},"10":{"start":{"line":15,"column":2},"end":{"line":15,"column":28}},"11":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"12":{"start":{"line":18,"column":2},"end":{"line":21,"column":4}},"13":{"start":{"line":23,"column":2},"end":{"line":30,"column":4}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":40}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":57}},"16":{"start":{"line":37,"column":2},"end":{"line":37,"column":33}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":29}},"18":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"19":{"start":{"line":41,"column":3},"end":{"line":41,"column":50}},"20":{"start":{"line":44,"column":2},"end":{"line":46,"column":3}},"21":{"start":{"line":45,"column":3},"end":{"line":45,"column":32}},"22":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"23":{"start":{"line":50,"column":3},"end":{"line":50,"column":21}},"24":{"start":{"line":53,"column":2},"end":{"line":59,"column":3}},"25":{"start":{"line":54,"column":3},"end":{"line":58,"column":4}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":22}},"28":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"29":{"start":{"line":62,"column":3},"end":{"line":62,"column":79}},"30":{"start":{"line":66,"column":2},"end":{"line":73,"column":3}},"31":{"start":{"line":67,"column":3},"end":{"line":69,"column":4}},"32":{"start":{"line":68,"column":4},"end":{"line":68,"column":65}},"33":{"start":{"line":71,"column":3},"end":{"line":71,"column":67}},"34":{"start":{"line":72,"column":3},"end":{"line":72,"column":10}},"35":{"start":{"line":75,"column":2},"end":{"line":75,"column":19}},"36":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"37":{"start":{"line":79,"column":3},"end":{"line":79,"column":10}},"38":{"start":{"line":82,"column":2},"end":{"line":86,"column":3}},"39":{"start":{"line":83,"column":3},"end":{"line":83,"column":30}},"40":{"start":{"line":84,"column":3},"end":{"line":84,"column":26}},"41":{"start":{"line":85,"column":3},"end":{"line":85,"column":28}},"42":{"start":{"line":88,"column":2},"end":{"line":92,"column":3}},"43":{"start":{"line":89,"column":3},"end":{"line":89,"column":32}},"44":{"start":{"line":91,"column":3},"end":{"line":91,"column":36}},"45":{"start":{"line":95,"column":2},"end":{"line":104,"column":4}},"46":{"start":{"line":97,"column":4},"end":{"line":100,"column":7}},"47":{"start":{"line":102,"column":4},"end":{"line":102,"column":16}},"48":{"start":{"line":107,"column":2},"end":{"line":107,"column":50}},"49":{"start":{"line":108,"column":2},"end":{"line":108,"column":28}},"50":{"start":{"line":111,"column":2},"end":{"line":119,"column":5}},"51":{"start":{"line":112,"column":3},"end":{"line":112,"column":58}},"52":{"start":{"line":114,"column":3},"end":{"line":116,"column":4}},"53":{"start":{"line":115,"column":4},"end":{"line":115,"column":35}},"54":{"start":{"line":118,"column":3},"end":{"line":118,"column":15}},"55":{"start":{"line":122,"column":2},"end":{"line":122,"column":25}},"56":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"57":{"start":{"line":125,"column":3},"end":{"line":125,"column":32}},"58":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"59":{"start":{"line":129,"column":3},"end":{"line":129,"column":21}},"60":{"start":{"line":132,"column":2},"end":{"line":140,"column":5}},"61":{"start":{"line":141,"column":2},"end":{"line":141,"column":38}},"62":{"start":{"line":142,"column":2},"end":{"line":142,"column":14}},"63":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"64":{"start":{"line":146,"column":3},"end":{"line":146,"column":21}},"65":{"start":{"line":149,"column":2},"end":{"line":157,"column":5}},"66":{"start":{"line":158,"column":2},"end":{"line":158,"column":38}},"67":{"start":{"line":159,"column":2},"end":{"line":159,"column":14}},"68":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"69":{"start":{"line":163,"column":3},"end":{"line":163,"column":73}},"70":{"start":{"line":166,"column":2},"end":{"line":166,"column":32}},"71":{"start":{"line":168,"column":2},"end":{"line":168,"column":83}},"72":{"start":{"line":169,"column":2},"end":{"line":169,"column":81}},"73":{"start":{"line":171,"column":2},"end":{"line":171,"column":104}},"74":{"start":{"line":172,"column":2},"end":{"line":175,"column":3}},"75":{"start":{"line":173,"column":3},"end":{"line":173,"column":108}},"76":{"start":{"line":174,"column":3},"end":{"line":174,"column":64}},"77":{"start":{"line":176,"column":2},"end":{"line":176,"column":18}},"78":{"start":{"line":179,"column":2},"end":{"line":179,"column":59}},"79":{"start":{"line":179,"column":27},"end":{"line":179,"column":57}},"80":{"start":{"line":182,"column":2},"end":{"line":182,"column":72}},"81":{"start":{"line":183,"column":2},"end":{"line":183,"column":70}},"82":{"start":{"line":185,"column":2},"end":{"line":185,"column":83}},"83":{"start":{"line":186,"column":2},"end":{"line":186,"column":93}},"84":{"start":{"line":187,"column":2},"end":{"line":187,"column":64}},"85":{"start":{"line":189,"column":2},"end":{"line":189,"column":75}},"86":{"start":{"line":190,"column":2},"end":{"line":193,"column":3}},"87":{"start":{"line":191,"column":3},"end":{"line":191,"column":83}},"88":{"start":{"line":192,"column":3},"end":{"line":192,"column":68}},"89":{"start":{"line":194,"column":2},"end":{"line":194,"column":20}},"90":{"start":{"line":197,"column":2},"end":{"line":201,"column":3}},"91":{"start":{"line":198,"column":3},"end":{"line":200,"column":4}},"92":{"start":{"line":199,"column":4},"end":{"line":199,"column":16}},"93":{"start":{"line":202,"column":2},"end":{"line":202,"column":15}},"94":{"start":{"line":206,"column":0},"end":{"line":206,"column":32}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"2":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":17}},{"start":{"line":44,"column":21},"end":{"line":44,"column":28}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":3},"end":{"line":54,"column":3}},{"start":{"line":54,"column":3},"end":{"line":54,"column":3}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"8":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":21}},{"start":{"line":61,"column":25},"end":{"line":61,"column":41}},{"start":{"line":61,"column":45},"end":{"line":61,"column":65}}]},"9":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":3},"end":{"line":67,"column":3}},{"start":{"line":67,"column":3},"end":{"line":67,"column":3}}]},"11":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":40},"end":{"line":71,"column":48}},{"start":{"line":71,"column":51},"end":{"line":71,"column":53}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"13":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":6},"end":{"line":78,"column":23}},{"start":{"line":78,"column":27},"end":{"line":78,"column":46}}]},"14":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"15":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":24}},{"start":{"line":82,"column":28},"end":{"line":82,"column":46}}]},"16":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"17":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":3},"end":{"line":114,"column":3}},{"start":{"line":114,"column":3},"end":{"line":114,"column":3}}]},"18":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":7},"end":{"line":114,"column":28}},{"start":{"line":114,"column":32},"end":{"line":114,"column":50}}]},"19":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"20":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"21":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"22":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"23":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":27}},{"start":{"line":162,"column":31},"end":{"line":162,"column":49}}]},"24":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"25":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"26":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":3},"end":{"line":198,"column":3}},{"start":{"line":198,"column":3},"end":{"line":198,"column":3}}]}},"code":["'use strict';","const EventEmitter = require('events');","const fnName = require('fn-name');","const Concurrent = require('./concurrent');","const Sequence = require('./sequence');","const Test = require('./test');","","class TestCollection extends EventEmitter {","\tconstructor(options) {","\t\tsuper();","","\t\tthis.bail = options.bail;","\t\tthis.failWithoutAssertions = options.failWithoutAssertions;","\t\tthis.getSnapshotState = options.getSnapshotState;","\t\tthis.hasExclusive = false;","\t\tthis.testCount = 0;","","\t\tthis.tests = {","\t\t\tconcurrent: [],","\t\t\tserial: []","\t\t};","","\t\tthis.hooks = {","\t\t\tbefore: [],","\t\t\tbeforeEach: [],","\t\t\tafter: [],","\t\t\tafterAlways: [],","\t\t\tafterEach: [],","\t\t\tafterEachAlways: []","\t\t};","","\t\tthis.pendingTestInstances = new Set();","","\t\tthis._emitTestResult = this._emitTestResult.bind(this);","\t}","\tadd(test) {","\t\tconst metadata = test.metadata;","\t\tconst type = metadata.type;","","\t\tif (!type) {","\t\t\tthrow new Error('Test type must be specified');","\t\t}","","\t\tif (!test.title && test.fn) {","\t\t\ttest.title = fnName(test.fn);","\t\t}","","\t\t// Workaround for Babel giving anonymous functions a name","\t\tif (test.title === 'callee$0$0') {","\t\t\ttest.title = null;","\t\t}","","\t\tif (!test.title) {","\t\t\tif (type === 'test') {","\t\t\t\ttest.title = '[anonymous]';","\t\t\t} else {","\t\t\t\ttest.title = type;","\t\t\t}","\t\t}","","\t\tif (metadata.always && type !== 'after' && type !== 'afterEach') {","\t\t\tthrow new Error('\"always\" can only be used with after and afterEach hooks');","\t\t}","","\t\t// Add a hook","\t\tif (type !== 'test') {","\t\t\tif (metadata.exclusive) {","\t\t\t\tthrow new Error(`\"only\" cannot be used with a ${type} hook`);","\t\t\t}","","\t\t\tthis.hooks[type + (metadata.always ? 'Always' : '')].push(test);","\t\t\treturn;","\t\t}","","\t\tthis.testCount++;","","\t\t// Add `.only()` tests if `.only()` was used previously","\t\tif (this.hasExclusive && !metadata.exclusive) {","\t\t\treturn;","\t\t}","","\t\tif (metadata.exclusive && !this.hasExclusive) {","\t\t\tthis.tests.concurrent = [];","\t\t\tthis.tests.serial = [];","\t\t\tthis.hasExclusive = true;","\t\t}","","\t\tif (metadata.serial) {","\t\t\tthis.tests.serial.push(test);","\t\t} else {","\t\t\tthis.tests.concurrent.push(test);","\t\t}","\t}","\t_skippedTest(test) {","\t\treturn {","\t\t\trun: () => {","\t\t\t\tthis._emitTestResult({","\t\t\t\t\tpassed: true,","\t\t\t\t\tresult: test","\t\t\t\t});","","\t\t\t\treturn true;","\t\t\t}","\t\t};","\t}","\t_emitTestResult(result) {","\t\tthis.pendingTestInstances.delete(result.result);","\t\tthis.emit('test', result);","\t}","\t_buildHooks(hooks, testTitle, context) {","\t\treturn hooks.map(hook => {","\t\t\tconst test = this._buildHook(hook, testTitle, context);","","\t\t\tif (hook.metadata.skipped || hook.metadata.todo) {","\t\t\t\treturn this._skippedTest(test);","\t\t\t}","","\t\t\treturn test;","\t\t});","\t}","\t_buildHook(hook, testTitle, contextRef) {","\t\tlet title = hook.title;","","\t\tif (testTitle) {","\t\t\ttitle += ` for ${testTitle}`;","\t\t}","","\t\tif (!contextRef) {","\t\t\tcontextRef = null;","\t\t}","","\t\tconst test = new Test({","\t\t\tcontextRef,","\t\t\tfailWithoutAssertions: false,","\t\t\tfn: hook.fn,","\t\t\tgetSnapshotState: this.getSnapshotState,","\t\t\tmetadata: hook.metadata,","\t\t\tonResult: this._emitTestResult,","\t\t\ttitle","\t\t});","\t\tthis.pendingTestInstances.add(test);","\t\treturn test;","\t}","\t_buildTest(test, contextRef) {","\t\tif (!contextRef) {","\t\t\tcontextRef = null;","\t\t}","","\t\ttest = new Test({","\t\t\tcontextRef,","\t\t\tfailWithoutAssertions: this.failWithoutAssertions,","\t\t\tfn: test.fn,","\t\t\tgetSnapshotState: this.getSnapshotState,","\t\t\tmetadata: test.metadata,","\t\t\tonResult: this._emitTestResult,","\t\t\ttitle: test.title","\t\t});","\t\tthis.pendingTestInstances.add(test);","\t\treturn test;","\t}","\t_buildTestWithHooks(test) {","\t\tif (test.metadata.skipped || test.metadata.todo) {","\t\t\treturn new Sequence([this._skippedTest(this._buildTest(test))], true);","\t\t}","","\t\tconst context = {context: {}};","","\t\tconst beforeHooks = this._buildHooks(this.hooks.beforeEach, test.title, context);","\t\tconst afterHooks = this._buildHooks(this.hooks.afterEach, test.title, context);","","\t\tlet sequence = new Sequence([].concat(beforeHooks, this._buildTest(test, context), afterHooks), true);","\t\tif (this.hooks.afterEachAlways.length > 0) {","\t\t\tconst afterAlwaysHooks = new Sequence(this._buildHooks(this.hooks.afterEachAlways, test.title, context));","\t\t\tsequence = new Sequence([sequence, afterAlwaysHooks], false);","\t\t}","\t\treturn sequence;","\t}","\t_buildTests(tests) {","\t\treturn tests.map(test => this._buildTestWithHooks(test));","\t}","\tbuild() {","\t\tconst beforeHooks = new Sequence(this._buildHooks(this.hooks.before));","\t\tconst afterHooks = new Sequence(this._buildHooks(this.hooks.after));","","\t\tconst serialTests = new Sequence(this._buildTests(this.tests.serial), this.bail);","\t\tconst concurrentTests = new Concurrent(this._buildTests(this.tests.concurrent), this.bail);","\t\tconst allTests = new Sequence([serialTests, concurrentTests]);","","\t\tlet finalTests = new Sequence([beforeHooks, allTests, afterHooks], true);","\t\tif (this.hooks.afterAlways.length > 0) {","\t\t\tconst afterAlwaysHooks = new Sequence(this._buildHooks(this.hooks.afterAlways));","\t\t\tfinalTests = new Sequence([finalTests, afterAlwaysHooks], false);","\t\t}","\t\treturn finalTests;","\t}","\tattributeLeakedError(err) {","\t\tfor (const test of this.pendingTestInstances) {","\t\t\tif (test.attributeLeakedError(err)) {","\t\t\t\treturn true;","\t\t\t}","\t\t}","\t\treturn false;","\t}","}","","module.exports = TestCollection;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"10":0,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"23":0,"32":0,"34":0,"37":0,"38":0,"40":0,"41":0,"44":0,"45":0,"49":0,"50":0,"53":0,"54":0,"55":0,"57":0,"61":0,"62":0,"66":0,"67":0,"68":0,"71":0,"72":0,"75":0,"78":0,"79":0,"82":0,"83":0,"84":0,"85":0,"88":0,"89":0,"91":0,"95":0,"97":0,"102":0,"107":0,"108":0,"111":0,"112":0,"114":0,"115":0,"118":0,"122":0,"124":0,"125":0,"128":0,"129":0,"132":0,"141":0,"142":0,"145":0,"146":0,"149":0,"158":0,"159":0,"162":0,"163":0,"166":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"176":0,"179":0,"182":0,"183":0,"185":0,"186":0,"187":0,"189":0,"190":0,"191":0,"192":0,"194":0,"197":0,"198":0,"199":0,"202":0,"206":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/sequence.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/sequence.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":9},"end":{"line":18,"column":12}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":30}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":7}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":5,"column":1},"end":{"line":7,"column":2}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":15}},"5":{"start":{"line":9,"column":0},"end":{"line":25,"column":2}},"6":{"start":{"line":10,"column":1},"end":{"line":14,"column":2}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":46}},"8":{"start":{"line":16,"column":1},"end":{"line":16,"column":39}},"9":{"start":{"line":17,"column":1},"end":{"line":24,"column":3}},"10":{"start":{"line":19,"column":3},"end":{"line":19,"column":44}},"11":{"start":{"line":20,"column":3},"end":{"line":22,"column":4}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":60}},"13":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"14":{"start":{"line":30,"column":3},"end":{"line":30,"column":57}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":29}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":28}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":53}},"18":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}},"19":{"start":{"line":41,"column":2},"end":{"line":45,"column":5}},"20":{"start":{"line":42,"column":3},"end":{"line":44,"column":4}},"21":{"start":{"line":43,"column":4},"end":{"line":43,"column":43}},"22":{"start":{"line":47,"column":2},"end":{"line":47,"column":23}},"23":{"start":{"line":48,"column":2},"end":{"line":51,"column":4}},"24":{"start":{"line":49,"column":3},"end":{"line":49,"column":24}},"25":{"start":{"line":50,"column":3},"end":{"line":50,"column":20}},"26":{"start":{"line":53,"column":2},"end":{"line":88,"column":4}},"27":{"start":{"line":54,"column":3},"end":{"line":54,"column":15}},"28":{"start":{"line":56,"column":3},"end":{"line":70,"column":4}},"29":{"start":{"line":57,"column":4},"end":{"line":57,"column":32}},"30":{"start":{"line":58,"column":4},"end":{"line":58,"column":49}},"31":{"start":{"line":59,"column":4},"end":{"line":69,"column":5}},"32":{"start":{"line":60,"column":5},"end":{"line":60,"column":23}},"33":{"start":{"line":62,"column":5},"end":{"line":65,"column":6}},"34":{"start":{"line":64,"column":6},"end":{"line":64,"column":12}},"35":{"start":{"line":66,"column":11},"end":{"line":69,"column":5}},"36":{"start":{"line":67,"column":5},"end":{"line":67,"column":31}},"37":{"start":{"line":68,"column":5},"end":{"line":68,"column":11}},"38":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"39":{"start":{"line":73,"column":4},"end":{"line":73,"column":20}},"40":{"start":{"line":76,"column":3},"end":{"line":87,"column":6}},"41":{"start":{"line":77,"column":4},"end":{"line":84,"column":5}},"42":{"start":{"line":78,"column":5},"end":{"line":78,"column":23}},"43":{"start":{"line":80,"column":5},"end":{"line":83,"column":6}},"44":{"start":{"line":82,"column":6},"end":{"line":82,"column":22}},"45":{"start":{"line":86,"column":4},"end":{"line":86,"column":21}},"46":{"start":{"line":90,"column":2},"end":{"line":90,"column":19}},"47":{"start":{"line":94,"column":0},"end":{"line":94,"column":26}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},{"start":{"line":10,"column":1},"end":{"line":10,"column":1}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":3}},{"start":{"line":20,"column":3},"end":{"line":20,"column":3}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":14},"end":{"line":34,"column":18}},{"start":{"line":34,"column":22},"end":{"line":34,"column":27}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":3},"end":{"line":42,"column":3}},{"start":{"line":42,"column":3},"end":{"line":42,"column":3}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":5},"end":{"line":62,"column":5}},{"start":{"line":62,"column":5},"end":{"line":62,"column":5}}]},"8":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":11},"end":{"line":66,"column":11}},{"start":{"line":66,"column":11},"end":{"line":66,"column":11}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":3}},{"start":{"line":72,"column":3},"end":{"line":72,"column":3}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":5},"end":{"line":80,"column":5}},{"start":{"line":80,"column":5},"end":{"line":80,"column":5}}]}},"code":["'use strict';","","const beforeExitSubscribers = new Set();","const beforeExitHandler = () => {","\tfor (const subscriber of beforeExitSubscribers) {","\t\tsubscriber();","\t}","};","const onBeforeExit = subscriber => {","\tif (beforeExitSubscribers.size === 0) {","\t\t// Only listen for the event once, no matter how many Sequences are run","\t\t// concurrently.","\t\tprocess.on('beforeExit', beforeExitHandler);","\t}","","\tbeforeExitSubscribers.add(subscriber);","\treturn {","\t\tdispose() {","\t\t\tbeforeExitSubscribers.delete(subscriber);","\t\t\tif (beforeExitSubscribers.size === 0) {","\t\t\t\tprocess.removeListener('beforeExit', beforeExitHandler);","\t\t\t}","\t\t}","\t};","};","","class Sequence {","\tconstructor(runnables, bail) {","\t\tif (!Array.isArray(runnables)) {","\t\t\tthrow new TypeError('Expected an array of runnables');","\t\t}","","\t\tthis.runnables = runnables;","\t\tthis.bail = bail || false;","\t}","","\trun() {","\t\tconst iterator = this.runnables[Symbol.iterator]();","","\t\tlet activeRunnable;","\t\tconst beforeExit = onBeforeExit(() => {","\t\t\tif (activeRunnable.finishDueToInactivity) {","\t\t\t\tactiveRunnable.finishDueToInactivity();","\t\t\t}","\t\t});","","\t\tlet allPassed = true;","\t\tconst finish = () => {","\t\t\tbeforeExit.dispose();","\t\t\treturn allPassed;","\t\t};","","\t\tconst runNext = () => {","\t\t\tlet promise;","","\t\t\tfor (let next = iterator.next(); !next.done; next = iterator.next()) {","\t\t\t\tactiveRunnable = next.value;","\t\t\t\tconst passedOrPromise = activeRunnable.run();","\t\t\t\tif (!passedOrPromise) {","\t\t\t\t\tallPassed = false;","","\t\t\t\t\tif (this.bail) {","\t\t\t\t\t\t// Stop if the test failed and bail mode is on.","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t} else if (passedOrPromise !== true) {","\t\t\t\t\tpromise = passedOrPromise;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","","\t\t\tif (!promise) {","\t\t\t\treturn finish();","\t\t\t}","","\t\t\treturn promise.then(passed => {","\t\t\t\tif (!passed) {","\t\t\t\t\tallPassed = false;","","\t\t\t\t\tif (this.bail) {","\t\t\t\t\t\t// Stop if the test failed and bail mode is on.","\t\t\t\t\t\treturn finish();","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\treturn runNext();","\t\t\t});","\t\t};","","\t\treturn runNext();","\t}","}","","module.exports = Sequence;",""],"l":{"3":1,"4":1,"5":0,"6":0,"9":1,"10":0,"13":0,"16":0,"17":0,"19":0,"20":0,"21":0,"29":0,"30":0,"33":0,"34":0,"38":0,"40":0,"41":0,"42":0,"43":0,"47":0,"48":0,"49":0,"50":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"64":0,"66":0,"67":0,"68":0,"72":0,"73":0,"76":0,"77":0,"78":0,"80":0,"82":0,"86":0,"90":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/test.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":0,"38":0,"39":0,"40":1,"41":1,"42":0,"43":1,"44":16,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":12},"end":{"line":13,"column":19}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":19}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":10}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":8},"end":{"line":37,"column":11}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":10},"end":{"line":43,"column":13}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":15}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":22}}},"8":{"name":"(anonymous_8)","line":63,"loc":{"start":{"line":63,"column":16},"end":{"line":63,"column":40}}},"9":{"name":"(anonymous_9)","line":66,"loc":{"start":{"line":66,"column":14},"end":{"line":66,"column":17}}},"10":{"name":"(anonymous_10)","line":74,"loc":{"start":{"line":74,"column":6},"end":{"line":74,"column":25}}},"11":{"name":"(anonymous_11)","line":78,"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":37}}},"12":{"name":"(anonymous_12)","line":82,"loc":{"start":{"line":82,"column":6},"end":{"line":82,"column":32}}},"13":{"name":"skipFn","line":88,"loc":{"start":{"line":88,"column":1},"end":{"line":88,"column":19}}},"14":{"name":"(anonymous_14)","line":97,"loc":{"start":{"line":97,"column":12},"end":{"line":97,"column":22}}},"15":{"name":"(anonymous_15)","line":120,"loc":{"start":{"line":120,"column":16},"end":{"line":120,"column":19}}},"16":{"name":"(anonymous_16)","line":130,"loc":{"start":{"line":130,"column":12},"end":{"line":130,"column":25}}},"17":{"name":"(anonymous_17)","line":151,"loc":{"start":{"line":151,"column":23},"end":{"line":151,"column":26}}},"18":{"name":"(anonymous_18)","line":155,"loc":{"start":{"line":155,"column":21},"end":{"line":155,"column":24}}},"19":{"name":"(anonymous_19)","line":163,"loc":{"start":{"line":163,"column":20},"end":{"line":163,"column":30}}},"20":{"name":"(anonymous_20)","line":175,"loc":{"start":{"line":175,"column":19},"end":{"line":175,"column":27}}},"21":{"name":"(anonymous_21)","line":184,"loc":{"start":{"line":184,"column":15},"end":{"line":184,"column":21}}},"22":{"name":"(anonymous_22)","line":190,"loc":{"start":{"line":190,"column":5},"end":{"line":190,"column":24}}},"23":{"name":"(anonymous_23)","line":202,"loc":{"start":{"line":202,"column":11},"end":{"line":202,"column":14}}},"24":{"name":"(anonymous_24)","line":213,"loc":{"start":{"line":213,"column":17},"end":{"line":213,"column":20}}},"25":{"name":"(anonymous_25)","line":223,"loc":{"start":{"line":223,"column":12},"end":{"line":223,"column":22}}},"26":{"name":"(anonymous_26)","line":227,"loc":{"start":{"line":227,"column":21},"end":{"line":227,"column":27}}},"27":{"name":"(anonymous_27)","line":251,"loc":{"start":{"line":251,"column":30},"end":{"line":251,"column":33}}},"28":{"name":"(anonymous_28)","line":268,"loc":{"start":{"line":268,"column":21},"end":{"line":268,"column":27}}},"29":{"name":"(anonymous_29)","line":277,"loc":{"start":{"line":277,"column":7},"end":{"line":277,"column":10}}},"30":{"name":"(anonymous_30)","line":291,"loc":{"start":{"line":291,"column":4},"end":{"line":291,"column":7}}},"31":{"name":"(anonymous_31)","line":375,"loc":{"start":{"line":375,"column":7},"end":{"line":375,"column":10}}},"32":{"name":"(anonymous_32)","line":409,"loc":{"start":{"line":409,"column":15},"end":{"line":409,"column":18}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":61}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"10":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"11":{"start":{"line":18,"column":0},"end":{"line":25,"column":2}},"12":{"start":{"line":19,"column":1},"end":{"line":19,"column":43}},"13":{"start":{"line":20,"column":1},"end":{"line":20,"column":27}},"14":{"start":{"line":21,"column":1},"end":{"line":21,"column":16}},"15":{"start":{"line":22,"column":1},"end":{"line":22,"column":37}},"16":{"start":{"line":23,"column":1},"end":{"line":23,"column":37}},"17":{"start":{"line":24,"column":1},"end":{"line":24,"column":18}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"19":{"start":{"line":30,"column":2},"end":{"line":30,"column":32}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":47}},"21":{"start":{"line":38,"column":2},"end":{"line":38,"column":43}},"22":{"start":{"line":39,"column":2},"end":{"line":39,"column":53}},"23":{"start":{"line":39,"column":23},"end":{"line":39,"column":52}},"24":{"start":{"line":40,"column":2},"end":{"line":40,"column":15}},"25":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"26":{"start":{"line":48,"column":2},"end":{"line":48,"column":43}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":42}},"28":{"start":{"line":53,"column":2},"end":{"line":53,"column":43}},"29":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"30":{"start":{"line":56,"column":3},"end":{"line":56,"column":111}},"31":{"start":{"line":57,"column":3},"end":{"line":57,"column":10}},"32":{"start":{"line":60,"column":2},"end":{"line":60,"column":31}},"33":{"start":{"line":64,"column":2},"end":{"line":64,"column":50}},"34":{"start":{"line":67,"column":2},"end":{"line":67,"column":31}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":81}},"36":{"start":{"line":73,"column":1},"end":{"line":85,"column":4}},"37":{"start":{"line":75,"column":3},"end":{"line":75,"column":49}},"38":{"start":{"line":79,"column":3},"end":{"line":79,"column":55}},"39":{"start":{"line":83,"column":3},"end":{"line":83,"column":52}},"40":{"start":{"line":86,"column":1},"end":{"line":86,"column":55}},"41":{"start":{"line":88,"column":1},"end":{"line":90,"column":2}},"42":{"start":{"line":89,"column":2},"end":{"line":89,"column":36}},"43":{"start":{"line":91,"column":1},"end":{"line":93,"column":4}},"44":{"start":{"line":92,"column":2},"end":{"line":92,"column":33}},"45":{"start":{"line":98,"column":2},"end":{"line":98,"column":39}},"46":{"start":{"line":99,"column":2},"end":{"line":99,"column":61}},"47":{"start":{"line":100,"column":2},"end":{"line":100,"column":73}},"48":{"start":{"line":101,"column":2},"end":{"line":101,"column":51}},"49":{"start":{"line":102,"column":2},"end":{"line":102,"column":35}},"50":{"start":{"line":103,"column":2},"end":{"line":103,"column":35}},"51":{"start":{"line":104,"column":2},"end":{"line":104,"column":29}},"52":{"start":{"line":106,"column":2},"end":{"line":106,"column":23}},"53":{"start":{"line":107,"column":2},"end":{"line":107,"column":31}},"54":{"start":{"line":108,"column":2},"end":{"line":108,"column":25}},"55":{"start":{"line":109,"column":2},"end":{"line":109,"column":23}},"56":{"start":{"line":110,"column":2},"end":{"line":110,"column":34}},"57":{"start":{"line":111,"column":2},"end":{"line":111,"column":41}},"58":{"start":{"line":112,"column":2},"end":{"line":112,"column":36}},"59":{"start":{"line":113,"column":2},"end":{"line":113,"column":25}},"60":{"start":{"line":114,"column":2},"end":{"line":114,"column":33}},"61":{"start":{"line":115,"column":2},"end":{"line":115,"column":37}},"62":{"start":{"line":116,"column":2},"end":{"line":116,"column":24}},"63":{"start":{"line":117,"column":2},"end":{"line":117,"column":21}},"64":{"start":{"line":121,"column":2},"end":{"line":125,"column":3}},"65":{"start":{"line":122,"column":3},"end":{"line":124,"column":5}},"66":{"start":{"line":123,"column":4},"end":{"line":123,"column":33}},"67":{"start":{"line":127,"column":2},"end":{"line":127,"column":155}},"68":{"start":{"line":131,"column":2},"end":{"line":134,"column":3}},"69":{"start":{"line":132,"column":3},"end":{"line":132,"column":69}},"70":{"start":{"line":133,"column":3},"end":{"line":133,"column":10}},"71":{"start":{"line":135,"column":2},"end":{"line":135,"column":24}},"72":{"start":{"line":137,"column":2},"end":{"line":144,"column":3}},"73":{"start":{"line":138,"column":3},"end":{"line":143,"column":7}},"74":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"75":{"start":{"line":147,"column":3},"end":{"line":147,"column":30}},"76":{"start":{"line":152,"column":2},"end":{"line":152,"column":36}},"77":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"78":{"start":{"line":157,"column":3},"end":{"line":157,"column":85}},"79":{"start":{"line":160,"column":2},"end":{"line":160,"column":21}},"80":{"start":{"line":164,"column":2},"end":{"line":166,"column":3}},"81":{"start":{"line":165,"column":3},"end":{"line":165,"column":85}},"82":{"start":{"line":168,"column":2},"end":{"line":168,"column":21}},"83":{"start":{"line":169,"column":2},"end":{"line":169,"column":31}},"84":{"start":{"line":170,"column":2},"end":{"line":172,"column":45}},"85":{"start":{"line":171,"column":17},"end":{"line":171,"column":41}},"86":{"start":{"line":172,"column":15},"end":{"line":172,"column":43}},"87":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"88":{"start":{"line":177,"column":3},"end":{"line":177,"column":85}},"89":{"start":{"line":180,"column":2},"end":{"line":180,"column":21}},"90":{"start":{"line":181,"column":2},"end":{"line":181,"column":29}},"91":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"92":{"start":{"line":186,"column":3},"end":{"line":186,"column":26}},"93":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"94":{"start":{"line":192,"column":3},"end":{"line":192,"column":44}},"95":{"start":{"line":195,"column":2},"end":{"line":195,"column":25}},"96":{"start":{"line":199,"column":2},"end":{"line":199,"column":29}},"97":{"start":{"line":203,"column":2},"end":{"line":210,"column":3}},"98":{"start":{"line":204,"column":3},"end":{"line":209,"column":7}},"99":{"start":{"line":214,"column":2},"end":{"line":220,"column":3}},"100":{"start":{"line":215,"column":3},"end":{"line":219,"column":4}},"101":{"start":{"line":216,"column":4},"end":{"line":216,"column":83}},"102":{"start":{"line":217,"column":10},"end":{"line":219,"column":4}},"103":{"start":{"line":218,"column":4},"end":{"line":218,"column":87}},"104":{"start":{"line":224,"column":2},"end":{"line":224,"column":40}},"105":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"106":{"start":{"line":229,"column":3},"end":{"line":229,"column":16}},"107":{"start":{"line":232,"column":2},"end":{"line":232,"column":46}},"108":{"start":{"line":233,"column":2},"end":{"line":233,"column":37}},"109":{"start":{"line":235,"column":2},"end":{"line":235,"column":20}},"110":{"start":{"line":236,"column":2},"end":{"line":238,"column":3}},"111":{"start":{"line":237,"column":3},"end":{"line":237,"column":152}},"112":{"start":{"line":240,"column":2},"end":{"line":247,"column":6}},"113":{"start":{"line":248,"column":2},"end":{"line":248,"column":14}},"114":{"start":{"line":252,"column":2},"end":{"line":265,"column":5}},"115":{"start":{"line":253,"column":3},"end":{"line":255,"column":5}},"116":{"start":{"line":254,"column":4},"end":{"line":254,"column":35}},"117":{"start":{"line":257,"column":3},"end":{"line":260,"column":5}},"118":{"start":{"line":258,"column":4},"end":{"line":258,"column":32}},"119":{"start":{"line":259,"column":4},"end":{"line":259,"column":35}},"120":{"start":{"line":264,"column":3},"end":{"line":264,"column":72}},"121":{"start":{"line":264,"column":28},"end":{"line":264,"column":56}},"122":{"start":{"line":269,"column":2},"end":{"line":271,"column":3}},"123":{"start":{"line":270,"column":3},"end":{"line":270,"column":16}},"124":{"start":{"line":273,"column":2},"end":{"line":273,"column":36}},"125":{"start":{"line":274,"column":2},"end":{"line":274,"column":14}},"126":{"start":{"line":278,"column":2},"end":{"line":288,"column":3}},"127":{"start":{"line":279,"column":3},"end":{"line":282,"column":5}},"128":{"start":{"line":284,"column":3},"end":{"line":287,"column":5}},"129":{"start":{"line":292,"column":2},"end":{"line":292,"column":33}},"130":{"start":{"line":294,"column":2},"end":{"line":294,"column":31}},"131":{"start":{"line":295,"column":2},"end":{"line":304,"column":3}},"132":{"start":{"line":296,"column":3},"end":{"line":302,"column":4}},"133":{"start":{"line":297,"column":4},"end":{"line":301,"column":8}},"134":{"start":{"line":303,"column":3},"end":{"line":303,"column":24}},"135":{"start":{"line":306,"column":2},"end":{"line":306,"column":57}},"136":{"start":{"line":307,"column":2},"end":{"line":307,"column":51}},"137":{"start":{"line":309,"column":2},"end":{"line":309,"column":14}},"138":{"start":{"line":310,"column":2},"end":{"line":315,"column":3}},"139":{"start":{"line":311,"column":3},"end":{"line":311,"column":48}},"140":{"start":{"line":312,"column":9},"end":{"line":315,"column":3}},"141":{"start":{"line":314,"column":3},"end":{"line":314,"column":44}},"142":{"start":{"line":317,"column":2},"end":{"line":342,"column":3}},"143":{"start":{"line":318,"column":3},"end":{"line":322,"column":4}},"144":{"start":{"line":319,"column":4},"end":{"line":319,"column":70}},"145":{"start":{"line":320,"column":4},"end":{"line":320,"column":181}},"146":{"start":{"line":321,"column":4},"end":{"line":321,"column":25}},"147":{"start":{"line":324,"column":3},"end":{"line":326,"column":4}},"148":{"start":{"line":325,"column":4},"end":{"line":325,"column":25}},"149":{"start":{"line":328,"column":3},"end":{"line":341,"column":6}},"150":{"start":{"line":329,"column":4},"end":{"line":331,"column":6}},"151":{"start":{"line":330,"column":5},"end":{"line":330,"column":36}},"152":{"start":{"line":333,"column":4},"end":{"line":335,"column":6}},"153":{"start":{"line":334,"column":5},"end":{"line":334,"column":36}},"154":{"start":{"line":337,"column":4},"end":{"line":340,"column":6}},"155":{"start":{"line":338,"column":5},"end":{"line":338,"column":66}},"156":{"start":{"line":339,"column":5},"end":{"line":339,"column":36}},"157":{"start":{"line":344,"column":2},"end":{"line":370,"column":3}},"158":{"start":{"line":345,"column":3},"end":{"line":369,"column":6}},"159":{"start":{"line":346,"column":4},"end":{"line":348,"column":6}},"160":{"start":{"line":347,"column":5},"end":{"line":347,"column":36}},"161":{"start":{"line":350,"column":4},"end":{"line":356,"column":6}},"162":{"start":{"line":351,"column":5},"end":{"line":353,"column":59}},"163":{"start":{"line":354,"column":5},"end":{"line":354,"column":30}},"164":{"start":{"line":355,"column":5},"end":{"line":355,"column":36}},"165":{"start":{"line":358,"column":4},"end":{"line":368,"column":49}},"166":{"start":{"line":360,"column":6},"end":{"line":366,"column":7}},"167":{"start":{"line":361,"column":7},"end":{"line":365,"column":11}},"168":{"start":{"line":368,"column":17},"end":{"line":368,"column":47}},"169":{"start":{"line":372,"column":2},"end":{"line":372,"column":23}},"170":{"start":{"line":376,"column":2},"end":{"line":376,"column":24}},"171":{"start":{"line":378,"column":2},"end":{"line":380,"column":3}},"172":{"start":{"line":379,"column":3},"end":{"line":379,"column":47}},"173":{"start":{"line":382,"column":2},"end":{"line":382,"column":20}},"174":{"start":{"line":383,"column":2},"end":{"line":383,"column":26}},"175":{"start":{"line":385,"column":2},"end":{"line":385,"column":49}},"176":{"start":{"line":387,"column":2},"end":{"line":387,"column":32}},"177":{"start":{"line":388,"column":2},"end":{"line":388,"column":23}},"178":{"start":{"line":390,"column":2},"end":{"line":398,"column":3}},"179":{"start":{"line":391,"column":3},"end":{"line":391,"column":20}},"180":{"start":{"line":393,"column":3},"end":{"line":397,"column":4}},"181":{"start":{"line":394,"column":4},"end":{"line":394,"column":23}},"182":{"start":{"line":396,"column":4},"end":{"line":396,"column":112}},"183":{"start":{"line":400,"column":2},"end":{"line":404,"column":5}},"184":{"start":{"line":406,"column":2},"end":{"line":406,"column":16}},"185":{"start":{"line":410,"column":2},"end":{"line":412,"column":5}},"186":{"start":{"line":411,"column":3},"end":{"line":411,"column":26}},"187":{"start":{"line":416,"column":0},"end":{"line":416,"column":22}}},"branchMap":{"1":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":19}},{"start":{"line":49,"column":23},"end":{"line":49,"column":41}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"3":{"line":100,"type":"cond-expr","locations":[{"start":{"line":100,"column":40},"end":{"line":100,"column":59}},{"start":{"line":100,"column":62},"end":{"line":100,"column":72}}]},"4":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"5":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"6":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"7":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"8":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"9":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]},"10":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"11":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"13":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"14":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":23}},{"start":{"line":203,"column":27},"end":{"line":203,"column":50}},{"start":{"line":203,"column":54},"end":{"line":203,"column":89}}]},"15":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]},"16":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":3},"end":{"line":215,"column":3}},{"start":{"line":215,"column":3},"end":{"line":215,"column":3}}]},"17":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":7},"end":{"line":215,"column":33}},{"start":{"line":215,"column":37},"end":{"line":215,"column":52}},{"start":{"line":215,"column":56},"end":{"line":215,"column":79}},{"start":{"line":215,"column":83},"end":{"line":215,"column":105}}]},"18":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":10},"end":{"line":217,"column":10}},{"start":{"line":217,"column":10},"end":{"line":217,"column":10}}]},"19":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"20":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":2},"end":{"line":236,"column":2}},{"start":{"line":236,"column":2},"end":{"line":236,"column":2}}]},"21":{"line":245,"type":"binary-expr","locations":[{"start":{"line":245,"column":10},"end":{"line":245,"column":30}},{"start":{"line":245,"column":34},"end":{"line":245,"column":43}}]},"22":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"23":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"24":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":3},"end":{"line":296,"column":3}},{"start":{"line":296,"column":3},"end":{"line":296,"column":3}}]},"25":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":12},"end":{"line":299,"column":41}},{"start":{"line":299,"column":45},"end":{"line":299,"column":63}}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":310,"column":2}},{"start":{"line":310,"column":2},"end":{"line":310,"column":2}}]},"27":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":9},"end":{"line":312,"column":9}},{"start":{"line":312,"column":9},"end":{"line":312,"column":9}}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"29":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":3},"end":{"line":318,"column":3}},{"start":{"line":318,"column":3},"end":{"line":318,"column":3}}]},"30":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":7},"end":{"line":318,"column":25}},{"start":{"line":318,"column":29},"end":{"line":318,"column":44}}]},"31":{"line":319,"type":"cond-expr","locations":[{"start":{"line":319,"column":43},"end":{"line":319,"column":56}},{"start":{"line":319,"column":59},"end":{"line":319,"column":69}}]},"32":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":3},"end":{"line":324,"column":3}},{"start":{"line":324,"column":3},"end":{"line":324,"column":3}}]},"33":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":2},"end":{"line":344,"column":2}},{"start":{"line":344,"column":2},"end":{"line":344,"column":2}}]},"34":{"line":351,"type":"cond-expr","locations":[{"start":{"line":352,"column":6},"end":{"line":352,"column":62}},{"start":{"line":353,"column":6},"end":{"line":353,"column":58}}]},"35":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"36":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":15},"end":{"line":363,"column":35}},{"start":{"line":363,"column":39},"end":{"line":363,"column":48}}]},"37":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"38":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":23}},{"start":{"line":378,"column":27},"end":{"line":378,"column":54}}]},"39":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"40":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":3},"end":{"line":393,"column":3}},{"start":{"line":393,"column":3},"end":{"line":393,"column":3}}]}},"code":["'use strict';","const isGeneratorFn = require('is-generator-fn');","const co = require('co-with-promise');","const observableToPromise = require('observable-to-promise');","const isPromise = require('is-promise');","const isObservable = require('is-observable');","const plur = require('plur');","const assert = require('./assert');","const formatAssertError = require('./format-assert-error');","const globals = require('./globals');","","class SkipApi {","\tconstructor(test) {","\t\tthis._test = test;","\t}","}","","const captureStack = start => {","\tconst limitBefore = Error.stackTraceLimit;","\tError.stackTraceLimit = 1;","\tconst obj = {};","\tError.captureStackTrace(obj, start);","\tError.stackTraceLimit = limitBefore;","\treturn obj.stack;","};","","class ExecutionContext {","\tconstructor(test) {","\t\tthis._test = test;","\t\tthis.skip = new SkipApi(test);","\t}","","\tplan(ct) {","\t\tthis._test.plan(ct, captureStack(this.plan));","\t}","","\tget end() {","\t\tconst end = this._test.bindEndCallback();","\t\tconst endFn = err => end(err, captureStack(endFn));","\t\treturn endFn;","\t}","","\tget title() {","\t\treturn this._test.title;","\t}","","\tget context() {","\t\tconst contextRef = this._test.contextRef;","\t\treturn contextRef && contextRef.context;","\t}","","\tset context(context) {","\t\tconst contextRef = this._test.contextRef;","","\t\tif (!contextRef) {","\t\t\tthis._test.saveFirstError(new Error(`\\`t.context\\` is not available in ${this._test.metadata.type} tests`));","\t\t\treturn;","\t\t}","","\t\tcontextRef.context = context;","\t}","","\t_throwsArgStart(assertion, file, line) {","\t\tthis._test.trackThrows({assertion, file, line});","\t}","\t_throwsArgEnd() {","\t\tthis._test.trackThrows(null);","\t}","}","Object.defineProperty(ExecutionContext.prototype, 'context', {enumerable: true});","","{","\tconst assertions = assert.wrapAssertions({","\t\tpass(executionContext) {","\t\t\texecutionContext._test.countPassedAssertion();","\t\t},","","\t\tpending(executionContext, promise) {","\t\t\texecutionContext._test.addPendingAssertion(promise);","\t\t},","","\t\tfail(executionContext, error) {","\t\t\texecutionContext._test.addFailedAssertion(error);","\t\t}","\t});","\tObject.assign(ExecutionContext.prototype, assertions);","","\tfunction skipFn() {","\t\tthis._test.countPassedAssertion();","\t}","\tObject.keys(assertions).forEach(el => {","\t\tSkipApi.prototype[el] = skipFn;","\t});","}","","class Test {","\tconstructor(options) {","\t\tthis.contextRef = options.contextRef;","\t\tthis.failWithoutAssertions = options.failWithoutAssertions;","\t\tthis.fn = isGeneratorFn(options.fn) ? co.wrap(options.fn) : options.fn;","\t\tthis.getSnapshotState = options.getSnapshotState;","\t\tthis.metadata = options.metadata;","\t\tthis.onResult = options.onResult;","\t\tthis.title = options.title;","","\t\tthis.assertCount = 0;","\t\tthis.assertError = undefined;","\t\tthis.calledEnd = false;","\t\tthis.duration = null;","\t\tthis.endCallbackFinisher = null;","\t\tthis.finishDueToAttributedError = null;","\t\tthis.finishDueToInactivity = null;","\t\tthis.finishing = false;","\t\tthis.pendingAssertionCount = 0;","\t\tthis.pendingThrowsAssertion = null;","\t\tthis.planCount = null;","\t\tthis.startedAt = 0;","\t}","","\tbindEndCallback() {","\t\tif (this.metadata.callback) {","\t\t\treturn (err, stack) => {","\t\t\t\tthis.endCallback(err, stack);","\t\t\t};","\t\t}","","\t\tthrow new Error('`t.end()`` is not supported in this context. To use `t.end()` as a callback, you must use \"callback mode\" via `test.cb(testName, fn)`');","\t}","","\tendCallback(err, stack) {","\t\tif (this.calledEnd) {","\t\t\tthis.saveFirstError(new Error('`t.end()` called more than once'));","\t\t\treturn;","\t\t}","\t\tthis.calledEnd = true;","","\t\tif (err) {","\t\t\tthis.saveFirstError(new assert.AssertionError({","\t\t\t\tactual: err,","\t\t\t\tmessage: 'Callback called with an error',","\t\t\t\tstack,","\t\t\t\tvalues: [formatAssertError.formatWithLabel('Error:', err)]","\t\t\t}));","\t\t}","","\t\tif (this.endCallbackFinisher) {","\t\t\tthis.endCallbackFinisher();","\t\t}","\t}","","\tcreateExecutionContext() {","\t\treturn new ExecutionContext(this);","\t}","","\tcountPassedAssertion() {","\t\tif (this.finishing) {","\t\t\tthis.saveFirstError(new Error('Assertion passed, but test has already finished'));","\t\t}","","\t\tthis.assertCount++;","\t}","","\taddPendingAssertion(promise) {","\t\tif (this.finishing) {","\t\t\tthis.saveFirstError(new Error('Assertion passed, but test has already finished'));","\t\t}","","\t\tthis.assertCount++;","\t\tthis.pendingAssertionCount++;","\t\tpromise","\t\t\t.catch(err => this.saveFirstError(err))","\t\t\t.then(() => this.pendingAssertionCount--);","\t}","","\taddFailedAssertion(error) {","\t\tif (this.finishing) {","\t\t\tthis.saveFirstError(new Error('Assertion failed, but test has already finished'));","\t\t}","","\t\tthis.assertCount++;","\t\tthis.saveFirstError(error);","\t}","","\tsaveFirstError(err) {","\t\tif (!this.assertError) {","\t\t\tthis.assertError = err;","\t\t}","\t}","","\tplan(count, planStack) {","\t\tif (typeof count !== 'number') {","\t\t\tthrow new TypeError('Expected a number');","\t\t}","","\t\tthis.planCount = count;","","\t\t// In case the `planCount` doesn't match `assertCount, we need the stack of","\t\t// this function to throw with a useful stack.","\t\tthis.planStack = planStack;","\t}","","\tverifyPlan() {","\t\tif (!this.assertError && this.planCount !== null && this.planCount !== this.assertCount) {","\t\t\tthis.saveFirstError(new assert.AssertionError({","\t\t\t\tassertion: 'plan',","\t\t\t\tmessage: `Planned for ${this.planCount} ${plur('assertion', this.planCount)}, but got ${this.assertCount}.`,","\t\t\t\toperator: '===',","\t\t\t\tstack: this.planStack","\t\t\t}));","\t\t}","\t}","","\tverifyAssertions() {","\t\tif (!this.assertError) {","\t\t\tif (this.failWithoutAssertions && !this.calledEnd && this.planCount === null && this.assertCount === 0) {","\t\t\t\tthis.saveFirstError(new Error('Test finished without running any assertions'));","\t\t\t} else if (this.pendingAssertionCount > 0) {","\t\t\t\tthis.saveFirstError(new Error('Test finished, but an assertion is still pending'));","\t\t\t}","\t\t}","\t}","","\ttrackThrows(pending) {","\t\tthis.pendingThrowsAssertion = pending;","\t}","","\tdetectImproperThrows(err) {","\t\tif (!this.pendingThrowsAssertion) {","\t\t\treturn false;","\t\t}","","\t\tconst pending = this.pendingThrowsAssertion;","\t\tthis.pendingThrowsAssertion = null;","","\t\tconst values = [];","\t\tif (err) {","\t\t\tvalues.push(formatAssertError.formatWithLabel(`The following error was thrown, possibly before \\`t.${pending.assertion}()\\` could be called:`, err));","\t\t}","","\t\tthis.saveFirstError(new assert.AssertionError({","\t\t\tassertion: pending.assertion,","\t\t\tfixedSource: {file: pending.file, line: pending.line},","\t\t\timproperUsage: true,","\t\t\tmessage: `Improper usage of \\`t.${pending.assertion}()\\` detected`,","\t\t\tstack: err instanceof Error && err.stack,","\t\t\tvalues","\t\t}));","\t\treturn true;","\t}","","\twaitForPendingThrowsAssertion() {","\t\treturn new Promise(resolve => {","\t\t\tthis.finishDueToAttributedError = () => {","\t\t\t\tresolve(this.finishPromised());","\t\t\t};","","\t\t\tthis.finishDueToInactivity = () => {","\t\t\t\tthis.detectImproperThrows();","\t\t\t\tresolve(this.finishPromised());","\t\t\t};","","\t\t\t// Wait up to a second to see if an error can be attributed to the","\t\t\t// pending assertion.","\t\t\tglobals.setTimeout(() => this.finishDueToInactivity(), 1000).unref();","\t\t});","\t}","","\tattributeLeakedError(err) {","\t\tif (!this.detectImproperThrows(err)) {","\t\t\treturn false;","\t\t}","","\t\tthis.finishDueToAttributedError();","\t\treturn true;","\t}","","\tcallFn() {","\t\ttry {","\t\t\treturn {","\t\t\t\tok: true,","\t\t\t\tretval: this.fn(this.createExecutionContext())","\t\t\t};","\t\t} catch (err) {","\t\t\treturn {","\t\t\t\tok: false,","\t\t\t\terror: err","\t\t\t};","\t\t}","\t}","","\trun() {","\t\tthis.startedAt = globals.now();","","\t\tconst result = this.callFn();","\t\tif (!result.ok) {","\t\t\tif (!this.detectImproperThrows(result.error)) {","\t\t\t\tthis.saveFirstError(new assert.AssertionError({","\t\t\t\t\tmessage: 'Error thrown in test',","\t\t\t\t\tstack: result.error instanceof Error && result.error.stack,","\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Error:', result.error)]","\t\t\t\t}));","\t\t\t}","\t\t\treturn this.finish();","\t\t}","","\t\tconst returnedObservable = isObservable(result.retval);","\t\tconst returnedPromise = isPromise(result.retval);","","\t\tlet promise;","\t\tif (returnedObservable) {","\t\t\tpromise = observableToPromise(result.retval);","\t\t} else if (returnedPromise) {","\t\t\t// `retval` can be any thenable, so convert to a proper promise.","\t\t\tpromise = Promise.resolve(result.retval);","\t\t}","","\t\tif (this.metadata.callback) {","\t\t\tif (returnedObservable || returnedPromise) {","\t\t\t\tconst asyncType = returnedObservable ? 'observables' : 'promises';","\t\t\t\tthis.saveFirstError(new Error(`Do not return ${asyncType} from tests declared via \\`test.cb(...)\\`, if you want to return a promise simply declare the test via \\`test(...)\\``));","\t\t\t\treturn this.finish();","\t\t\t}","","\t\t\tif (this.calledEnd) {","\t\t\t\treturn this.finish();","\t\t\t}","","\t\t\treturn new Promise(resolve => {","\t\t\t\tthis.endCallbackFinisher = () => {","\t\t\t\t\tresolve(this.finishPromised());","\t\t\t\t};","","\t\t\t\tthis.finishDueToAttributedError = () => {","\t\t\t\t\tresolve(this.finishPromised());","\t\t\t\t};","","\t\t\t\tthis.finishDueToInactivity = () => {","\t\t\t\t\tthis.saveFirstError(new Error('`t.end()` was never called'));","\t\t\t\t\tresolve(this.finishPromised());","\t\t\t\t};","\t\t\t});","\t\t}","","\t\tif (promise) {","\t\t\treturn new Promise(resolve => {","\t\t\t\tthis.finishDueToAttributedError = () => {","\t\t\t\t\tresolve(this.finishPromised());","\t\t\t\t};","","\t\t\t\tthis.finishDueToInactivity = () => {","\t\t\t\t\tconst err = returnedObservable ?","\t\t\t\t\t\tnew Error('Observable returned by test never completed') :","\t\t\t\t\t\tnew Error('Promise returned by test never resolved');","\t\t\t\t\tthis.saveFirstError(err);","\t\t\t\t\tresolve(this.finishPromised());","\t\t\t\t};","","\t\t\t\tpromise","\t\t\t\t\t.catch(err => {","\t\t\t\t\t\tif (!this.detectImproperThrows(err)) {","\t\t\t\t\t\t\tthis.saveFirstError(new assert.AssertionError({","\t\t\t\t\t\t\t\tmessage: 'Rejected promise returned by test',","\t\t\t\t\t\t\t\tstack: err instanceof Error && err.stack,","\t\t\t\t\t\t\t\tvalues: [formatAssertError.formatWithLabel('Rejection reason:', err)]","\t\t\t\t\t\t\t}));","\t\t\t\t\t\t}","\t\t\t\t\t})","\t\t\t\t\t.then(() => resolve(this.finishPromised()));","\t\t\t});","\t\t}","","\t\treturn this.finish();","\t}","","\tfinish() {","\t\tthis.finishing = true;","","\t\tif (!this.assertError && this.pendingThrowsAssertion) {","\t\t\treturn this.waitForPendingThrowsAssertion();","\t\t}","","\t\tthis.verifyPlan();","\t\tthis.verifyAssertions();","","\t\tthis.duration = globals.now() - this.startedAt;","","\t\tlet reason = this.assertError;","\t\tlet passed = !reason;","","\t\tif (this.metadata.failing) {","\t\t\tpassed = !passed;","","\t\t\tif (passed) {","\t\t\t\treason = undefined;","\t\t\t} else {","\t\t\t\treason = new Error('Test was expected to fail, but succeeded, you should stop marking the test as failing');","\t\t\t}","\t\t}","","\t\tthis.onResult({","\t\t\tpassed,","\t\t\tresult: this,","\t\t\treason","\t\t});","","\t\treturn passed;","\t}","","\tfinishPromised() {","\t\treturn new Promise(resolve => {","\t\t\tresolve(this.finish());","\t\t});","\t}","}","","module.exports = Test;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"14":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"29":0,"30":0,"34":0,"38":0,"39":0,"40":0,"44":0,"48":0,"49":0,"53":0,"55":0,"56":0,"57":0,"60":0,"64":0,"67":0,"70":1,"73":1,"75":0,"79":0,"83":0,"86":1,"88":1,"89":0,"91":1,"92":16,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"121":0,"122":0,"123":0,"127":0,"131":0,"132":0,"133":0,"135":0,"137":0,"138":0,"146":0,"147":0,"152":0,"156":0,"157":0,"160":0,"164":0,"165":0,"168":0,"169":0,"170":0,"171":0,"172":0,"176":0,"177":0,"180":0,"181":0,"185":0,"186":0,"191":0,"192":0,"195":0,"199":0,"203":0,"204":0,"214":0,"215":0,"216":0,"217":0,"218":0,"224":0,"228":0,"229":0,"232":0,"233":0,"235":0,"236":0,"237":0,"240":0,"248":0,"252":0,"253":0,"254":0,"257":0,"258":0,"259":0,"264":0,"269":0,"270":0,"273":0,"274":0,"278":0,"279":0,"284":0,"292":0,"294":0,"295":0,"296":0,"297":0,"303":0,"306":0,"307":0,"309":0,"310":0,"311":0,"312":0,"314":0,"317":0,"318":0,"319":0,"320":0,"321":0,"324":0,"325":0,"328":0,"329":0,"330":0,"333":0,"334":0,"337":0,"338":0,"339":0,"344":0,"345":0,"346":0,"347":0,"350":0,"351":0,"354":0,"355":0,"358":0,"360":0,"361":0,"368":0,"372":0,"376":0,"378":0,"379":0,"382":0,"383":0,"385":0,"387":0,"388":0,"390":0,"391":0,"393":0,"394":0,"396":0,"400":0,"406":0,"410":0,"411":0,"416":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/validate-test.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/validate-test.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"validate","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":46,"column":1}},"2":{"start":{"line":4,"column":1},"end":{"line":16,"column":2}},"3":{"start":{"line":5,"column":2},"end":{"line":7,"column":3}},"4":{"start":{"line":6,"column":3},"end":{"line":6,"column":67}},"5":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"6":{"start":{"line":10,"column":3},"end":{"line":10,"column":70}},"7":{"start":{"line":13,"column":2},"end":{"line":15,"column":3}},"8":{"start":{"line":14,"column":3},"end":{"line":14,"column":91}},"9":{"start":{"line":18,"column":1},"end":{"line":33,"column":2}},"10":{"start":{"line":19,"column":2},"end":{"line":22,"column":3}},"11":{"start":{"line":20,"column":3},"end":{"line":21,"column":53}},"12":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"13":{"start":{"line":25,"column":3},"end":{"line":25,"column":41}},"14":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"15":{"start":{"line":29,"column":3},"end":{"line":29,"column":105}},"16":{"start":{"line":31,"column":8},"end":{"line":33,"column":2}},"17":{"start":{"line":32,"column":2},"end":{"line":32,"column":94}},"18":{"start":{"line":35,"column":1},"end":{"line":39,"column":2}},"19":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"20":{"start":{"line":37,"column":3},"end":{"line":37,"column":67}},"21":{"start":{"line":41,"column":1},"end":{"line":43,"column":2}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":42}},"23":{"start":{"line":45,"column":1},"end":{"line":45,"column":13}},"24":{"start":{"line":48,"column":0},"end":{"line":48,"column":26}}},"branchMap":{"1":{"line":4,"type":"if","locations":[{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},{"start":{"line":4,"column":1},"end":{"line":4,"column":1}}]},"2":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":2},"end":{"line":5,"column":2}},{"start":{"line":5,"column":2},"end":{"line":5,"column":2}}]},"3":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"4":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},{"start":{"line":18,"column":1},"end":{"line":18,"column":1}}]},"6":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"7":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"8":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"9":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":22}},{"start":{"line":28,"column":26},"end":{"line":28,"column":42}},{"start":{"line":28,"column":46},"end":{"line":28,"column":64}}]},"10":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"11":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},{"start":{"line":35,"column":1},"end":{"line":35,"column":1}}]},"12":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"13":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":66}}]},"14":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},{"start":{"line":41,"column":1},"end":{"line":41,"column":1}}]},"15":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":5},"end":{"line":41,"column":21}},{"start":{"line":41,"column":25},"end":{"line":41,"column":43}}]}},"code":["'use strict';","","function validate(title, fn, metadata) {","\tif (metadata.type !== 'test') {","\t\tif (metadata.exclusive) {","\t\t\treturn '`only` is only for tests and cannot be used with hooks';","\t\t}","","\t\tif (metadata.failing) {","\t\t\treturn '`failing` is only for tests and cannot be used with hooks';","\t\t}","","\t\tif (metadata.todo) {","\t\t\treturn '`todo` is only for documentation of future tests and cannot be used with hooks';","\t\t}","\t}","","\tif (metadata.todo) {","\t\tif (typeof fn === 'function') {","\t\t\treturn '`todo` tests are not allowed to have an implementation. Use ' +","\t\t\t'`test.skip()` for tests with an implementation.';","\t\t}","","\t\tif (typeof title !== 'string') {","\t\t\treturn '`todo` tests require a title';","\t\t}","","\t\tif (metadata.skipped || metadata.failing || metadata.exclusive) {","\t\t\treturn '`todo` tests are just for documentation and cannot be used with `skip`, `only`, or `failing`';","\t\t}","\t} else if (typeof fn !== 'function') {","\t\treturn 'Expected an implementation. Use `test.todo()` for tests without an implementation.';","\t}","","\tif (metadata.always) {","\t\tif (!(metadata.type === 'after' || metadata.type === 'afterEach')) {","\t\t\treturn '`always` can only be used with `after` and `afterEach`';","\t\t}","\t}","","\tif (metadata.skipped && metadata.exclusive) {","\t\treturn '`only` tests cannot be skipped';","\t}","","\treturn null;","}","","module.exports = validate;",""],"l":{"3":1,"4":0,"5":0,"6":0,"9":0,"10":0,"13":0,"14":0,"18":0,"19":0,"20":0,"24":0,"25":0,"28":0,"29":0,"31":0,"32":0,"35":0,"36":0,"37":0,"41":0,"42":0,"45":0,"48":1}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/serialize-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/lib/serialize-error.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"isAvaAssertionError","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"2":{"name":"filter","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"3":{"name":"extractSource","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}}},"4":{"name":"buildSource","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":29}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"7":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"8":{"start":{"line":10,"column":1},"end":{"line":10,"column":48}},"9":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"10":{"start":{"line":14,"column":1},"end":{"line":14,"column":103}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":36}},"12":{"start":{"line":18,"column":0},"end":{"line":25,"column":1}},"13":{"start":{"line":19,"column":1},"end":{"line":21,"column":2}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":14}},"15":{"start":{"line":23,"column":1},"end":{"line":23,"column":59}},"16":{"start":{"line":24,"column":1},"end":{"line":24,"column":45}},"17":{"start":{"line":26,"column":0},"end":{"line":48,"column":1}},"18":{"start":{"line":27,"column":1},"end":{"line":29,"column":2}},"19":{"start":{"line":28,"column":2},"end":{"line":28,"column":14}},"20":{"start":{"line":34,"column":1},"end":{"line":34,"column":34}},"21":{"start":{"line":36,"column":1},"end":{"line":36,"column":59}},"22":{"start":{"line":37,"column":1},"end":{"line":37,"column":45}},"23":{"start":{"line":39,"column":1},"end":{"line":39,"column":57}},"24":{"start":{"line":40,"column":1},"end":{"line":40,"column":104}},"25":{"start":{"line":42,"column":1},"end":{"line":47,"column":3}},"26":{"start":{"line":50,"column":0},"end":{"line":94,"column":2}},"27":{"start":{"line":51,"column":1},"end":{"line":53,"column":7}},"28":{"start":{"line":55,"column":1},"end":{"line":58,"column":3}},"29":{"start":{"line":59,"column":1},"end":{"line":61,"column":2}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":23}},"31":{"start":{"line":63,"column":1},"end":{"line":91,"column":2}},"32":{"start":{"line":64,"column":2},"end":{"line":64,"column":45}},"33":{"start":{"line":65,"column":2},"end":{"line":65,"column":33}},"34":{"start":{"line":66,"column":2},"end":{"line":66,"column":27}},"35":{"start":{"line":67,"column":2},"end":{"line":67,"column":39}},"36":{"start":{"line":68,"column":2},"end":{"line":68,"column":31}},"37":{"start":{"line":70,"column":2},"end":{"line":75,"column":3}},"38":{"start":{"line":71,"column":3},"end":{"line":71,"column":49}},"39":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"40":{"start":{"line":73,"column":4},"end":{"line":73,"column":27}},"41":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"42":{"start":{"line":78,"column":3},"end":{"line":78,"column":38}},"43":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"44":{"start":{"line":81,"column":3},"end":{"line":81,"column":36}},"45":{"start":{"line":84,"column":2},"end":{"line":84,"column":49}},"46":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"47":{"start":{"line":86,"column":3},"end":{"line":86,"column":34}},"48":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"49":{"start":{"line":89,"column":3},"end":{"line":89,"column":28}},"50":{"start":{"line":93,"column":1},"end":{"line":93,"column":15}}},"branchMap":{"1":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":15}},{"start":{"line":14,"column":20},"end":{"line":14,"column":46}},{"start":{"line":14,"column":50},"end":{"line":14,"column":73}},{"start":{"line":14,"column":77},"end":{"line":14,"column":101}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},{"start":{"line":19,"column":1},"end":{"line":19,"column":1}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},{"start":{"line":27,"column":1},"end":{"line":27,"column":1}}]},"4":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":22},"end":{"line":40,"column":37}},{"start":{"line":40,"column":41},"end":{"line":40,"column":103}}]},"5":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":28}},{"start":{"line":53,"column":2},"end":{"line":53,"column":6}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":1},"end":{"line":59,"column":1}},{"start":{"line":59,"column":1},"end":{"line":59,"column":1}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":1},"end":{"line":63,"column":1}},{"start":{"line":63,"column":1},"end":{"line":63,"column":1}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":3}},{"start":{"line":72,"column":3},"end":{"line":72,"column":3}}]},"10":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"12":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"13":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]}},"code":["'use strict';","const path = require('path');","const cleanYamlObject = require('clean-yaml-object');","const StackUtils = require('stack-utils');","const assert = require('./assert');","const beautifyStack = require('./beautify-stack');","const extractStack = require('./extract-stack');","","function isAvaAssertionError(source) {","\treturn source instanceof assert.AssertionError;","}","","function filter(propertyName, isRoot) {","\treturn !isRoot || (propertyName !== 'message' && propertyName !== 'name' && propertyName !== 'stack');","}","","const stackUtils = new StackUtils();","function extractSource(stack) {","\tif (!stack) {","\t\treturn null;","\t}","","\tconst firstStackLine = extractStack(stack).split('\\n')[0];","\treturn stackUtils.parseLine(firstStackLine);","}","function buildSource(source) {","\tif (!source) {","\t\treturn null;","\t}","","\t// Assume the CWD is the project directory. This holds since this function","\t// is only called in test workers, which are created with their working","\t// directory set to the project directory.","\tconst projectDir = process.cwd();","","\tconst file = path.resolve(projectDir, source.file.trim());","\tconst rel = path.relative(projectDir, file);","","\tconst isWithinProject = rel.split(path.sep)[0] !== '..';","\tconst isDependency = isWithinProject && path.dirname(rel).split(path.sep).indexOf('node_modules') > -1;","","\treturn {","\t\tisDependency,","\t\tisWithinProject,","\t\tfile,","\t\tline: source.line","\t};","}","","module.exports = error => {","\tconst stack = typeof error.stack === 'string' ?","\t\tbeautifyStack(error.stack) :","\t\tnull;","","\tconst retval = {","\t\tavaAssertionError: isAvaAssertionError(error),","\t\tsource: buildSource(extractSource(stack))","\t};","\tif (stack) {","\t\tretval.stack = stack;","\t}","","\tif (retval.avaAssertionError) {","\t\tretval.improperUsage = error.improperUsage;","\t\tretval.message = error.message;","\t\tretval.name = error.name;","\t\tretval.statements = error.statements;","\t\tretval.values = error.values;","","\t\tif (error.fixedSource) {","\t\t\tconst source = buildSource(error.fixedSource);","\t\t\tif (source) {","\t\t\t\tretval.source = source;","\t\t\t}","\t\t}","","\t\tif (error.assertion) {","\t\t\tretval.assertion = error.assertion;","\t\t}","\t\tif (error.operator) {","\t\t\tretval.operator = error.operator;","\t\t}","\t} else {","\t\tretval.object = cleanYamlObject(error, filter); // Cleanly copy non-standard properties","\t\tif (typeof error.message === 'string') {","\t\t\tretval.message = error.message;","\t\t}","\t\tif (typeof error.name === 'string') {","\t\t\tretval.name = error.name;","\t\t}","\t}","","\treturn retval;","};",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"13":1,"14":0,"17":1,"18":1,"19":0,"20":0,"23":0,"24":0,"26":1,"27":0,"28":0,"34":0,"36":0,"37":0,"39":0,"40":0,"42":0,"50":1,"51":0,"55":0,"59":0,"60":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"72":0,"73":0,"77":0,"78":0,"80":0,"81":0,"84":0,"85":0,"86":0,"88":0,"89":0,"93":0}},"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/types/make.js":{"path":"/home/travis/build/npmtest/node-npmtest-ava/node_modules/ava/types/make.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"generatePrefixed","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"2":{"name":"verify","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":33}}},"3":{"name":"hasChildren","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":28}}},"4":{"name":"exists","line":165,"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":23}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":61}},"6":{"start":{"line":20,"column":26},"end":{"line":20,"column":60}},"7":{"start":{"line":20,"column":34},"end":{"line":20,"column":60}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":72}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":83}},"10":{"start":{"line":25,"column":66},"end":{"line":25,"column":81}},"11":{"start":{"line":29,"column":0},"end":{"line":29,"column":43}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":65}},"13":{"start":{"line":35,"column":0},"end":{"line":108,"column":1}},"14":{"start":{"line":36,"column":1},"end":{"line":36,"column":17}},"15":{"start":{"line":37,"column":1},"end":{"line":37,"column":19}},"16":{"start":{"line":39,"column":1},"end":{"line":94,"column":2}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":38}},"18":{"start":{"line":42,"column":2},"end":{"line":45,"column":3}},"19":{"start":{"line":44,"column":3},"end":{"line":44,"column":12}},"20":{"start":{"line":48,"column":2},"end":{"line":67,"column":3}},"21":{"start":{"line":49,"column":3},"end":{"line":64,"column":4}},"22":{"start":{"line":50,"column":4},"end":{"line":50,"column":17}},"23":{"start":{"line":52,"column":4},"end":{"line":52,"column":14}},"24":{"start":{"line":53,"column":4},"end":{"line":61,"column":5}},"25":{"start":{"line":54,"column":5},"end":{"line":54,"column":37}},"26":{"start":{"line":58,"column":5},"end":{"line":58,"column":30}},"27":{"start":{"line":59,"column":5},"end":{"line":59,"column":36}},"28":{"start":{"line":60,"column":5},"end":{"line":60,"column":39}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":48}},"30":{"start":{"line":66,"column":3},"end":{"line":66,"column":12}},"31":{"start":{"line":72,"column":2},"end":{"line":91,"column":3}},"32":{"start":{"line":73,"column":3},"end":{"line":90,"column":4}},"33":{"start":{"line":75,"column":4},"end":{"line":75,"column":53}},"34":{"start":{"line":77,"column":4},"end":{"line":81,"column":5}},"35":{"start":{"line":78,"column":5},"end":{"line":78,"column":52}},"36":{"start":{"line":80,"column":5},"end":{"line":80,"column":44}},"37":{"start":{"line":83,"column":4},"end":{"line":87,"column":5}},"38":{"start":{"line":85,"column":5},"end":{"line":85,"column":36}},"39":{"start":{"line":86,"column":5},"end":{"line":86,"column":42}},"40":{"start":{"line":89,"column":4},"end":{"line":89,"column":20}},"41":{"start":{"line":93,"column":2},"end":{"line":93,"column":38}},"42":{"start":{"line":96,"column":1},"end":{"line":98,"column":2}},"43":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"44":{"start":{"line":100,"column":1},"end":{"line":100,"column":47}},"45":{"start":{"line":102,"column":1},"end":{"line":105,"column":2}},"46":{"start":{"line":104,"column":2},"end":{"line":104,"column":76}},"47":{"start":{"line":106,"column":1},"end":{"line":106,"column":57}},"48":{"start":{"line":107,"column":1},"end":{"line":107,"column":48}},"49":{"start":{"line":114,"column":0},"end":{"line":151,"column":1}},"50":{"start":{"line":115,"column":1},"end":{"line":115,"column":29}},"51":{"start":{"line":117,"column":1},"end":{"line":119,"column":2}},"52":{"start":{"line":118,"column":2},"end":{"line":118,"column":15}},"53":{"start":{"line":121,"column":1},"end":{"line":121,"column":94}},"54":{"start":{"line":123,"column":1},"end":{"line":125,"column":2}},"55":{"start":{"line":124,"column":2},"end":{"line":124,"column":15}},"56":{"start":{"line":127,"column":1},"end":{"line":131,"column":2}},"57":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"58":{"start":{"line":129,"column":3},"end":{"line":129,"column":16}},"59":{"start":{"line":133,"column":1},"end":{"line":148,"column":2}},"60":{"start":{"line":136,"column":2},"end":{"line":138,"column":3}},"61":{"start":{"line":137,"column":3},"end":{"line":137,"column":15}},"62":{"start":{"line":140,"column":2},"end":{"line":144,"column":3}},"63":{"start":{"line":143,"column":3},"end":{"line":143,"column":16}},"64":{"start":{"line":147,"column":2},"end":{"line":147,"column":18}},"65":{"start":{"line":150,"column":1},"end":{"line":150,"column":13}},"66":{"start":{"line":154,"column":0},"end":{"line":162,"column":1}},"67":{"start":{"line":156,"column":1},"end":{"line":159,"column":43}},"68":{"start":{"line":157,"column":21},"end":{"line":157,"column":50}},"69":{"start":{"line":158,"column":18},"end":{"line":158,"column":41}},"70":{"start":{"line":159,"column":20},"end":{"line":159,"column":41}},"71":{"start":{"line":161,"column":1},"end":{"line":161,"column":33}},"72":{"start":{"line":165,"column":0},"end":{"line":184,"column":1}},"73":{"start":{"line":166,"column":1},"end":{"line":169,"column":2}},"74":{"start":{"line":168,"column":2},"end":{"line":168,"column":14}},"75":{"start":{"line":171,"column":1},"end":{"line":174,"column":2}},"76":{"start":{"line":173,"column":2},"end":{"line":173,"column":15}},"77":{"start":{"line":177,"column":1},"end":{"line":181,"column":2}},"78":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"79":{"start":{"line":179,"column":3},"end":{"line":179,"column":15}},"80":{"start":{"line":183,"column":1},"end":{"line":183,"column":14}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":33}},{"start":{"line":42,"column":37},"end":{"line":42,"column":57}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":3},"end":{"line":49,"column":3}},{"start":{"line":49,"column":3},"end":{"line":49,"column":3}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":3},"end":{"line":73,"column":3}},{"start":{"line":73,"column":3},"end":{"line":73,"column":3}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"10":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":1},"end":{"line":96,"column":1}},{"start":{"line":96,"column":1},"end":{"line":96,"column":1}}]},"11":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":1},"end":{"line":102,"column":1}},{"start":{"line":102,"column":1},"end":{"line":102,"column":1}}]},"12":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":1},"end":{"line":117,"column":1}},{"start":{"line":117,"column":1},"end":{"line":117,"column":1}}]},"13":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},{"start":{"line":123,"column":1},"end":{"line":123,"column":1}}]},"14":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":1},"end":{"line":127,"column":1}},{"start":{"line":127,"column":1},"end":{"line":127,"column":1}}]},"15":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"16":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":1},"end":{"line":133,"column":1}},{"start":{"line":133,"column":1},"end":{"line":133,"column":1}}]},"17":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"18":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":6},"end":{"line":136,"column":18}},{"start":{"line":136,"column":22},"end":{"line":136,"column":38}}]},"19":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"20":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":45}},{"start":{"line":140,"column":49},"end":{"line":140,"column":92}}]},"21":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":1},"end":{"line":166,"column":1}},{"start":{"line":166,"column":1},"end":{"line":166,"column":1}}]},"22":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":1},"end":{"line":171,"column":1}},{"start":{"line":171,"column":1},"end":{"line":171,"column":1}}]},"23":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"24":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":34}},{"start":{"line":178,"column":38},"end":{"line":178,"column":68}}]}},"code":["'use strict';","","// TypeScript definitions are generated here.","// AVA allows chaining of function names, like `test.after.cb.always`.","// The order of these names is not important.","// Writing these definitions by hand is hard. Because of chaining,","// the number of combinations grows fast (2^n). To reduce this number,","// illegal combinations are filtered out in `verify`.","// The order of the options is not important. We could generate full","// definitions for each possible order, but that would give a very big","// output. Instead, we write an alias for different orders. For instance,","// `after.cb` is fully written, and `cb.after` is emitted as an alias","// using `typeof after.cb`.","","const path = require('path');","const fs = require('fs');","const isArraySorted = require('is-array-sorted');","const Runner = require('../lib/runner');","","const arrayHas = parts => part => parts.indexOf(part) !== -1;","","const base = fs.readFileSync(path.join(__dirname, 'base.d.ts'), 'utf8');","","// All suported function names","const allParts = Object.keys(new Runner({}).chain).filter(name => name !== 'test');","","// The output consists of the base declarations, the actual 'test' function declarations,","// and the namespaced chainable methods.","const output = base + generatePrefixed([]);","","fs.writeFileSync(path.join(__dirname, 'generated.d.ts'), output);","","// Generates type definitions, for the specified prefix","// The prefix is an array of function names","function generatePrefixed(prefix) {","\tlet output = '';","\tlet children = '';","","\tfor (const part of allParts) {","\t\tconst parts = prefix.concat([part]);","","\t\tif (prefix.indexOf(part) !== -1 || !verify(parts, true)) {","\t\t\t// Function already in prefix or not allowed here","\t\t\tcontinue;","\t\t}","","\t\t// If `parts` is not sorted, we alias it to the sorted chain","\t\tif (!isArraySorted(parts)) {","\t\t\tif (exists(parts)) {","\t\t\t\tparts.sort();","","\t\t\t\tlet chain;","\t\t\t\tif (hasChildren(parts)) {","\t\t\t\t\tchain = parts.join('_') + '<T>';","\t\t\t\t} else {","\t\t\t\t\t// This is a single function, not a namespace, so there's no type associated","\t\t\t\t\t// and we need to dereference it as a property type","\t\t\t\t\tconst last = parts.pop();","\t\t\t\t\tconst joined = parts.join('_');","\t\t\t\t\tchain = `${joined}<T>['${last}']`;","\t\t\t\t}","","\t\t\t\toutput += `\\t${part}: Register_${chain};\\n`;","\t\t\t}","","\t\t\tcontinue;","\t\t}","","\t\t// Check that `part` is a valid function name.","\t\t// `always` is a valid prefix, for instance of `always.after`,","\t\t// but not a valid function name.","\t\tif (verify(parts, false)) {","\t\t\tif (arrayHas(parts)('todo')) {","\t\t\t\t// 'todo' functions don't have a function argument, just a string","\t\t\t\toutput += `\\t${part}: (name: string) => void;\\n`;","\t\t\t} else {","\t\t\t\tif (arrayHas(parts)('cb')) {","\t\t\t\t\toutput += `\\t${part}: CallbackRegisterBase<T>`;","\t\t\t\t} else {","\t\t\t\t\toutput += `\\t${part}: RegisterBase<T>`;","\t\t\t\t}","","\t\t\t\tif (hasChildren(parts)) {","\t\t\t\t\t// This chain can be continued, make the property an intersection type with the chain continuation","\t\t\t\t\tconst joined = parts.join('_');","\t\t\t\t\toutput += ` & Register_${joined}<T>`;","\t\t\t\t}","","\t\t\t\toutput += ';\\n';","\t\t\t}","\t\t}","","\t\tchildren += generatePrefixed(parts);","\t}","","\tif (output === '') {","\t\treturn children;","\t}","","\tconst typeBody = `{\\n${output}}\\n${children}`;","","\tif (prefix.length === 0) {","\t\t// No prefix, so this is the type for the default export","\t\treturn `export interface Register<T> extends RegisterBase<T> ${typeBody}`;","\t}","\tconst namespace = ['Register'].concat(prefix).join('_');","\treturn `interface ${namespace}<T> ${typeBody}`;","}","","// Checks whether a chain is a valid function name (when `asPrefix === false`)","// or a valid prefix that could contain members.","// For instance, `test.always` is not a valid function name, but it is a valid","// prefix of `test.always.after`.","function verify(parts, asPrefix) {","\tconst has = arrayHas(parts);","","\tif (has('only') + has('skip') + has('todo') > 1) {","\t\treturn false;","\t}","","\tconst beforeAfterCount = has('before') + has('beforeEach') + has('after') + has('afterEach');","","\tif (beforeAfterCount > 1) {","\t\treturn false;","\t}","","\tif (beforeAfterCount === 1) {","\t\tif (has('only')) {","\t\t\treturn false;","\t\t}","\t}","","\tif (has('always')) {","\t\t// `always` can only be used with `after` or `afterEach`.","\t\t// Without it can still be a valid prefix","\t\tif (has('after') || has('afterEach')) {","\t\t\treturn true;","\t\t}","","\t\tif (!verify(parts.concat(['after']), false) && !verify(parts.concat(['afterEach']), false)) {","\t\t\t// If `after` nor `afterEach` cannot be added to this prefix,","\t\t\t// `always` is not allowed here.","\t\t\treturn false;","\t\t}","","\t\t// Only allowed as a prefix","\t\treturn asPrefix;","\t}","","\treturn true;","}","","// Returns true if a chain can have any child properties","function hasChildren(parts) {","\t// Concatenate the chain with each other part, and see if any concatenations are valid functions","\tconst validChildren = allParts","\t\t.filter(newPart => parts.indexOf(newPart) === -1)","\t\t.map(newPart => parts.concat([newPart]))","\t\t.filter(longer => verify(longer, false));","","\treturn validChildren.length > 0;","}","","// Checks whether a chain is a valid function name or a valid prefix with some member","function exists(parts) {","\tif (verify(parts, false)) {","\t\t// Valid function name","\t\treturn true;","\t}","","\tif (!verify(parts, true)) {","\t\t// Not valid prefix","\t\treturn false;","\t}","","\t// Valid prefix, check whether it has members","\tfor (const prefix of allParts) {","\t\tif (parts.indexOf(prefix) === -1 && exists(parts.concat([prefix]))) {","\t\t\treturn true;","\t\t}","\t}","","\treturn false;","}",""],"l":{"15":2,"16":2,"17":2,"18":0,"20":0,"22":0,"25":0,"29":0,"31":0,"35":1,"36":0,"37":0,"39":0,"40":0,"42":0,"44":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"58":0,"59":0,"60":0,"63":0,"66":0,"72":0,"73":0,"75":0,"77":0,"78":0,"80":0,"83":0,"85":0,"86":0,"89":0,"93":0,"96":0,"97":0,"100":0,"102":0,"104":0,"106":0,"107":0,"114":1,"115":0,"117":0,"118":0,"121":0,"123":0,"124":0,"127":0,"128":0,"129":0,"133":0,"136":0,"137":0,"140":0,"143":0,"147":0,"150":0,"154":1,"156":0,"157":0,"158":0,"159":0,"161":0,"165":1,"166":0,"168":0,"171":0,"173":0,"177":0,"178":0,"179":0,"183":0}}}